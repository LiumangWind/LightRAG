{
  "nodes": [
    {
      "id": "HARDWARE DESIGN REVIEW FOR ZEROIZATION MITIGATION",
      "entity_type": "MITIGATION",
      "description": "\"Security teams should review and ensure proper mechanisms for clearing sensitive information stored in hardware registers.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "CLEARING LOCK BITS AND EXPLOITING RACE CONDITIONS ",
      "entity_type": "PRECONDITION",
      "description": "\"Adversaries may attempt to clear lock bits or exploit race conditions in the security mechanisms as prerequisites for carrying out attacks.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "SECURITY TESTING AND COMPLIANCE REVIEW MITIGATION",
      "entity_type": "MITIGATION",
      "description": "\"Conducting thorough testing and ensuring compliance with security standards like FIPS-140-2 to mitigate vulnerabilities.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "SECURITY-SENSITIVE SETTINGS INITIALIZATION",
      "entity_type": "MITIGATION",
      "description": "\"The default values of these security-sensitive settings need to be defined as part of the design review phase.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "SECURITY LOCK BIT PROTECTION SOFTWARE TOOL",
      "entity_type": "SOFTWARE",
      "description": "\"Tool designed to prevent unauthorized access and modification of system configuration through security lock bit protections.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "TRUSTED FIRMWARE/BOOTLOADER",
      "entity_type": "SOFTWARE",
      "description": "\"The trusted firmware or software module that initializes system settings during hardware reset, setting lock bits and other secure configurations.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "MEMORY MANAGEMENT FAILURE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Improperly clearing memory before reuse can lead to sensitive information being exposed.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "UNAUTHORIZED ACTORS",
      "entity_type": "ATTACKER",
      "description": "\"Unauthorized actors can intercept and read cleartext transmissions of sensitive information over communication channels.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "BYPASSING SECURITY LOCK BITS ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting the design flaw that allows bypassing the protection mechanism on hardware's security lock bits.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "ADVERSARY (ATTACKER)",
      "entity_type": "ATTACKER",
      "description": "\"An entity that may exploit weaknesses in hardware lock bits to modify system configuration settings.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "CWE-226:INCORRECT DEFAULT PERMISSIONS",
      "entity_type": "VULNERABILITY",
      "description": "\"Installed file permissions are set in a way that allows anyone to modify the files, leading to potential unauthorized access.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "MONITORING TOOLS (E.G., TRUSS, STRACE)",
      "entity_type": "SOFTWARE",
      "description": "\"Monitoring tools are used to examine a software's interaction with the operating system and network in real-time or from recorded data dumps.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "ACCESSING SENSITIVE INFORMATION VIA REGISTER BYPASS TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic is to access sensitive information through improperly zeroized hardware registers.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "UNAUTHORIZED DATA ACCESS THROUGH DEBUG INTERFACE EXPLOITATION",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves gaining unauthorized access to internal data through improperly managed debug interfaces during system execution.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "SNIFFING NETWORK TRAFFIC",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves unauthorized actors intercepting cleartext transmissions of sensitive information over communication channels.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "CLEARING SENSITIVE INFORMATION FROM REGISTERS SOFTWARE TOOL",
      "entity_type": "SOFTWARE",
      "description": "\"A tool or mechanism used by attackers or security teams to clear sensitive data from hardware registers.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "SYSTEM CONFIGURATION INITIALIZATION PHASE",
      "entity_type": "PRECONDITION",
      "description": "\"The initial boot phase during which system configuration settings are set to secure values and hardware protections are applied.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "CLEARTEXT TRANSMISSION EXPLOITATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Unauthorized actors exploit the lack of encryption in transmitted data to read and misuse sensitive information.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "BYPASSING SECURITY LOCK BIT PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where an adversary seeks to bypass security measures implemented through hardware lock bits to modify system configurations.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "CWE ID 284: IMPROPER LOCKING AFTER POWER TRANSITION",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where the protection mechanism fails to maintain lock bit status across power state transitions, allowing for reprogramming.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "IMPROPER ZEROIZATION VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"Hardware registers do not properly clear sensitive information when a user changes, leading to potential exposure of data.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "USE ENCRYPTION FOR DATA TRANSMISSION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing strong encryption protocols mitigates the risk of unauthorized access to cleartext transmissions.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "SENSITIVE INFORMATION EXPOSURE ",
      "entity_type": "TACTIC",
      "description": "\"The tactic of exposing sensitive information through vulnerabilities in various products or services.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where hardware lock bit protections are ineffective, allowing unauthorized modifications of system configurations even when locks should be set.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "MAINTAIN CONFIDENTIALITY AND INTEGRITY",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves ensuring that sensitive data remains confidential and its integrity is maintained during transmission.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "BROWSER FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2005-0918) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Browsers allow attackers to infer file existence based on how quickly the page stops loading after setting src properties.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "OWASP TOP TEN 2007 A8 INSECURE CRYPTOGRAPHIC STORAGE",
      "entity_type": "MITIGATION",
      "description": "\"Guidelines provided by OWASP to improve secure storage practices for cryptographic material.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "CLEARING RESOURCES BEFORE REUSE ",
      "entity_type": "MITIGATION",
      "description": "\"A mitigation technique involves clearing sensitive information from released resources before reuse to prevent leakage of data.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO CONFIGURATION INFORMATION TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves gaining unauthorized access to system configuration information for malicious purposes.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "LACK OF ENCRYPTION OR INSECURE PERMISSIONS",
      "entity_type": "PRECONDITION",
      "description": "\"A lack of encryption or insecure permissions on files are prerequisites for unauthorized actors to exploit cleartext transmissions.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "PRODUCT RESOURCE HANDLING ISSUES ",
      "entity_type": "TARGET ENTITY",
      "description": "\"Various products and services have issues with resource handling, leading to potential information leakage vulnerabilities.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "HDL CODE (HARDWARE DESCRIPTION LANGUAGE)",
      "entity_type": "TARGET ENTITY",
      "description": "\"The HDL code in the hardware description language, which defines default register values and configurations in hardware units.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426",
      "entity_type": "VULNERABILITY",
      "description": "\"Various vulnerabilities that permit unauthorized access or information loss due to insecure file permissions.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "FILE EXISTENCE INFOLEAK THROUGH VIRTUAL MACHINE (CVE-2000-1117) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Virtual machine vulnerabilities allow attackers to infer file existence on a client system.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES ",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves using debug modes or internal features of hardware systems to override lock protections and change system configuration settings.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "INFORMATION LOSS AND UNAUTHORIZED ACCESS",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploitation of the vulnerability results in unauthorized access to sensitive data, leading to potential misuse.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "BRUTE FORCE PASSWORD GUESSING ATTACK ",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Technique used by attackers to systematically guess user passwords based on error message differences.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "MODIFICATION OF SYSTEM CONFIGURATION FOR UNAUTHORIZED ACCESS ",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves changing system configurations to gain unauthorized access or modify protected settings within hardware systems.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "SSL TIMING ATTACK VULNERABILITY (CVE-2003-0078) ",
      "entity_type": "VULNERABILITY",
      "description": "\"The SSL implementation reveals information about the correctness of padding through timing discrepancies.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)",
      "entity_type": "TARGET ENTITY",
      "description": "\"Various communication channels can be targets for interception and misuse due to insecure practices.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "GRANULARITY ISSUE IN ADDRESS REGION PROTECTION",
      "entity_type": "PRECONDITION",
      "description": "\"Hardware designs may have a large address region protected by the same lock bit, creating conflicts between functional and security requirements.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "IMPROPER PREVENTION OF LOCK BIT MODIFICATION SOFTWARE MODULE",
      "entity_type": "SOFTWARE",
      "description": "\"A software module or firmware that improperly fails to prevent lock bits from being modified after initial configuration during hardware reset.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "WORLD-WRITABLE EXECUTABLES (CVE-2005-1941)",
      "entity_type": "VULNERABILITY",
      "description": "\"Executable files installed with world-writable permissions can be modified by unauthorized users.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"This vulnerability arises from the absence of unique identifiers for components within a System-on-Chip (SoC), making it difficult to enforce proper security policies and authentication.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "REVIEWING DESIGN CONSISTENCY ",
      "entity_type": "PRECONDITION",
      "description": "\"Ensuring that the design of the lock bit mechanism is consistent and free from common weaknesses before deployment.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "DETECTION OF PHYSICAL ATTACKS PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition includes the detection of physical attacks on the product or a change in operating mode which can lead to unauthorized access.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "WORLD-WRITABLE LOG FILES (CVE-2001-1550)",
      "entity_type": "VULNERABILITY",
      "description": "\"Log files installed with world-writable permissions can be altered or deleted by unauthorized users.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "POWER STATE TRANSITIONS TESTING ",
      "entity_type": "MITIGATION",
      "description": "\"Testing security lock bits across power state transitions to ensure they are effective in preventing unauthorized modifications.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "CWE-573 MISSING CRYPTOGRAPHIC STEP",
      "entity_type": "VULNERABILITY",
      "description": "\"A product that lacks an essential step in its cryptographic algorithm can lead to weaker encryption than advertised.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "PORT FILTERING MECHANISM VULNERABILITY (CVE-2002-0514) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Product's port filtering mechanism reveals filtered ports through differential response times or TTL values.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "INSECURE PERMISSIONS FOR SHARED SECRET KEY FILES (CVE-2001-0497)",
      "entity_type": "VULNERABILITY",
      "description": "\"Files containing shared secrets have inadequate permissions, allowing unauthorized access.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "CHIP RESET CLEARING CRITICAL READ/WRITE PERMISSIONS FOR RSA FUNCTION",
      "entity_type": "VULNERABILITY",
      "description": "\"A specific vulnerability where a chip reset clears critical read/write permissions, potentially allowing unauthorized modifications.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "INSECURE COMMUNICATIONS",
      "entity_type": "VULNERABILITY",
      "description": "\"Insecure communication practices can lead to exposure of sensitive data over insecure channels.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "AUTOMATED TESTING FOR REGISTER LOCKS AND WRITE-ONCE FIELDS",
      "entity_type": "MITIGATION",
      "description": "\"Testing phases should use automated tools to verify that register locks and write-once fields are properly configured per design specifications.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "USE LEAST PRIVILEGE PRINCIPLE",
      "entity_type": "MITIGATION",
      "description": "\"Following the principle of least privilege to minimize permissions required by processes.\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "id": "PRODUCT DEVELOPERS",
      "entity_type": "ATTACKER",
      "description": "\"Developers who create products that may enable DMA capable devices too early in boot phase, potentially allowing attackers to exploit this vulnerability.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "INCONSISTENT ERROR MESSAGE HANDLING ",
      "entity_type": "PRECONDITION",
      "description": "\"Attackers need to understand the different error messages and how they are handled by the system to exploit them.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "UNINTENDED PROXY FUNCTIONALITY ('CONFUSED DEPUTY')",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique where an application incorrectly forwards requests from one entity to another, potentially allowing the attacker to bypass security controls.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "INTERNAL REGISTERS AND TEST MODES ACCESS CONTROL MECHANISM",
      "entity_type": "TARGET ENTITY",
      "description": "\"The access control mechanism governing the internal registers and test modes of components within an SoC is a critical target for attackers seeking unauthorized access or data modification.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting the vulnerability in hardware design that does not properly clear sensitive information stored in built-in registers when a user changes.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "MUTUAL AUTHENTICATION MECHANISM ENFORCEMENT",
      "entity_type": "MITIGATION",
      "description": "\"Enforcing strong mutual authentication between components in a system can prevent unauthorized proxy functionality.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "DIRECT MEMORY ACCESS (DMA) CAPABLE DEVICE",
      "entity_type": "SOFTWARE",
      "description": "\"A Direct Memory Access (DMA) capable device allows data transfer between the computer and connected device using direct hardware access without OS interaction. It can be exploited by attackers if enabled too early in boot phase.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "INSECURE CRYPTOGRAPHIC STORAGE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A method by which sensitive data is stored without adequate cryptographic protections.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "INFORMATION DISCLOSURE TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic of obtaining unauthorized access to sensitive information through observable discrepancies, such as side channel attacks or inconsistent error messages.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "PRESERVATION OF INITIATOR IDENTITY",
      "entity_type": "MITIGATION",
      "description": "\"Maintaining and forwarding the identity of the transaction initiator ensures that the source of requests is correctly identified, mitigating the risk of unauthorized access.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "TRUSTED FIRMWARE OR SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)",
      "entity_type": "SOFTWARE",
      "description": "\"A trusted module that sets lock bits to protect system configurations after power reset.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "SECURE ERROR HANDLING IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing secure error handling practices by providing minimal details in error messages and compartmentalizing sensitive data is recommended to prevent information leakage.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "ACCESS CONTROL BYPASS",
      "entity_type": "TACTIC",
      "description": "\"An attacker's tactic to bypass access controls such as firewalls by using a system with different privileges as an intermediary.\"<SEP>\"The tactic is to bypass existing access control protections on assets through alternate hardware interfaces.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b<SEP>chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "EXPLOITER",
      "entity_type": "ATTACKER",
      "description": "\"An individual or group that exploits vulnerabilities in system-on-chip (SoC) components for unauthorized access or other malicious activities.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "RESETTING LOCK BIT AFTER POWER RESET ",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique where an adversary resets the lock bit after a power reset, disabling protection.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "SIDE CHANNEL ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The side channel attack pattern involves observing discrepancies in system behavior to infer sensitive information about the system's operation or internal state.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "DATA FLOW ANALYSIS AND CONTROL FLOW ANALYSIS",
      "entity_type": "MITIGATION",
      "description": "\"Analyzing the flow of data and control within applications can help identify potential proxy vulnerabilities.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "PROTECTED REGISTERS/ADDRESS REGIONS ",
      "entity_type": "TARGET ENTITY",
      "description": "\"Registers or address regions within hardware systems that are intended to be protected from unauthorized modifications by lock bit mechanisms.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "SECURITY LOCK BIT BYPASS VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A flaw in hardware design allowing bypassing of protection mechanisms such as security lock bits.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "OBSERVABLE DISCREPANCY ATTACKERS",
      "entity_type": "ATTACKER",
      "description": "\"Attackers use observable discrepancies in product behavior to gain unauthorized access to sensitive information.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "UNINTENDED PROXY BEHAVIOR IN SOFTWARE APPLICATIONS",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition for this attack is the presence of software that improperly forwards requests as a proxy without verifying the source identity or context.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "CWE-362 (RACE CONDITION)",
      "entity_type": "VULNERABILITY",
      "description": "\"A race condition vulnerability allowing attackers to exploit timing windows between when an interrupt handler detects an attempt to write-enable BIOS and when it resets the write-enable bit back to 0.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "IMPROPER ACCESS CONTROL OF ON-CHIP DEBUG AND TEST INTERFACE SOFTWARE MODULE",
      "entity_type": "SOFTWARE",
      "description": "\"This module improperly manages the authorization and authentication processes for accessing internal registers and test modes through physical debug/test interfaces, potentially leading to security vulnerabilities.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "WRITE-ONCE REGISTER MODIFICATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An untrusted software component exploits a race condition by modifying a write-once register before the trusted module has a chance to initialize it.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "ADVERSARY EXPLOITING RESERVED BITS",
      "entity_type": "ATTACKER",
      "description": "\"An adversary exploiting reserved bits in hardware designs for malicious purposes.\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "id": "SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where software may inadvertently act as an unintended proxy, leading to security issues such as unauthorized access and bypassing firewalls.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "TIMING AND CONTROL FLOW DISCREPANCY",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Attackers observe timing differences, control flow variations, communication patterns, and general behavioral discrepancies to exploit vulnerabilities through side channel attacks.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "PROPER AUTHENTICATION AND AUTHORIZATION MECHANISMS FOR DEBUG INTERFACES",
      "entity_type": "MITIGATION",
      "description": "\"Implementing robust authentication and authorization mechanisms for debug interfaces can prevent unauthorized access and exploitation of on-chip test/debug features.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "RACE CONDITION EXPLOITATION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting the race condition between an original copy and its shadow copy when they are out-of-sync.\"<SEP>\"The attack pattern involves exploiting the race condition vulnerability in hardware designs to allow unauthorized changes to security settings.\"",
      "source_id": "chunk-6c031a7ff8a513b1dd7b59f833f1ac53<SEP>chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "UNAUTHORIZED ACCESS AND BYPASS OF SECURITY MEASURES",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the unintended proxy behavior in software applications, attackers can gain unauthorized access or bypass security measures.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Technique where attackers access and extract sensitive data from registers due to improper zeroization of hardware.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "CHALLENGE-RESPONSE AUTHENTICATION BYPASS (CVE-2001-1585)",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"This technique involves bypassing challenge-response mechanisms by exploiting public keys, allowing unauthorized access.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted access to assets intended only for trusted users. This vulnerability is detailed as CVE-2019-6260.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "WRITE-ONCE REGISTER VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"Hardware design flaw where a write-once register can be programmed by an untrusted software component before being set by trusted firmware.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "SOFTWARE APPLICATION ACTING AS PROXY FOR TRANSACTIONS BETWEEN COMPONENTS",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entity is any software application that could potentially act as an intermediary between components without proper identity verification.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "ERROR HANDLING MALPRACTICE SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"Improper error handling practices, which can reveal information about the internal state of a system or successful operations, are exploited by attackers through various techniques.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "EXPLOITATION THROUGH DEBUG/TEST INTERFACES WITHOUT PROPER AUTHORIZATION",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting improper access control in the on-chip debug/test interfaces to bypass protection mechanisms and gain unauthorized access to internal information or execute unauthorized commands.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "TIMED RESPONSES FOR USERNAME EXISTENCE ",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Attackers measure the time taken for different server responses to determine if a username exists.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "UNTRUSTED SOFTWARE COMPONENT (MODULE B)",
      "entity_type": "ATTACKER",
      "description": "\"An untrusted software component that attempts to exploit a race condition in the hardware design.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "FTP BOUNCE ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves an attacker using the PORT command in FTP protocol to modify connections, allowing them to connect to other machines through a proxy.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "INCONSISTENT ERROR RESPONSES AND TIMING VARIATIONS",
      "entity_type": "PRECONDITION",
      "description": "\"Attackers need to observe inconsistent error responses or timing variations as prerequisites for exploiting the observable discrepancy vulnerability.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "FILE EXISTENCE DETERMINATION THROUGH BROWSER SCRIPTING (CVE-2005-0918) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Browser scripts can be used to infer the existence of arbitrary files on a server based on page loading times.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "WEB SERVER WITH PROXY FUNCTIONALITY (EXAMPLE)",
      "entity_type": "SOFTWARE",
      "description": "\"A web server that allows attackers to request URLs from another server, including different ports, enabling proxied scanning.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where shared resources on a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted agents to access assets intended for trusted users.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "VERSION CONTROL SYSTEM ALTERNATE HISTORY INFOLEAK VULNERABILITY (CVE-2004-0778) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Enabling attackers to determine file existence and directory structure using alternate history files.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203) ",
      "entity_type": "VULNERABILITY",
      "description": "\"The product behaves differently under different circumstances, revealing security-relevant information about its state through discrepancies.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "FTP PORT COMMAND VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The FTP PORT command vulnerability allows an attacker to modify the connection settings and connect to other machines through a proxy.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique of enabling DMA capable devices too early in boot phase before security configurations are established, allowing attackers to extract data or gain privileges.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "IMPROPERLY CLEARED MEMORY",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique involving memory that is not properly cleared before reuse, leading to potential exposure of sensitive information stored within the memory.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "SENSITIVE DATA EXPOSURE AND ATTACK SUCCESS",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploiting the observable discrepancy vulnerability leads to unauthorized access to sensitive data and successful attacks on system integrity or confidentiality.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "INSUFFICIENT AUTHENTICATION MECHANISMS",
      "entity_type": "PRECONDITION",
      "description": "\"Lack of strong authentication mechanisms that ensure requests come from authorized sources is a prerequisite for exploiting vulnerabilities.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "SECURITY CONFIGURATION SETUP AND IOMMU UTILIZATION",
      "entity_type": "MITIGATION",
      "description": "\"Setting up security configurations for DMA devices during the boot phase and utilizing an Input-Output Memory Management Unit (IOMMU) can mitigate early DMA attacks by controlling access to memory resources.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "TRUSTED SOFTWARE COMPONENT (MODULE A)",
      "entity_type": "TARGET ENTITY",
      "description": "\"A trusted software module responsible for initializing security settings during boot-up, which could be targeted by an attacker through exploiting hardware vulnerabilities.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "VARIOUS PLATFORMS (CWE-203) ",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entities include various platforms where discrepancies in product behavior can be observed, leading to security risks such as information disclosure.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "EXPLOIT PROXY SERVICES FOR ACCESS CONTROL BYPASS TACTIC",
      "entity_type": "TACTIC",
      "description": "\"An attacker's tactic to exploit proxy services and use them as means to bypass security controls such as firewalls or access control lists.\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "id": "INFORMATION DISCLOSURE AND PRIVILEGE ESCALATION",
      "entity_type": "POSTCONDITION",
      "description": "\"The postconditions of these attacks include enabling information disclosure and potentially escalating privileges by exploiting vulnerabilities in hardware designs.\"<SEP>\"The tactic of exploiting improperly isolated shared resources on SoC or insecure DMA device enablement in boot phase is aimed at disclosing information and escalating privileges.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1<SEP>chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "SERVER BEHAVIOR ANALYSIS ",
      "entity_type": "PRECONDITION",
      "description": "\"Analyze server responses to understand patterns that indicate valid user inputs or system states.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "CWE-203 VULNERABILITY IMPLEMENTATION ATTACKERS",
      "entity_type": "ATTACKER",
      "description": "\"Attackers exploit vulnerabilities related to observable discrepancies as defined in CWE-203.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "ATTACKER ENTITY PLACEHOLDER",
      "entity_type": "ATTACKER",
      "description": "\"The text does not specify a specific attacker, but implies the existence of an active entity exploiting vulnerabilities.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "DISCREPANCY DETECTION TOOLS SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"Tools used by attackers to detect and analyze discrepancies in system behavior.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Technique used by attackers to modify system configurations despite set security measures such as lock bits.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "POP3 PORT SCANNING SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"A software tool used to scan internal networks using modified POP3 port numbers as part of an attack strategy.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "USER ENUMERATION VIA DISCREPANCIES ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern involving the enumeration of valid usernames or other sensitive information through discrepancies in error messages.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "URL-DOWNLOADING LIBRARY EXPLOITATION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern involving the exploitation of a URL-downloading library that automatically follows file:// and scp:// URLs, potentially allowing unauthorized access to resources.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "ERROR RESPONSE ANALYSIS TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Analyzing differences in error responses to infer whether an operation was successful or not.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "NETWORK SCANNING USING MODIFIED POP3 PORTS",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves scanning internal networks using modified POP3 port numbers to discover vulnerabilities or gain unauthorized access.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "INCONSISTENT ERROR MESSAGE MITIGATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing consistent and minimal error messages to prevent information leakage.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "FOLLOWS REDIRECTS TO FILE AND SCP URLS",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique where a URL-downloading library is exploited by following redirects to file:// and scp:// URLs, potentially exposing sensitive information.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "USER ENUMERATION TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic of enumerating valid user accounts by observing discrepancies in system responses.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "PROPER DOCUMENTATION IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing thorough documentation for product design and usage can help prevent vulnerabilities related to insufficient technical documentation.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "TIMING ANALYSIS PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"Attackers need to analyze timing variations as a prerequisite for exploiting the vulnerability.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "FTP SERVER USERNAME TIMING ATTACK VULNERABILITY (CVE-2004-1602) ",
      "entity_type": "VULNERABILITY",
      "description": "\"FTPs display differences in response times that can be used to determine valid user identities.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO NETWORK RESOURCES",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves gaining unauthorized access to network resources using various attack techniques and exploiting software configurations.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "CWE-203 VULNERABILITY (CVE EXAMPLES) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Various examples of vulnerabilities related to observable discrepancies, such as CVE-2020-8695 and CVE-2019-14353.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "LARGE TIMEOUTS ON UNCONFIRMED CONNECTIONS (CWE-440)",
      "entity_type": "PRECONDITION",
      "description": "\"A precondition where applications use large timeouts for unconfirmed connections leading to potential security vulnerabilities.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "BOOT FIRMWARE COMPROMISE THROUGH UNTRUSTED IPS",
      "entity_type": "VULNERABILITY",
      "description": "\"Untrusted IPs or peripheral microcontrollers enabled before security features are programmed pose a risk for compromising SoC boot firmware.\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "id": "LACK OF DOCUMENTATION",
      "entity_type": "PRECONDITION",
      "description": "\"A lack of proper documentation or missing critical information about the product's design and configuration can serve as a prerequisite for attackers to exploit vulnerabilities.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "SENSITIVE INFORMATION DISCLOSURE POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploiting the vulnerability results in unauthorized access to sensitive information.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "CERT ORACLE SECURE CODING STANDARD FOR JAVA",
      "entity_type": "MITIGATION",
      "description": "\"A standard providing guidelines to secure coding practices in Java, including cryptographic operations.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "BULLETIN BOARD USER EXISTENCE ERROR RESPONSE VULNERABILITY (CVE-2004-0294) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Bulletin boards reveal distinct error messages when a user exists or not, aiding attackers in identifying users.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "CVE-2010-1637 VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability in a web-based mail program that allows internal network scanning using modified POP3 port numbers, potentially exposing the system to unauthorized access.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "MULTIPLE OPERATING SYSTEMS (CWE-203) ",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entities include multiple operating systems where observable discrepancies can be detected and exploited.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "BYPASS PROTECTION MECHANISM THROUGH UNAUTHORIZED JTAG ACCESS",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves exploiting vulnerabilities in the JTAG interface to bypass protection mechanisms and achieve unauthorized execution or data modification.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "DIRECT REMOTE LOGIN DISABLED PASSWORD GUESSING VULNERABILITY (CVE-2004-0243) ",
      "entity_type": "VULNERABILITY",
      "description": "\"When remote login is disabled, different responses indicate if the password is correct, helping with brute force attacks.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "CVE-2009-0037 VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability in a URL-downloading library that automatically follows file:// and scp:// URLs, exposing sensitive information or allowing unauthorized actions.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "NETWORK SNIFFER AND PROTOCOL ANALYZER USERS",
      "entity_type": "ATTACKER",
      "description": "\"Attackers use network sniffing tools to monitor network traffic for the presence of plaintext passwords.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "LACK OF AUTHENTICATION AND AUTHORIZATION FOR DEBUG PINS",
      "entity_type": "PRECONDITION",
      "description": "\"A precondition for this attack is the lack of proper authentication and authorization controls, especially when debug pins are hidden within board layers.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "PRODUCT PORT FILTERING INFORMATION LEAKAGE VULNERABILITY (CVE-2002-0514) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Product reveals filtered port status through differential TTL values in response packets.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "NETWORK RESOURCES AND DEVICES",
      "entity_type": "TARGET ENTITY",
      "description": "\"Various network resources and devices are the target entities of attacks exploiting vulnerabilities such as CVE-2010-1637 and CVE-2009-0037.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "DATA EXTRACTION AND PRIVILEGE ESCALATION THROUGH EARLY BOOT PHASE ATTACKS",
      "entity_type": "POSTCONDITION",
      "description": "\"Early boot phase DMA attacks can result in data extraction or privilege escalation by gaining direct hardware memory access.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "entity_type": "VULNERABILITY",
      "description": "\"This vulnerability exists during the execution of ROM code where the JTAG interface is not disabled, introducing a race condition to extract encryption keys (CWE-362).\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "PRODUCT ICMP RESPONSE ANOMALY VULNERABILITY (CVE-2002-0208) ",
      "entity_type": "VULNERABILITY",
      "description": "\"The product modifies ICMP responses, revealing its presence and causing information leakage.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "TRUSS (SOLARIS)",
      "entity_type": "SOFTWARE",
      "description": "\"A system-call tracing utility used in Unix systems, particularly Solaris, to trace system calls and signals generated by processes.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "WEB-BASED MAIL PROGRAM SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"A web-based mail program that allows internal network scanning using a modified POP3 port number, which is vulnerable to exploitation.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "STRACE (LINUX)",
      "entity_type": "SOFTWARE",
      "description": "\"A Linux utility for monitoring and debugging process behavior by intercepting and logging the system calls executed by or on behalf of a process.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "PLOVER MISSING REQUIRED CRYPTOGRAPHIC STEP ENTRY",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An entry in the PLOVER taxonomy describing missing steps in a cryptographic algorithm leading to vulnerabilities.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "BEHAVIORAL INFOLEAK THROUGH SYN-FIN PACKETS VULNERABILITY (CVE-2004-2252) ",
      "entity_type": "VULNERABILITY",
      "description": "\"System behavior changes upon receiving SYN-FIN packets, aiding attackers in identifying specific system configurations.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "URL-DOWNLOADING LIBRARY SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"A software library for downloading URLs that automatically follows redirects to file:// and scp:// URLs, leading to potential security risks.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "SYSINTERNALS UTILITIES (WINDOWS)",
      "entity_type": "SOFTWARE",
      "description": "\"A collection of utilities from Microsoft Sysinternals designed to monitor, debug, and manage processes on Windows systems.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "ICS/OT SYSTEMS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Industries and systems that rely on ICS (Industrial Control Systems) or OT (Operational Technology) are at risk from expected behavior violations and other security weaknesses.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "UNAUTHORIZED ACCESS AND DATA DISCLOSURE POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"Attackers can obtain unauthorized access and disclose sensitive information due to improper zeroization vulnerabilities.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "INSUFFICIENT TECHNICAL DOCUMENTATION",
      "entity_type": "PRECONDITION",
      "description": "\"Lack of adequate documentation or design details can lead attackers to easily exploit the system's vulnerabilities.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "FILEMON (WINDOWS)",
      "entity_type": "SOFTWARE",
      "description": "\"A utility by Mark Russinovich for monitoring file system activity in real time on a Windows machine.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "EXPECTED BEHAVIOR VIOLATION (CWE-440)",
      "entity_type": "VULNERABILITY",
      "description": "\"This occurs when a feature, API, or function does not adhere to its defined specifications leading to security issues.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "SENSITIVE INFORMATION DETERMINATION ",
      "entity_type": "TACTIC",
      "description": "\"The tactic of determining the existence and details of sensitive information through various means, often exploiting software vulnerabilities.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "EXPLOITATION VIA MODIFIED POP3 PORTS",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique involving scanning networks using modified POP3 ports to discover and exploit vulnerabilities.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "REGMON (WINDOWS)",
      "entity_type": "SOFTWARE",
      "description": "\"A utility by Mark Russinovich for monitoring registry access and modifications on Windows systems.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "ATTACKER",
      "entity_type": "ATTACKER",
      "description": "\"An attacker can exploit improper access control on-chip debug and test interfaces to bypass protection mechanisms and gain unauthorized access.\"<SEP>\"An attacker who exploits unintended proxy or intermediary functionality of software applications to bypass security measures and gain unauthorized access.\"<SEP>\"The text does not specify a particular attacker, but it implies attackers could exploit the lock bit modification vulnerabilities to unlock system configurations.\"<SEP>\"An attacker who can exploit hardware vulnerabilities to perform clock and voltage glitching attacks on semiconductor devices.\"<SEP>\"An entity that exploits vulnerabilities to alter the state of shadow copies or execute malicious code in memory.\"<SEP>\"An entity that exploits vulnerabilities to gain unauthorized access and cause system instability.\"<SEP>\"An unspecified attacker exploits vulnerabilities related to fuse values and comparison logic granularity.\"<SEP>\"An unspecified attacker who uses voltage and clock glitches to compromise a device.\"<SEP>\"An attacker who exploits vulnerabilities in the firmware's public key reuse for signing both debug and production code.\"<SEP>\"An unspecified attacker exploits vulnerabilities present in firmware of devices that do not provide update capabilities.\"<SEP>\"An unspecified attacker who can exploit vulnerabilities in the system address map to bypass access control and compromise protections.\"<SEP>\"The attacker exploits vulnerabilities in hardware interfaces and shadow registers to bypass existing protections.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b<SEP>chunk-6c031a7ff8a513b1dd7b59f833f1ac53<SEP>chunk-eb3af9cc9df9726a2a72280178b25b2d<SEP>chunk-cf2bb615b405ec5f79b3729ede5b6486<SEP>chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8<SEP>chunk-1ea2cd26ef91f5c526781b17429acd7f<SEP>chunk-3d2fd26674527134e3c7fbd5cc806bf4<SEP>chunk-bc102d9f54bb50e60fe4796c747399e3<SEP>chunk-7acaf7b7bfc562c3e9176c41d3a30307<SEP>chunk-022b88d5b18c3c7a7589c9de7a7a5d1c<SEP>chunk-b2db9bd0b7df158579fa4f955ca5f332<SEP>chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "PRODUCT RESPONSE DISCREPANCY VULNERABILITY (CVE-2001-1387) ",
      "entity_type": "VULNERABILITY",
      "description": "\"The product generates inconsistent responses which can lead to information leakage when queried improperly.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO INTERNAL NETWORKS",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the network's vulnerabilities, unauthorized access is gained to internal network resources.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "PROCESS MONITOR (WINDOWS)",
      "entity_type": "SOFTWARE",
      "description": "\"A tool from Microsoft Sysinternals that monitors all file system activity, registry queries, process creations, and thread activity in real time.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "BUFFER OVERFLOW DUE TO LIBRARY FUNCTION MISUSE (CVE-2005-3265)",
      "entity_type": "VULNERABILITY",
      "description": "\"This involves the misuse of a third-party library function, leading to unexpected behavior and potential buffer overflows.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "VERSION CONTROL SYSTEM FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2004-0778) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Enabling attackers to infer file existence through specific command responses in a version control system.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "AUTOMATED REDIRECT FOLLOWING EXPLOIT TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique involving exploitation of an automated URL-downloading library that follows file:// and scp:// redirects.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2020-8698) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted access to assets intended only for trusted users. This vulnerability is detailed as CVE-2020-8698.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "FTP SERVER USERNAME ENUMERATION VULNERABILITY (CVE-2004-1428) ",
      "entity_type": "VULNERABILITY",
      "description": "\"FTP servers expose valid usernames by providing different error messages for non-existent versus existing users.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "AUTOMATED STATIC ANALYSIS",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An automated approach to detecting vulnerabilities by analyzing source code or binary/compiled code without executing it.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "INTERNAL NETWORK RESOURCES TARGETED BY VULNERABILITIES",
      "entity_type": "TARGET ENTITY",
      "description": "\"The internal network resources are the target entities of attacks exploiting vulnerabilities in web-based mail programs or URL downloading libraries.\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "id": "ROM CODE EXECUTION MANAGEMENT SOFTWARE MODULE",
      "entity_type": "SOFTWARE",
      "description": "\"This software module manages the execution of ROM code, which can introduce security risks if not properly secured against attacks on JTAG interfaces.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where hardware IP cores and integrated circuits do not prevent the value of a lock bit from being modified after it has been set.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "SSL IMPLEMENTATION TIMING ATTACK VULNERABILITY (CVE-2003-0078) ",
      "entity_type": "VULNERABILITY",
      "description": "\"The SSL implementation reveals information through timing discrepancies when handling incorrect padding.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "CRYPTOGRAPHIC FUNCTION DETECTION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique of attaching a monitor to a process and triggering the feature that sends data, looking for cryptographic functions in the call tree.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "LESS TRUSTWORTHY PARTIES",
      "entity_type": "ATTACKER",
      "description": "\"Entities that could exploit uncleared resources to gain unauthorized access to sensitive data.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "IMPROPER SECURITY CONFIGURATION AND EARLY BOOT PHASE ENABLEMENT",
      "entity_type": "PRECONDITION",
      "description": "\"Enabling DMA capable devices too early during the boot phase before proper security configurations can be established creates a precondition for exploitation by attackers.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "VIRTUAL MACHINE FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2000-1117) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Web pages loaded in a virtual machine can infer file existence based on response times and delays.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "NETWORK TRAFFIC ANALYSIS FOR ENCRYPTION USAGE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Monitoring network traffic to determine if data packets contain readable commands or high entropy, indicating encryption usage.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "RESOURCE RELEASE AND REUSE PROCESS",
      "entity_type": "SOFTWARE",
      "description": "\"Operating systems manage resource release and reuse, often leaving old data accessible in new allocations.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "IMPLEMENTING SECURITY LOCK BIT REVIEW PROCESS ",
      "entity_type": "MITIGATION",
      "description": "\"A mitigation approach that includes reviewing the design and testing security lock bit mechanisms across various power state transitions to ensure their effectiveness.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "UNAUTHORIZED ACCESS AND DATA MODIFICATION THROUGH DEBUG INTERFACE EXPLOITATION",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploiting improper access control leads to unauthorized read/write access to application data and memory, as well as the modification of system integrity.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "PRODUCT USERNAME TIMED RESPONSE VULNERABILITY (CVE-2003-0637) ",
      "entity_type": "VULNERABILITY",
      "description": "\"Differences in server response time reveal valid usernames through timing attacks.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "MANUAL PENETRATION TESTING AND THREAT MODELING",
      "entity_type": "MITIGATION",
      "description": "\"The use of manual testing methods like penetration testing and threat modeling to identify weaknesses in security designs and business rules.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "UNCLEARED RESOURCE EXPOSURE PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where attackers exploit uncleared memory or resources to access sensitive information left behind.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "ENCRYPTED COMMUNICATION CHANNELS CONFIGURATION",
      "entity_type": "MITIGATION",
      "description": "\"Configuring servers to use encrypted channels such as SSL for secure communication to protect sensitive information during transmission.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "RESERVED BIT UTILIZATION",
      "entity_type": "PRECONDITION",
      "description": "\"Designers covertly utilizing reserved bits can provide adversaries with potential attack points.\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "id": "SENSITIVE INFORMATION READ FROM CLEARED MEMORY",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique of reading previously written data from newly released but not properly cleared memory or resources.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "MAINTAINING SECURE SYSTEM CONFIGURATION POST-RESET",
      "entity_type": "TACTIC",
      "description": "\"The tactic is to ensure that the system remains in a secure state after initial configuration by preventing unauthorized modifications.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "SYSTEM-ON-CHIP (SOC) WITH MISSING OR INSUFFICIENT IP IDENTIFIERS",
      "entity_type": "TARGET ENTITY",
      "description": "\"The System-on-Chip is a target entity where missing or insufficient identifiers for its components can lead to improper identification issues and security vulnerabilities.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "DISABLING RESERVED BITS FEATURE",
      "entity_type": "MITIGATION",
      "description": "\"Including a feature to disable or block access to reserved bits as mitigation against unauthorized access.\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "id": "DESIGN ENCRYPTION PROTECTION INTO HARDWARE PLATFORMS",
      "entity_type": "TACTIC",
      "description": "\"Ensuring that hardware platforms are designed with encryption algorithms recommended by NIST to protect paths of security critical data.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "RESOURCE OVERWRITING RECOMMENDATIONS",
      "entity_type": "MITIGATION",
      "description": "\"Recommendations to overwrite sensitive information and use fixed patterns like 0's before resource release for secure handling.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "entity_type": "TARGET ENTITY",
      "description": "\"The protected registers and address regions within hardware IP cores and integrated circuits are the target of lock bit modification attacks.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Attacker uses this technique by exploiting flaws in the JTAG interface's authorization, allowing them to read application data, memory, and modify system integrity without proper authentication.\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "id": "SENSITIVE INFORMATION EXPOSURE",
      "entity_type": "TACTIC",
      "description": "\"Mirrored regions getting out of sync may result in the exposure of sensitive information due to inconsistencies between mirrored copies.\"<SEP>\"The postcondition of improperly cleared memory or incorrect default permissions is sensitive information exposure.\"<SEP>\"The tactic is to exploit vulnerabilities in physical side channels to expose sensitive information for malicious purposes.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b<SEP>chunk-eb9580695df69206d5ae3cb8f9e396f5<SEP>chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "TRANSMITTING DATA IN PLAIN TEXT PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition for plaintext transmission involves scenarios where authentication credentials or sensitive information is sent over insecure channels.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "PREVENT INFORMATION EXPOSURE TACTIC",
      "entity_type": "TACTIC",
      "description": "\"Strategies designed to prevent the exposure of sensitive data through proper clearing procedures during state transitions or resource releases.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "AUTOMATED TESTING TOOLS FOR LOCK BIT PROTECTION REVIEWING DESIGN INCONSISTENCIES",
      "entity_type": "MITIGATION",
      "description": "\"Tools used during testing phases to verify that lock bit protections are consistent across design and implementation stages.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "IMPROPER RESTRICTION OF WRITE-ONCE BIT FIELDS VULNERABILITY (CVE)",
      "entity_type": "VULNERABILITY",
      "description": "\"The hardware design control register sticky bits or write-once bit fields can be improperly implemented, allowing reprogramming by software.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)",
      "entity_type": "VULNERABILITY",
      "description": "\"Several vulnerabilities exist where sensitive information is transmitted in plaintext over insecure channels, including passwords and session tokens.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "INSUFFICIENT DATA CLEARING PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"The condition where insufficient data clearing leaves old information accessible, making it a target for attackers.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"When plaintext transmission of sensitive data occurs, it can lead to unauthorized access and potential misuse of the transmitted information.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "RESERVED BITS MISUSE IN PRODUCTION HARDWARE",
      "entity_type": "PRECONDITION",
      "description": "\"Adversaries writing to reserved bits in production hardware can induce unwanted behavior, potentially leading to attacks.\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "id": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability wherein resources are not properly cleared before reuse leading to potential exposure of sensitive data.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "WEB APPLICATIONS WITH SSL USAGE",
      "entity_type": "TARGET ENTITY",
      "description": "\"Web applications that use SSL for communication are targeted entities for ensuring encrypted channels from login to logout sessions.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "LACK OF SECURITY LOCK BIT ENFORCEMENT PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"Design flaws or lack of strict enforcement mechanisms can create a prerequisite condition for exploiting security lock bit vulnerabilities.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "SENSITIVE DATA EXPOSURE AND UNAUTHORIZED ACCESS",
      "entity_type": "POSTCONDITION",
      "description": "\"The postcondition where sensitive data is exposed due to uncleared memory, leading to unauthorized access by attackers.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "LOCK BIT MODIFICATION ATTACK TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The specific action taken by an attacker to modify a lock bit after it has been set, thereby unlocking protected system configurations or registers.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "UNTRUSTED COMPONENT MASTERING TRANSACTIONS",
      "entity_type": "POSTCONDITION",
      "description": "\"Adversaries enabling untrusted IPs can master transactions on hardware buses, compromising SoC boot firmware.\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "id": "ENCRYPTED CHANNELS USAGE FOR COMMUNICATION",
      "entity_type": "MITIGATION",
      "description": "\"Ensuring data is transmitted over encrypted channels such as SSL/TLS to protect against plaintext transmission vulnerabilities.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "MEMORY MANAGEMENT SYSTEMS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Systems managing memory operations are the targets of attacks exploiting improper cleanup on resource release.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "DIFFERENT ERROR MESSAGES GENERATION",
      "entity_type": "SOFTWARE",
      "description": "\"Different error messages are generated by the software when validating user inputs, which can be exploited for information leakage.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "HARDWARE SYSTEM CONFIGURATIONS TARGET ENTITY",
      "entity_type": "TARGET ENTITY",
      "description": "\"The hardware's system configurations are targeted by attackers to exploit vulnerabilities for unauthorized modifications.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "SECURE TRANSMISSION DESIGN PHASE",
      "entity_type": "TACTIC",
      "description": "\"Designing secure transmission mechanisms during the architecture and design phase to prevent sensitive information from being transmitted in plaintext.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "CWE-20: IMPROPER INPUT VALIDATION",
      "entity_type": "PRECONDITION",
      "description": "\"Insufficient validation of input data is a prerequisite for many resource management vulnerabilities.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "SOFTWARE DEVELOPMENT LIFECYCLE SECURITY",
      "entity_type": "PRECONDITION",
      "description": "\"Security measures implemented throughout the software development lifecycle (SDLC) are necessary prerequisites for mitigating plaintext transmission risks.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "SENSITIVE INFORMATION UNCLEARED BEFORE USE",
      "entity_type": "PRECONDITION",
      "description": "\"The condition where sensitive data is not cleared properly before being reused or transferred to another control sphere.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "CVE-2019-3733",
      "entity_type": "VULNERABILITY",
      "description": "\"A specific instance of CWE-459 where heap memory in cryptography libraries is not cleared before release, leading to potential exposure.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"Shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted access to assets intended only for trusted users.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "RESOURCE LIFECYCLE MANAGEMENT ISSUE",
      "entity_type": "ATTACK PATTERN",
      "description": "\"Issues related to the management of resource lifecycles, particularly around clearing sensitive information before reuse.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "WEB APPLICATIONS WITH SSL USAGE IMPLEMENTATION PHASE",
      "entity_type": "TARGET ENTITY",
      "description": "\"During the implementation phase, web applications must ensure that all communications are encrypted using SSL/TLS to prevent data breaches.\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "id": "CVE-2003-0001",
      "entity_type": "VULNERABILITY",
      "description": "\"Ethernet NIC drivers fail to pad frames with null bytes, leading to infoleak from malformed packets.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "PROPER LOCK BIT DESIGN IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Ensuring proper design and implementation of lock bits so they cannot be modified post-initialization.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "ENABLING SECURITY FEATURES EARLY IN BOOT SEQUENCE",
      "entity_type": "MITIGATION",
      "description": "\"Programming fabric access controls and memory protections early during the boot sequence to prevent unauthorized component mastery.\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "id": "UNTRUSTED AGENTS",
      "entity_type": "ATTACKER",
      "description": "\"Untrusted agents are entities that can exploit insufficient access controls to gain unauthorized access to security-sensitive assets.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "CVE-2003-0291",
      "entity_type": "VULNERABILITY",
      "description": "\"Router vulnerability where DHCP packet data is not cleared properly after use, allowing potential exposure of information.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "ACCESS CONTROL POLICY IMPLEMENTATION FAILURE",
      "entity_type": "PRECONDITION",
      "description": "\"Insufficient granularity in the implementation of access control policies is a common weakness leading to vulnerabilities in hardware and software systems.\"<SEP>\"Insufficient granularity in the implementation of access control policies is a common weakness leading to vulnerabilities.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "FILE PERMISSION MISCONFIGURATION",
      "entity_type": "PRECONDITION",
      "description": "\"A prerequisite for exposing sensitive data through file permission misconfigurations.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "CVE-2005-1406",
      "entity_type": "VULNERABILITY",
      "description": "\"Products failing to fully clear memory buffers when less data is stored than previously used, risking infoleak.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "CVE-2022-24985 ",
      "entity_type": "VULNERABILITY",
      "description": "\"A form hosting website vulnerability (CVE-2022-24985) where authentication checks are insufficient, allowing bypass of authentication when multiple forms exist.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "CWE-212:UNCLEARED SENSITIVE DATA",
      "entity_type": "VULNERABILITY",
      "description": "\"Sensitive data stored in reusable resources is not properly cleared before reuse.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "CVE-2005-1858",
      "entity_type": "VULNERABILITY",
      "description": "\"Similar issue as CVE-2005-1406, emphasizing the risk of partial clearing in memory management systems.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "SECURITY LOCK BIT BYPASS ATTACKERS",
      "entity_type": "ATTACKER",
      "description": "\"Attackers who exploit the security lock bit bypass vulnerability to modify system configurations.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "NETWORK PACKET EXPOSURE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique involving the exposure of sensitive information in network packets due to improper handling and clearing.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "CVE-2021-36934 ",
      "entity_type": "VULNERABILITY",
      "description": "\"An overly permissive Access Control List (ACL) vulnerability in an operating system (CVE-2021-36934), affecting user password-related files and leading to unauthorized access.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "CVE-2005-3180",
      "entity_type": "VULNERABILITY",
      "description": "\"Products failing to fully clear memory buffers when less data is stored than previously used, risking infoleak.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "DESIGN FLAWS AND IMPLEMENTATION WEAKNESSES",
      "entity_type": "PRECONDITION",
      "description": "\"Weaknesses during hardware design or implementation phases, such as not enforcing write-once restrictions, enable lock bit modification attacks.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "SYSTEM CONFIGURATION MODIFICATION AND ACCESS POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"Attackers can modify system configurations and gain unauthorized access as a result of exploiting the security lock bit vulnerability.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A hardware vulnerability due to insecurely defined register defaults or module parameters, making the system susceptible at power reset.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "CVE-2005-3276",
      "entity_type": "VULNERABILITY",
      "description": "\"Product vulnerability where a data structure is not cleared before writing, leading to potential information leakage from previous use.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where design flaws allow for the reprogramming of secure hardware settings, such as lock bit modifications, post-initialization.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "SENSITIVE INFORMATION IN HARDWARE REGISTERS TARGET ENTITY",
      "entity_type": "TARGET ENTITY",
      "description": "\"Built-in hardware registers that store sensitive data such as passwords or encryption keys, which are the targets of attacks.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "INSUFFICIENT GRANULARITY OF ADDRESS REGIONS PROTECTED BY REGISTER LOCKS",
      "entity_type": "VULNERABILITY",
      "description": "\"The product defines large address regions protected by a single register lock control bit, reducing security granularity and increasing vulnerability.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "CVE-2002-2077",
      "entity_type": "VULNERABILITY",
      "description": "\"Memory issues in software that lead to improper clearing of memory before reuse, similar to other CWEs discussed.\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "id": "REMOTE ATTACKER",
      "entity_type": "ATTACKER",
      "description": "\"A remote attacker uses various attack techniques to exploit vulnerabilities in different products or services.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "PROTECTED HARDWARE SYSTEMS (E.G., SERVERS, IPS)",
      "entity_type": "TARGET ENTITY",
      "description": "\"Hardware systems, such as servers and intellectual properties, which rely on hardware locks for protecting their configurations against unauthorized modifications.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "IMPROPER INITIALIZATION/SHUTDOWN",
      "entity_type": "PRECONDITION",
      "description": "\"The condition where resources are not initialized or shutdown properly, leading to potential security vulnerabilities.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "SECURITY-SENSITIVE ASSETS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Security-sensitive assets such as device configurations, keys, etc., are the primary targets of untrusted agent attacks due to inadequate access controls.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "INSECURE DEFAULT VALUES",
      "entity_type": "PRECONDITION",
      "description": "\"Incorrectly defined default values or module parameters make hardware IP insecure at power reset.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "CONFIDENTIALITY BREACH",
      "entity_type": "POSTCONDITION",
      "description": "\"A postcondition of exposing sensitive information through improper handling and clearing practices.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "AUTOMATED TOOLS TESTING PHASE REQUIREMENT",
      "entity_type": "MITIGATION",
      "description": "\"Testing phases should use automated tools to ensure security-sensitive settings are configured as per design specifications.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "MEMORY ALLOCATION VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"Memory allocation issues where sensitive data is not cleared properly before being reused or released for other purposes.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "SECURITY PROTECTION METHOD (WRITE-ONCE SETTING)",
      "entity_type": "MITIGATION",
      "description": "\"A security protection method used to prevent register settings from being modified after initialization by making them write-once or sticky.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "SYSTEM-ON-A-CHIP (SOC)",
      "entity_type": "TARGET ENTITY",
      "description": "\"The System-on-a-Chip (SoC) is the target entity for improper isolation of shared resources and early boot phase DMA device enablement attacks.\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "id": "FILE PERMISSION MANAGEMENT FAILURE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique involving the mismanagement of file permissions leading to unauthorized access and modification.\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "id": "SYSTEM CONFIGURATION CHANGES VIA FIRMWARE",
      "entity_type": "PRECONDITION",
      "description": "\"Changes in system configuration due to firmware updates can introduce or exacerbate weaknesses if not properly managed.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "SYSTEM CONFIGURATION CHANGES POST-POWER TRANSITION",
      "entity_type": "POSTCONDITION",
      "description": "\"After power state transitions, system configurations may become changeable due to lock bits becoming programmable again.\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "id": "UNAUTHORIZED MODIFICATION OF SYSTEM CONFIGURATION ",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the hardware lock bit mechanism weaknesses, adversaries can modify system configurations leading to potential security risks.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACKERS",
      "entity_type": "ATTACKER",
      "description": "\"Attackers who exploit this vulnerability can gain unauthorized access to sensitive information stored in hardware registers.\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "id": "HARDWARE DESIGN REVIEW PHASE REQUIREMENT",
      "entity_type": "MITIGATION",
      "description": "\"During hardware design, all the system parameters and register defaults must be reviewed for security sensitivity.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "LARGE ADDRESS REGION VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"Defining large address regions with insufficient granularity increases vulnerability to unauthorized access or modification.\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "id": "INFOLEAK THROUGH ERROR RESPONSES ",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where attackers exploit discrepancies in system responses to infer sensitive information about users or systems.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "PRODUCT WITH INCOMPLETE ADDRESS REGION PROTECTION",
      "entity_type": "TARGET ENTITY",
      "description": "\"A product where hardware design lacks sufficient granularity in defining address regions protected by register locks.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "SOFTWARE EXPLOITING WEAKNESSES IN LOCK BITS",
      "entity_type": "SOFTWARE",
      "description": "\"Malicious or unintended software used by adversaries to take advantage of vulnerabilities in the hardware lock bit mechanism.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "SECURE CODING PRACTICES (CERT ORACLE SECURE CODING STANDARD)",
      "entity_type": "UNKNOWN",
      "description": "\"Insecure communications are mitigated by adhering to secure coding practices as defined by the CERT standard.\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "id": "TRUSTED FIRMWARE OR BOOTLOADER",
      "entity_type": "UNKNOWN",
      "description": "\"The conflict between functional requirements and security needs impacts the ability of trusted firmware to set configurations securely during boot process.\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "id": "CWE-203 VULNERABILITY (CVE EXAMPLES)",
      "entity_type": "UNKNOWN",
      "description": "\"The vulnerabilities exist in multiple operating systems, making them targets for exploitation based on observable discrepancies.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "MULTIPLE OPERATING SYSTEMS (CWE-203)",
      "entity_type": "UNKNOWN",
      "description": "\"The vulnerabilities exist in multiple operating systems, making them targets for exploitation based on observable discrepancies.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "PRODUCT VERSION CONTROL SYSTEM INFORMATION LEAKAGE VULNERABILITY (CVE-2004-0778) ",
      "entity_type": "UNKNOWN",
      "description": "\"The vulnerability allows for infoleaks through alternate history files in version control systems.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "PRODUCT SSL IMPLEMENTATION VULNERABILITY (CVE-2003-0078) ",
      "entity_type": "UNKNOWN",
      "description": "\"The vulnerability in the SSL implementation is a specific instance of broader timing attack issues.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "DIFFERENT ERROR MESSAGES GENERATION ",
      "entity_type": "UNKNOWN",
      "description": "\"Understanding how error messages are handled helps attackers exploit inconsistencies in responses.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "REMOTE ATTACKER ",
      "entity_type": "UNKNOWN",
      "description": "\"The remote attacker's goal is to expose sensitive information through various attack techniques and vulnerabilities.\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "id": "BYPASSING SECURITY LOCK BIT PATTERN ",
      "entity_type": "UNKNOWN",
      "description": "\"This attack pattern targets the vulnerability present in hardware's security lock bit protection mechanisms.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)",
      "entity_type": "UNKNOWN",
      "description": "\"Observing inconsistent error responses and timing variations are prerequisites for exploiting the observable discrepancy vulnerability.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "VARIOUS PLATFORMS (CWE-203)",
      "entity_type": "UNKNOWN",
      "description": "\"The observable discrepancy vulnerability exists in various platforms, making them targets for such attacks.\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "id": "SOFTWARE EXPLOITING WEAKNESSES IN LOCK BITS ",
      "entity_type": "UNKNOWN",
      "description": "\"The adversary uses software to exploit weaknesses in the lock bit mechanism of protected systems.\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "id": "COMPROMISE SECURE BOOT CHAIN",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the improper protection against voltage and clock glitches, an attacker can compromise the secure boot chain.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "DEVICE SUPPORTING SECURE BOOT FEATURES",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entity is a device that supports secure boot features but lacks proper protection against voltage and clock glitches.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "PRODUCT'S ARCHITECTURE WITH MIRRORED REGIONS",
      "entity_type": "TARGET ENTITY",
      "description": "\"The product's architecture involves mirroring regions which can lead to inconsistencies and potential security issues.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "PERSONAL KEY NETWORK TRANSMISSION VULNERABILITY (CVE-2021-34687)",
      "entity_type": "VULNERABILITY",
      "description": "\"Transmitting personal keys over the network using substitution ciphers can introduce vulnerabilities leading to interception and misuse.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "SIMULATION / EMULATION",
      "entity_type": "MITIGATION",
      "description": "\"Functional simulation during implementation phase verifies adherence to the access control policy on design.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "PERFORMANCE OPTIMIZATION THROUGH DUPLICATION",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves duplicating resources such as memory or computational units for performance optimization, potentially leading to synchronization issues.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "FAULT ATTACKS USING VOLTAGE AND CLOCK GLITCHES",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves using voltage and clock glitches to compromise a device's secure boot process and security logic.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "THOROUGH VERIFICATION OF DATA ROUTING LOGIC",
      "entity_type": "MITIGATION",
      "description": "\"Implement thorough verification procedures for data routing logic during the architecture and design phase to ensure effective blocking of illegal dataflows.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "SHADOW COPIES DIVERGENCE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique where shadow copies diverge from the original copy due to improper updates, leading to discrepancies that can be exploited.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "FUZZING (PENETRATION TESTING)",
      "entity_type": "MITIGATION",
      "description": "\"Testing access control mechanisms to verify protection against unauthorized software access through fuzzing or manual penetration testing.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "MIRRORED REGIONS WITHOUT SYNC CHECK",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability exists when mirrored regions are not checked for consistency, allowing discrepancies and potential security breaches.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "FAULTY FSM DESIGN",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability arising from faulty finite state machines (FSMs) that do not account for all possible states, leading to system instability.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "AUTOMATED ANALYSIS: INFORMATION FLOW TRACKING",
      "entity_type": "MITIGATION",
      "description": "\"Traces security sensitive data flow through the design to verify adherence to access policies without relying on specific scenarios or data values.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "DES ALGORITHM USE",
      "entity_type": "PRECONDITION",
      "description": "\"Using DES algorithm can make systems vulnerable to certain types of attacks due to its known weaknesses and outdated status.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "LOCAL COPY SYNCHRONIZATION FAILURE",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition involves the failure to synchronize local copies with their original counterparts properly, leading to inconsistencies.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "PARALLELIZE SHIFTING OF SECRET DATA",
      "entity_type": "MITIGATION",
      "description": "\"This mitigation involves parallelizing the shifting process to obscure power consumption patterns during cryptographic operations.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "MPU DESIGN ENHANCEMENTS FOR PREVENTING MEMORY OVERLAP",
      "entity_type": "MITIGATION",
      "description": "\"Recommendations to improve MPU design and prevent overlapping memory regions and related attacks.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "VOLTAGE GLITCH ATTACK TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A technique used during an attack where the voltage supplied to a device is altered, usually by reducing it rapidly and intermittently, to trigger unexpected behavior or faults.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "CACHE MEMORY DUPLICATION",
      "entity_type": "SOFTWARE",
      "description": "\"Cache memory duplication is used as an example of how duplicating resources can improve performance but introduces synchronization issues.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "MANUAL ANALYSIS",
      "entity_type": "MITIGATION",
      "description": "\"Manual analysis is a method to ensure that access policy for memory maps is correctly implemented.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "MD5 CONFIGURATION VULNERABILITY (CVE-2005-2946)",
      "entity_type": "VULNERABILITY",
      "description": "\"A default configuration using MD5 instead of stronger algorithms can simplify forgery attacks on certificates.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "MULTI-CORE PROCESSOR DESIGN",
      "entity_type": "TARGET ENTITY",
      "description": "\"A multi-core processor design with mirrored MMUs serves to illustrate the issue where local copies must be kept in sync for security and integrity.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "VOLTAGE AND CLOCK GLITCH EXPLOITATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique of employing voltage and clock glitches to bypass protection mechanisms or gain unauthorized access.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "HIGH-PERFORMANCE ON-CHIP BUS PROTOCOLS AND PROCESSOR DATA-PATHS",
      "entity_type": "TARGET ENTITY",
      "description": "\"These protocols and data-paths are the specific target of attacks due to their architecture, which allows for potential de-synchronization issues.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "IDENTITY CARD HASH COLLISION VULNERABILITY (CVE-2019-3907)",
      "entity_type": "VULNERABILITY",
      "description": "\"Using an MD5 hash for identity card verification introduces a vulnerability that could lead to unauthorized access or forgery.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "IMPROPER PRESERVATION OF CONSISTENCY BETWEEN INDEPENDENT REPRESENTATIONS OF SHARED STATE",
      "entity_type": "VULNERABILITY",
      "description": "\"This vulnerability arises when the product does not ensure that all local copies remain consistent with each other, leading to potential inconsistencies and security issues in distributed systems.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "CONSTANT-TIME ALGORITHM USAGE",
      "entity_type": "MITIGATION",
      "description": "\"Using constant-time algorithms for comparing security tokens or credentials can mitigate timing discrepancies and prevent side-channel attacks.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "MD5 ALGORITHM USE",
      "entity_type": "PRECONDITION",
      "description": "\"Using MD5 algorithm is considered as a precondition which can make systems vulnerable to specific types of attacks, such as hash collision and forgery.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "SHA-1 VULNERABILITY (CVE-2005-2946)",
      "entity_type": "VULNERABILITY",
      "description": "\"The use of SHA-1 in certain configurations introduces vulnerabilities simplifying attacks such as certificate forgery.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "OPERATING OUTSIDE DEVICE SPECIFICATIONS",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"This technique involves operating hardware outside its specified environmental conditions (temperature, voltage), which can lead to physical defects and security vulnerabilities.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "UNPRIVILEGED SW INTERFACE CHECK",
      "entity_type": "PRECONDITION",
      "description": "\"Checking if the interface to power management features like DVFS is available from unprivileged software (SW) which would make such attacks very easy for attackers.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "CWE-1191",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where authorization for a debug interface, such as JTAG, is missing or improperly enforced.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "INSUFFICIENT PHYSICAL PROTECTION DESIGN DECISIONS",
      "entity_type": "PRECONDITION",
      "description": "\"Design decisions that do not properly align with the intended level of physical protection can lead to vulnerabilities in the system.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "SECURITY GUARANTEES COMPROMISE",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of operating hardware outside its specifications or due to manufacturing defects, the product's security guarantees may be compromised leading to system instability and other vulnerabilities.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "MEMORY PROTECTION UNIT (MPU)",
      "entity_type": "TARGET ENTITY",
      "description": "\"A key component in SoC systems responsible for managing memory regions.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "CVE-2017-5754: SPECULATIVE EXECUTION VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A specific vulnerability identified in systems utilizing speculative execution, allowing unauthorized disclosure of information through a side-channel analysis of the data cache.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "MIRRORED REGIONS (TARGET ENTITY)",
      "entity_type": "TARGET ENTITY",
      "description": "\"Refers to regions within hardware or software architecture where data is duplicated for performance reasons but can lead to discrepancies if not properly synchronized.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "ENCRYPTION OF DEBUG COMMUNICATIONS",
      "entity_type": "MITIGATION",
      "description": "\"Encrypting communications over debug/test interfaces can prevent unauthorized agents from accessing sensitive information.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "SECURITY TOKENS IN SOC SYSTEMS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Security tokens in System on Chip (SoC) systems are target entities that can be improperly programmed by attackers to spoof actions.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "SECURE BOOT BYPASS AND EFUSE READING POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"The postcondition resulting from exploiting a lack of anti-glitch protections, where an attacker can bypass secure boot mechanisms and read protected eFuses.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "MMU SHADOW COPIES (SOFTWARE)",
      "entity_type": "SOFTWARE",
      "description": "\"Refers to shadow copies of the Memory-Management Unit's resources in multi-core processors designed for performance optimization but susceptible to synchronization issues.\"",
      "source_id": "chunk-f00f3b378bd7c23eedd4f2e92b0714ea"
    },
    {
      "id": "DEBUG INTERFACE MISCONFIGURATION",
      "entity_type": "PRECONDITION",
      "description": "\"Improper configuration of debug interfaces that does not enforce correct debug access levels during system boot or state transitions.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "FAULT INJECTION ATTACK VIA SOFTWARE CONTROL",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attacker uses software-controlled hardware features to inject faults, allowing them to bypass authentication steps or escalate privileges without physical access.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "DETECTION OF VOLTAGE AND CLOCK GLITCHES",
      "entity_type": "PRECONDITION",
      "description": "\"Attackers need to detect vulnerabilities related to voltage and clock glitch handling as a prerequisite for launching an attack.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "DYNAMIC MEMORY MANAGEMENT FLEXIBILITY EXPLOIT",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Exploiting the flexibility in dynamic memory management for privilege escalation or unauthorized access.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "UNTRUSTED AGENT",
      "entity_type": "ATTACKER",
      "description": "\"An untrusted agent is an entity that could exploit inconsistencies in memory access protections to bypass security controls.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "CWE-1244",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where an internal asset is assigned the wrong debug access level, leading to unintended exposure to untrusted agents.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "SYSTEM ON CHIP (SOC)",
      "entity_type": "TARGET ENTITY",
      "description": "\"A System on Chip (SoC) containing different IP blocks connected through interconnect-bus fabrics, which could be targeted by an attacker exploiting improper access control in a fabric bridge.\"<SEP>\"The target entity is a System-on-Chip (SoC) that includes components like debug interfaces and non-volatile memory that are vulnerable to improper handling.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124<SEP>chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "SYSTEM SOFTWARE MEMORY MANAGEMENT EXPLOIT",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A software component running at lower privilege can program a memory address region to overlap with other regions used by higher-privilege components, leading to attacks.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting the inconsistency in read/write access protections of aliased memory regions to bypass hardware-enforced access restrictions.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "MEMORY PROTECTION UNIT DESIGN WEAKNESS",
      "entity_type": "PRECONDITION",
      "description": "\"Weaknesses in MPU design that incorrectly handle overlapping addresses are prerequisites for successful exploitation.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "BYPASSING HARDWARE-ENFORCED ACCESS PROTECTION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Untrusted agents use this technique to modify or read protected memory by exploiting inconsistencies between primary and aliased memory blocks' access rights.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "SHA-1 ALGORITHM USE",
      "entity_type": "PRECONDITION",
      "description": "\"Using SHA-1 algorithm is considered a precondition which can make systems vulnerable to specific types of attacks due to known weaknesses.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "CLOCK GLITCH ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern that involves altering the frequency of the clock signal to exploit vulnerabilities in semiconductor devices.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "MEMORY MAPPING CONFIGURATION ADJUSTMENT",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A malicious agent can change the system address map to create new aliases that allow unauthorized access or modification of memory regions.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "MEMORY REGION OVERLAP DENIAL OF SERVICE ATTACK",
      "entity_type": "POSTCONDITION",
      "description": "\"An attacker may use overlapping memory addresses to launch a denial of service attack on high-privilege software memory regions.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "BLINDING OR MASKING TECHNIQUES FOR INTERNAL ASSETS",
      "entity_type": "MITIGATION",
      "description": "\"Applying blinding or masking techniques in strategic areas to protect internal assets from being accessed through debug interfaces.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability arises from the device's lack of proper protection against voltage and clock glitches, leading to potential security breaches.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "ACCESS CONTROL SYNCHRONIZATION BETWEEN MEMORY PROTECTION UNITS (MPU)",
      "entity_type": "MITIGATION",
      "description": "\"Ensuring consistency in protected ranges and policies between MPUs guarding aliased regions as a mitigation measure against inconsistent access protections.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "UNAUTHORIZED ACCESS THROUGH MEMORY OVERLAP TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic of using memory overlap vulnerabilities to gain unauthorized access to system resources.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "PROTECTION ROUTINE BYPASSING TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves bypassing protection routines that are designed to detect and prevent attacks, indicating a deeper level of access or manipulation from an attacker.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "RESTRICTED DEBUG MODE ENTRY CONTROLS",
      "entity_type": "MITIGATION",
      "description": "\"Controls to restrict enabling of memory aliasing features or modifying mapped memory region sizes to trusted software components only, preventing unauthorized actions.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "IMPROPER SECURITY TOKEN ASSIGNMENT PROTECTION MECHANISM VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A specific vulnerability related to improperly restricting the assignment of security tokens, making them mutable and exploitable.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "CLEAR SECURITY SENSITIVE VALUES WHEN ENTERING DEBUG MODE",
      "entity_type": "MITIGATION",
      "description": "\"Ensuring all registers containing sensitive assets are cleared whenever debug mode is enabled as a mitigation against uncleared debug information exposure.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS",
      "entity_type": "VULNERABILITY",
      "description": "\"The hardware logic can incorrectly forward data before security checks are complete, potentially leading to unauthorized access to sensitive information.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "WEAK RANDOMNESS GENERATION",
      "entity_type": "PRECONDITION",
      "description": "\"Generating weak randomness is a precondition that can be exploited to compromise cryptographic systems and data integrity.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "IMPROPERLY RESTRICTED SECURITY TOKEN ASSIGNMENT",
      "entity_type": "VULNERABILITY",
      "description": "\"A security vulnerability wherein Security Tokens, used to differentiate actions originated from trusted entities in SoCs, are improperly restricted and thus mutable by malicious agents.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "MELTDOWN ATTACK",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A specific attack technique where an attacker exploits the de-synchronization between data and permissions checking logic in high-performance on-chip bus protocols and processor data-paths.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "PRODUCT PHYSICAL PROTECTION MECHANISM IMPLEMENTATION ERRORS",
      "entity_type": "PRECONDITION",
      "description": "\"Errors in implementing physical protection mechanisms can lead to vulnerabilities allowing unauthorized access.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO SENSITIVE MEMORY REGIONS",
      "entity_type": "POSTCONDITION",
      "description": "\"Untrusted agents exploit memory mapping inconsistencies to gain unauthorized access or modification capabilities over sensitive memory regions as a consequence of the vulnerability.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "SPECULATIVE EXECUTION AND INDIRECT BRANCH PREDICTION EXPLOITATION",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern involving exploiting speculative execution and indirect branch prediction vulnerabilities to allow unauthorized disclosure of information via a side-channel analysis of the data cache.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "ARCHITECTURE OR DESIGN REVIEW",
      "entity_type": "MITIGATION",
      "description": "\"Manual documentation review of system memory map, register specification, and permissions ensures proper policy implementation.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A system where higher-order address bits are ignored by the decoder unit, allowing for aliased memory regions to have different read/write protections leading to access control bypass.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "CWE-821: INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition involves errors in hardware logic that incorrectly forward data before security checks are complete, leading to potential unauthorized access scenarios.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "UNAUTHORIZED PARTY",
      "entity_type": "ATTACKER",
      "description": "\"An unauthorized party is an entity that attempts to exploit vulnerabilities such as timing discrepancies and power side-channel attacks.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "MICROCONTROLLER HARDWARE AND PROCESSOR SYSTEMS",
      "entity_type": "TARGET ENTITY",
      "description": "\"The microcontroller hardware and processor systems that are the targets of these security vulnerabilities.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "RAZOR FLIP-FLOPS",
      "entity_type": "MITIGATION",
      "description": "\"Special flip-flops designed to detect and prevent glitches in security-sensitive hardware modules.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "SYSTEM-ON-CHIP (SOC)",
      "entity_type": "TARGET ENTITY",
      "description": "\"A System-On-A-Chip where Security Tokens are improperly protected, potentially leading to unauthorized actions.\"<SEP>\"Modern SoC hardware platforms are the target entities for attacks exploiting missing security identifier vulnerabilities in transaction handling processes.\"<SEP>\"Modern System-On-Chip hardware platforms are the target entities for attacks that exploit missing security identifier vulnerabilities in transaction handling processes.\"<SEP>\"The SoC fetches and authenticates the boot code during secure-boot process, making it a target for manipulation.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9<SEP>chunk-2cef8319ae87f01f627389db9b2b7646<SEP>chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "DATA CONFIDENTIALITY BREACH",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the insecure de-synchronization between control and data channels, an attacker can gain unauthorized access to sensitive information, compromising confidentiality.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "COMPARISON LOGIC GRANULARITY ISSUE",
      "entity_type": "PRECONDITION",
      "description": "\"A precondition where the product's comparison logic is performed step-by-step rather than in one operation, making it vulnerable to timing attacks.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "SECURITY TOKEN MECHANISM IN SOCS",
      "entity_type": "MITIGATION",
      "description": "\"Mechanism used by Systems-On-A-Chip to differentiate and identify actions based on security tokens assigned to agents.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "CWE-1256",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where the interface to power management features like Dynamic Voltage and Frequency Scaling (DVFS) is available from unprivileged software, making such attacks very easy for attackers.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "STRING.EQUALS() TIMING DISCREPANCY",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves exploiting the difference in execution time of String.equals() when comparing HMAC signatures, allowing attackers to infer information about the signatures.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "INCORRECT SELECTION OF FUSE VALUES VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability allowing an attacker to set a system to an insecure state by blowing fuses incorrectly.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "MEMORY ACCELERATOR FOR SSD PRODUCT",
      "entity_type": "TARGET ENTITY",
      "description": "\"An SSD product's memory accelerator that exposes sensitive system information due to uncleared debug information.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "REDUNDANCY IMPLEMENTATION FOR SECURITY-SENSITIVE CODE",
      "entity_type": "MITIGATION",
      "description": "\"Implementing redundancy in security-sensitive code to mitigate glitch attacks by ensuring that critical checks are performed multiple times with different methods.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "POWER SIDE-CHANNEL ATTACK",
      "entity_type": "ATTACK PATTERN",
      "description": "\"A pattern where an attacker monitors a device's real-time power consumption during security token evaluation and uses the data to determine the value of the reference token.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "COMPARISON LOGIC TIMING ATTACK POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting comparison logic granularity issues, attackers can perform timing attacks leading to interception and misuse of process data.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "CRYPTOGRAPHY OPERATIONS SENSITIVE VALUES EXPOSURE IN HARDWARE DEBUG MODE ",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability wherein security-sensitive values, such as keys and intermediate steps of cryptographic operations, are not cleared when entering debug mode.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "SEMICONDUCTOR DEFECTS IN SECURITY-SENSITIVE HARDWARE MODULES",
      "entity_type": "PRECONDITION",
      "description": "\"Semiconductor defects occurring in security-sensitive hardware modules that can compromise the security objectives of these modules due to unexpected faults in chip-internal signals or registers.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "TIMING-SIDE CHANNEL ATTACK ON ROUTER PASSWORD VALIDATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack that relies on observing timing differences in responses to incorrect password guesses to reveal passwords through brute-force attacks.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "BYPASS PROTECTION MECHANISM AND GAIN PRIVILEGES TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic of bypassing protection mechanisms to gain unauthorized privileges or access confidential information.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "UNSPECIFIED ATTACKER",
      "entity_type": "ATTACKER",
      "description": "\"An unspecified attacker can exploit the vulnerabilities in processor instruction sequences or data immutability.\"<SEP>\"An unspecified attacker exploits vulnerabilities in hardware designs that lack proper access control for mirrored or aliased memory regions.\"<SEP>\"An unspecified attacker may exploit the vulnerabilities to manipulate sensor data or gain unauthorized control over system transactions.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b<SEP>chunk-494a02c2f9b114781552cc59c3c1dce1<SEP>chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "UNAUTHORIZED CONTROL THROUGH IP COMMUNICATION FIRMWARE",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of the vulnerability allowing access to a boot shell via certain impulses in the IP communication firmware, attackers may gain unauthorized control or manipulate data.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "SECURE COMPARISON LOGIC DESIGN PATTERN",
      "entity_type": "MITIGATION",
      "description": "\"A secure design pattern ensuring comparison operations are performed as one operation to prevent timing leaks and vulnerabilities.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability arises when a product's design does not sufficiently protect against unauthorized physical access.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "SOFTWARE-CONTROLLED POWER MANAGEMENT FEATURES",
      "entity_type": "SOFTWARE",
      "description": "\"Features allowing software to manage power and clock settings can be exploited by attackers if not properly secured.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "ANTI-GLITCH PROTECTIONS LACK",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where a lack of anti-glitch protections allows an attacker to launch physical attacks, potentially bypassing secure boot mechanisms and reading protected eFuses.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "HARDWARE SECURITY MEASURES IMPLEMENTATION SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"Software or tool used for implementing hardware security measures like the non-executable bit on data areas.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Manipulating the device clock or voltage supply is a technique used to inject faults cheaply with physical access, which can also be done from software.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "LEVEL SENSORS",
      "entity_type": "MITIGATION",
      "description": "\"Implemented at the SoC or platform level, these sensors can detect anomalies caused by glitch attacks.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "COMPARISON LOGIC IMPLEMENTATION SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"Software used for implementing comparison logic that compares step-by-step rather than in a single operation, leading to timing attacks.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The product allows address regions to overlap, which can result in the bypassing of intended memory protection and potentially allow privilege escalation attacks.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "ROWHAMMER ATTACK",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Repeatedly writing to DRAM at high speed from unprivileged software causes bit flips in adjacent memory locations, leading to potential data corruption or information disclosure.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "MICROARCHITECTURAL STATE EXPOSURE",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves exploiting microarchitectural state exposure through speculative execution and indirect branch prediction flaws to read privileged memory from a non-privileged context.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "UNAUTHORIZED ACCESS AND DATA EXPOSURE",
      "entity_type": "POSTCONDITION",
      "description": "\"The postcondition involves unauthorized access leading to the exposure of sensitive data due to security check failures.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Gathering power consumption traces can reveal sensitive information through side channel analysis if hardware features like Intel RAPL are not adequately protected.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "BYPASS ACCESS CONTROL MECHANISMS",
      "entity_type": "TACTIC",
      "description": "\"Using voltage and clock glitch attacks to bypass access control mechanisms implemented in hardware or firmware.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "UNAUTHORIZED ACTOR",
      "entity_type": "ATTACKER",
      "description": "\"An unauthorized actor physically accessing restricted areas intended to have limited access.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "PROPER ACCESS CONTROL FOR PHYSICAL CONDITIONS MANAGEMENT",
      "entity_type": "MITIGATION",
      "description": "\"Ensuring proper access control mechanisms protect software-accessible physical operating conditions (clock frequency, voltage) is recommended to mitigate these attacks.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "SECURE BOOT BYPASS VIA ANTI-GLITCH PROTECTIONS LACK",
      "entity_type": "POSTCONDITION",
      "description": "\"The condition that arises when secure boot mechanisms can be bypassed due to the lack of anti-glitch protections.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "PHYSICAL ACCESS CONTROL MECHANISM",
      "entity_type": "MITIGATION",
      "description": "\"Mechanisms designed and implemented to restrict physical access to certain parts of a product or system as security measures.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "IMPROPER SECURITY LOCK BYPASSING",
      "entity_type": "TACTIC",
      "description": "\"Attackers aim to bypass security locks and exploit vulnerabilities through improper access control for power/clock management in hardware designs.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "UNAUTHORIZED ACCESS THROUGH IP COMMUNICATION FIRMWARE",
      "entity_type": "POSTCONDITION",
      "description": "\"Access gained through exploiting vulnerabilities in IP communication firmware, allowing unauthorized control or data manipulation.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "INCONSISTENT MEMORY ACCESS CONTROL",
      "entity_type": "PRECONDITION",
      "description": "\"Hardware may allow untrusted agents to bypass memory protection by exploiting inconsistent read/write permissions enforced on aliased or mirrored memory regions.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "MANUFACTURING AND OPERATIONAL DEFECTS",
      "entity_type": "PRECONDITION",
      "description": "\"Semiconductor defects occurring during manufacturing due to issues in the environment or improper handling, as well as operational defects caused by usage under extreme conditions.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "EXECUTE UNAUTHORIZED CODE OR COMMANDS",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting vulnerabilities, attackers may execute unauthorized code or commands on the system.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "CVE-2019-11157 (PLUNDERVOLT)",
      "entity_type": "VULNERABILITY",
      "description": "\"Improper conditions check in voltage settings for some Intel processors enabling privilege escalation and information disclosure.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS",
      "entity_type": "TARGET ENTITY",
      "description": "\"A hardware module that is security-sensitive and contains semiconductor defects leading to unexpected faults.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "SPOOFED UPDATE REQUEST",
      "entity_type": "SOFTWARE",
      "description": "\"A type of software used by attackers to send fake update requests to shadow copies, causing them to adopt attacker-friendly values.\"",
      "source_id": "chunk-6c031a7ff8a513b1dd7b59f833f1ac53"
    },
    {
      "id": "CHIPWHISPERER",
      "entity_type": "SOFTWARE",
      "description": "\"A specialized hardware tool used during the implementation phase to check for susceptibility to voltage and clock glitching attacks in actual hardware.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "INTEL PROCESSORS, AMD EXTENSIONS FOR LINUX",
      "entity_type": "TARGET ENTITY",
      "description": "\"Certain Intel processors and AMD's extension to a Linux service are targeted entities due to their vulnerable power management interfaces.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "SECURE DEBUG INTERFACE",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern involving compromising secure debug interfaces through improper protection against voltage and clock glitches.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "INTEL RAPL INTERFACE",
      "entity_type": "SOFTWARE",
      "description": "\"The Intel Running Average Power Limit (RAPL) interface allows software to monitor and manage power consumption on Intel processors. If not properly secured, it can be exploited for side-channel attacks.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "HARDWARE PRODUCT EXPLOITATION GROUP (HPEG)",
      "entity_type": "ATTACKER",
      "description": "\"A group of attackers targeting specific hardware products, likely through vulnerabilities in remapping registers or memory-mapped I/O registers.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "PHYSICAL MANUFACTURING ERRORS",
      "entity_type": "PRECONDITION",
      "description": "\"Errors during manufacturing phase can introduce weaknesses into physical access control measures.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "CLFLUSH INSTRUCTION EXPLOIT",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An exploit that uses the CLFLUSH instruction to perform Rowhammer attacks and cause bit flips in adjacent memory locations.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "VIRTUALIZATION SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"The software that allows the compromise of hardware by accessing certain remapping registers (CVE-2008-7096).\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "FAULTY FSM STATE HANDLING",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attacker uses faulty state handling in finite state machines to cause instability or gain privileges.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "ACCESS CONTROL INADEQUACY IN LINUX KERNEL DRIVER",
      "entity_type": "PRECONDITION",
      "description": "\"Insufficient access control mechanisms in the Linux kernel driver for Intel processors can allow attackers to perform information disclosure through side-channel analysis.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "PROCESSOR DESIGN FLAW EXPLOITATION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where ring 0 code can access more privileged rings due to a processor design flaw.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "ROWHAMMER VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability that allows unprivileged software to repeatedly write to DRAM, leading to bit flips in adjacent memory locations (CVE-2015-0565).\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "REGISTER REMAPPING TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A technique used by attackers to exploit overlapping address ranges in memory or remapping registers.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "INFORMATION DISCLOSURE THROUGH SIDE CHANNEL ATTACKS",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting hardware vulnerabilities, attackers can perform information disclosure via side-channel analysis.\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "id": "MEMORY-ACCESS-CONTROL FILTER IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"An effective mitigation against improper handling of single-event upsets and register interface access control issues is the implementation of a memory-access-control filter that applies policies to overlapping ranges.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION",
      "entity_type": "VULNERABILITY",
      "description": "\"The use of a cryptographic primitive with a risky implementation is considered a security vulnerability because it can weaken the overall system's encryption strength.\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "id": "LIMITED-WRITE NON-VOLATILE MEMORIES MANAGEMENT FAILURE",
      "entity_type": "PRECONDITION",
      "description": "\"Failure to manage limited-write non-volatile memories correctly leads to potential data integrity issues.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "COMPROMISE HARDWARE PRODUCT SECURITY",
      "entity_type": "TACTIC",
      "description": "\"The tactic employed by attackers aiming to compromise the security guarantees provided by hardware products through exploiting design flaws or vulnerabilities.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "CRYPTOGRAPHIC PRIMITIVE",
      "entity_type": "TARGET ENTITY",
      "description": "\"A specific cryptographic algorithm or technique used in systems to secure data, such as digital signatures, hash functions, and ciphers.\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "id": "UNAUTHORIZED DEBUG SESSIONS",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting vulnerabilities, attackers can perform unauthorized debug sessions and access sensitive information.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "FORMAL VERIFICATION",
      "entity_type": "MITIGATION",
      "description": "\"Assertions created in formal verification ensure illegal register accesses cannot occur, covering entire design space effectively.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "IMPROPER HANDLING OF OVERLAPPING MEMORY REGIONS AND REGISTER ACCESS CONTROL",
      "entity_type": "PRECONDITION",
      "description": "\"This precondition involves improper handling of overlapping memory regions and lack of adequate access control for register interfaces, setting the stage for potential exploitation by attackers.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "NON-STANDARD CRYPTOGRAPHY IMPLEMENTATION",
      "entity_type": "PRECONDITION",
      "description": "\"Using a non-standard implementation of cryptographic primitives can introduce vulnerabilities due to lack of thorough review and testing.\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "id": "JTAG ACCESS CONTROL MISMANAGEMENT",
      "entity_type": "PRECONDITION",
      "description": "\"Failure to properly manage JTAG access control can expose the system to unauthorized debug sessions.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "CUSTOM CRYPTOGRAPHIC ALGORITHMS DEVELOPMENT",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Developing custom or private cryptographic algorithms can expose systems to known attacks by cryptographers.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "CVE-2008-7096: REMAPPING REGISTER VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability allowing compromise of hardware products through accessing certain remapping registers, as documented in CVE-2008-7096.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "CRYPTOGRAPHIC ALGORITHM EVALUATION",
      "entity_type": "MITIGATION",
      "description": "\"Reviewing cryptographic algorithms for compliance with standards and ensuring they have undergone rigorous scrutiny from security experts.\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "id": "PROCESSOR DESIGN FLAW ENABLING RING 0 ACCESS TO PRIVILEGED RANGES",
      "entity_type": "POSTCONDITION",
      "description": "\"The postcondition where a processor design flaw allows ring 0 code to access more privileged rings by causing a register window to overlap a range of protected system RAM, leading to potential security breaches.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "MD5 VULNERABILITY (CVE-2020-4778)",
      "entity_type": "VULNERABILITY",
      "description": "\"The use of MD5 in software introduces a vulnerability that makes the system less secure compared to using SHA-256.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "ATTACKER EXPLOITATION OF WEAK ALGORITHMS",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where attackers exploit vulnerabilities in weak or non-standard cryptographic implementations to gain unauthorized access to encrypted data.\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "id": "SECURITY-SENSITIVE MODULES IN HARDWARE PRODUCT",
      "entity_type": "TARGET ENTITY",
      "description": "\"Hardware modules within products that are sensitive to security concerns and susceptible to single-event upsets (SEUs) leading to compromised security guarantees.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "TUNABLE REPLICA CIRCUITS (TRCS)",
      "entity_type": "MITIGATION",
      "description": "\"At the circuit level, TRCs can be implemented to mitigate glitch attacks by providing a tunable reference for comparing actual device signals against expected patterns.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "ADVERSARIAL ACCESS TO ENCRYPTED DATA",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the risky implementation, an attacker can potentially read and manipulate encrypted information.\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "id": "PROCESSOR DESIGN FLAW",
      "entity_type": "VULNERABILITY",
      "description": "\"A processor design flaw that allows ring 0 code to access more privileged rings, compromising security-sensitive modules in hardware products.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "PRIVILEGE ESCALATION VIA MEMORY OVERLAP EXPLOIT",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attacker can exploit overlapping memory regions to escalate privileges or bypass protection mechanisms.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "MEMORY-ACCESS-CONTROL CHECK FILTER",
      "entity_type": "MITIGATION",
      "description": "\"A filter designed to apply a policy on overlapping memory ranges and enforce proper handling of overlapping regions to prevent unauthorized access.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "SECURITY-SENSITIVE MODULE",
      "entity_type": "TARGET ENTITY",
      "description": "\"Modules within hardware products that handle sensitive data such as security settings or critical operations, making them potential targets for attacks.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "CHECKSUM USE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Using checksums instead of cryptographically generated hashes can weaken security measures by introducing vulnerabilities.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "SINGLE-EVENT UPSET (SEU)",
      "entity_type": "PRECONDITION",
      "description": "\"Temporary bit flips caused by single-event upsets in hardware, potentially compromising the integrity and security of sensitive modules.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "LINEAR FEEDBACK SHIFT REGISTER (LFSR)",
      "entity_type": "PRECONDITION",
      "description": "\"Using LFSR as a substitute for an accepted and standard Random Number Generator is discouraged due to its potential weaknesses.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "TRIPLE MODULAR REDUNDANCY (TMR) IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"A mitigation technique that provides redundancy to protect against bit flips or transient errors in security-sensitive hardware modules.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "SECURITY REVIEW AGAINST TRANSFER OF ATTACK TARGET",
      "entity_type": "MITIGATION",
      "description": "\"Reviewing whether protections against glitching merely transfer the attack target, as depending on such protections can be akin to Security by Obscurity.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "CVE-2019-18827",
      "entity_type": "VULNERABILITY",
      "description": "\"A specific case of CWE-1191, allowing full system access before secure boot initialization completes.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "SHA-2 CHAINING FOR ENCRYPTION IDEA (DISCOURAGED)",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The idea of using SHA-2 chaining for encryption purposes is discouraged because it might be misused in ways that compromise security.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "ERROR-CORRECTING CODES (ECC) AND ADDRESS INTERLEAVING",
      "entity_type": "MITIGATION",
      "description": "\"A mitigation technique involving SRAMs with Error-Correcting Codes and address interleaving to protect against single-event upsets in security-critical data.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "IMPROPER MEMORY-MAPPED I/O REGISTERS",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where memory-mapped I/O registers lack proper access control, allowing unauthorized software to tamper with hardware functionality and potentially violate confidentiality or integrity.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES",
      "entity_type": "SOFTWARE",
      "description": "\"Incorrectly implemented circuitry or sensors that fail to detect and mitigate voltage and clock glitches, potentially allowing attackers to exploit the system.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "READ MEMORY AND MODIFY MEMORY OPERATIONS",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Exploiting voltage and clock glitches to execute unauthorized read or modify memory operations on the device's hardware.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "FREQUENT KEY UPDATES",
      "entity_type": "MITIGATION",
      "description": "\"Regularly updating keys limits the amount of data available for analysis by an attacker in a power or timing attack.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "ATTACKER ENTITY (NOT NAMED)",
      "entity_type": "ATTACKER",
      "description": "\"An attacker may exploit undocumented features or chicken bits and sensitive non-volatile information not protected during debug to gain unauthorized access.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where attackers exploit comparison logic that is performed in steps rather than across the entire string in one operation.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves exploiting undocumented features or chicken bits on a device to disable security features or obtain entry points for unauthorized access.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Accessing security-sensitive information stored in fuses during debug operations without proper protection can lead to exposure of critical data.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "PREDICTABLE ALGORITHM IN RANDOM NUMBER GENERATOR (CWE-1240)",
      "entity_type": "VULNERABILITY",
      "description": "\"A device using a predictable algorithm generates pseudo-random numbers, leading to compromised randomness and exposure of internal states.\"",
      "source_id": "chunk-5d9aa46e1c0b88bd33dd6122a455f98b"
    },
    {
      "id": "DISABLING CHICKEN BITS IN PRODUCTION",
      "entity_type": "MITIGATION",
      "description": "\"Ensure that chicken bits are disabled in production devices to prevent unauthorized access.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"An IP communication firmware vulnerability allowing access to a boot shell through certain impulses, which can be exploited for unauthorized control or data manipulation.\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "id": "PROTECTING SENSITIVE INFORMATION DURING DEBUG OPERATIONS",
      "entity_type": "MITIGATION",
      "description": "\"Disable access to security-sensitive information stored in fuses directly and reflected from temporary storage locations when in debug mode.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "IMPROPER WRITE HANDLING IN NON-VOLATILE MEMORIES",
      "entity_type": "VULNERABILITY",
      "description": "\"The product does not correctly implement wear leveling operations in limited-write non-volatile memories, potentially causing data integrity issues.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "EXPLOITING SECURITY TOKEN ASSIGNMENT WEAKNESSES PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where attackers exploit the improper assignment of security tokens to gain unauthorized access.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "HARDWARE MEMORY AND REGISTER BIT MODIFICATION",
      "entity_type": "POSTCONDITION",
      "description": "\"An attacker can modify hardware memory or register bits, leading to security breaches through improperly restricted software interfaces.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "ATTACKER (NOT EXPLICITLY NAMED)",
      "entity_type": "ATTACKER",
      "description": "\"An unspecified attacker who exploits vulnerabilities to gain unauthorized access.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "SECURITY-SENSITIVE INFORMATION (STORED IN FUSES)",
      "entity_type": "VULNERABILITY",
      "description": "\"Access to security-sensitive values programmed into fuses during debug operations is not limited, leading to potential exposure of critical data.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "MANIPULATION OF POWER MANAGEMENT FEATURES",
      "entity_type": "PRECONDITION",
      "description": "\"Improperly secured power management features are a prerequisite for mounting fault injection and side-channel attacks via software control.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "ACCESS CONTROL MECHANISMS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Various hardware and firmware-based mechanisms that provide access control to sensitive information or software on the device.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "DEVICE WITH UNDOCUMENTED FEATURES/CHICKEN BITS",
      "entity_type": "TARGET ENTITY",
      "description": "\"The device that includes chicken bits or undocumented features can be targeted for unauthorized access due to these design elements.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "SECURITY TOKEN EVALUATION AGAINST REFERENCE VALUE",
      "entity_type": "PRECONDITION",
      "description": "\"Evaluation of security tokens against a reference value is necessary before the side-channel attack can be effective.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "SECURE BOOT PROCESS",
      "entity_type": "TACTIC",
      "description": "\"Ensuring a trusted environment for the operating system by validating each stage of the boot process before transferring control.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "CWE-1242",
      "entity_type": "VULNERABILITY",
      "description": "\"A true random number generator should be implemented for cryptographic algorithms to prevent exploitation of undocumented features or chicken bits that can create entry points for unauthorized actors.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "EXPLOITING VULNERABILITIES FOR UNAUTHORIZED ACCESS",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves exploiting vulnerabilities to gain unauthorized access and control over system features.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "RANDOM DATA ADDITION IN CRYPTO OPERATIONS",
      "entity_type": "MITIGATION",
      "description": "\"Adding random data before and subtracting it after cryptographic operations can mask side-channel information but incurs performance overhead.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "INSECURE SECURITY CHECKS LOGIC IMPLEMENTATION",
      "entity_type": "PRECONDITION",
      "description": "\"An insecure implementation of security checks logic in hardware is a prerequisite for attackers to exploit vulnerabilities.\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "id": "CVE-2021-3692",
      "entity_type": "VULNERABILITY",
      "description": "\"PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens, which is a predictable pseudo-random number generator and not suitable for cryptographic algorithms.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "SENSITIVE HARDWARE FEATURES ACCESSIBLE THROUGH SOFTWARE INTERFACE",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability lies in providing unrestricted access via software interfaces to device functionalities like power and clock management.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting CWE-1244, sensitive information can be exposed to unauthorized agents through improperly configured debug interfaces.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "DESIGN CHANGE DURING IMPLEMENTATION PHASE",
      "entity_type": "PRECONDITION",
      "description": "\"The design originally specifies a cryptographically secure random number generator but changes during implementation due to unforeseen constraints.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "FUSE VALUES CONFIGURATION SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"The software used by an attacker to incorrectly set fuse values, leading the system into an insecure state.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "PHYSICAL PRODUCT MANUFACTURING PHASE WEAKNESSES",
      "entity_type": "POSTCONDITION",
      "description": "\"Weaknesses introduced during the manufacturing phase that compromise the intended level of physical security.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS",
      "entity_type": "ATTACK PATTERN",
      "description": "\"Using mt_rand() function in PHP frameworks can lead to predictable token generation, making systems vulnerable to attacks.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "SECURE SYSTEM DESIGN IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing secure system design practices that ensure blown fuses do not put the product into an insecure state.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "MD5 HASH VULNERABILITY (CVE-2005-2946)",
      "entity_type": "VULNERABILITY",
      "description": "\"Identity card uses MD5 hash of a salt and password, leading to potential vulnerabilities due to MD5's weaknesses.\"",
      "source_id": "chunk-5d9aa46e1c0b88bd33dd6122a455f98b"
    },
    {
      "id": "MALICIOUS AGENT",
      "entity_type": "ATTACKER",
      "description": "\"A malicious actor exploiting improper access control policies to gain unauthorized access.\"<SEP>\"A malicious agent exploiting a resource access control flaw to gain unauthorized access and manipulate resources.\"<SEP>\"A malicious agent that can improperly program a Security Token to spoof actions as if they originated from a trusted agent.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98<SEP>chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "UNDOCUMENTED DEBUG INTERFACES EXPLOITATION",
      "entity_type": "TACTIC",
      "description": "\"Exploiting undocumented debug interfaces for unauthorized access and modification of security-sensitive information.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "IMPROPER RESTRICTION OF SOFTWARE INTERFACES TO HARDWARE FEATURES",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where software interfaces improperly limit or do not restrict functionalities that can affect hardware, such as power management features.\"",
      "source_id": "chunk-6a4dfbf47077a5469d7329b776a196c9"
    },
    {
      "id": "RESTRICTED INFORMATION EXPOSURE",
      "entity_type": "POSTCONDITION",
      "description": "\"When the improper physical access control leads to exposure of restricted information due to insufficient protection measures.\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "id": "TRUE RANDOM NUMBER GENERATOR IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing a true random number generator is recommended to avoid predictable pseudo-random numbers in cryptographic algorithms.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "COMPROMISE SYSTEM SECURITY",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves exploiting improper protection against voltage and clock glitches to gain unauthorized privileges or access sensitive information.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "HARDWARE-BASED SECURITY FEATURES",
      "entity_type": "TARGET ENTITY",
      "description": "\"Hardware-based security features such as secure boot, access controls, and debug interfaces that can be compromised by attackers.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "SECURITY-SENSITIVE INFORMATION STORED IN FUSES",
      "entity_type": "VULNERABILITY",
      "description": "\"Access to security-sensitive information stored in fuses during debug operations can be exploited due to lack of proper protection.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "PROPER IMPLEMENTATION OF SECURE BOOT AND PROTECTION LOGIC",
      "entity_type": "MITIGATION",
      "description": "\"Implementing robust circuitry and sensors to detect and mitigate voltage and clock glitches, ensuring secure boot processes cannot be circumvented.\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "id": "MD4 ALGORITHM USE",
      "entity_type": "PRECONDITION",
      "description": "\"The use of MD4 algorithm as a default configuration can introduce vulnerabilities and should be avoided in new implementations.\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "id": "IMPLEMENTATION OF CHICKEN BITS IN DEVICES",
      "entity_type": "PRECONDITION",
      "description": "\"The implementation phase includes chicken bits or undocumented features that can create entry points for unauthorized access.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "INCORRECT FUSE VALUES SETTING TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Technique of incorrectly setting fuse values to drive the system into an insecure state.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "UNAUTHORIZED CODE EXECUTION POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"Unauthorized code execution resulting from exploiting system vulnerabilities, leading to potential compromise of integrity and availability.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "SECURITY TOKEN IMPROPER ASSIGNMENT PROTECTION WEAKNESS",
      "entity_type": "PRECONDITION",
      "description": "\"Improper handling of overlap between protected memory ranges and security token assignment issues are conditions necessary for exploitation by attackers.\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "id": "SENSITIVE NON-VOLATILE INFORMATION PROTECTION DURING DEBUG MODE",
      "entity_type": "MITIGATION",
      "description": "\"Disabling access to security-sensitive information stored in fuses and temporary storage locations during debug mode is recommended.\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "id": "SECURE BOOT BYPASSING ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where an attacker exploits the ability to access JTAG/debugging ports before secure boot initialization completes.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "HPEG",
      "entity_type": "UNKNOWN",
      "description": "\"The HPEG group exploits vulnerabilities in virtualization software, such as the one documented in CVE-2008-7096.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "CWE-1191 AND CWE-1244",
      "entity_type": "UNKNOWN",
      "description": "\"Both vulnerabilities can arise from faulty FSM designs that do not account for all possible states or transitions.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "MD5 HASH ALGORITHM",
      "entity_type": "UNKNOWN",
      "description": "\"The MD5 hash vulnerability exploits the weaknesses in the MD5 algorithm.\"",
      "source_id": "chunk-5d9aa46e1c0b88bd33dd6122a455f98b"
    },
    {
      "id": "TRIPLE MODULAR REDUNDANCY (TMR)",
      "entity_type": "UNKNOWN",
      "description": "\"Triple modular redundancy mitigates the impact of single-event upsets on security-sensitive hardware modules.\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "id": "ACCESS CONTROL SYNCHRONIZATION BETWEEN MPU",
      "entity_type": "UNKNOWN",
      "description": "\"Mitigates inconsistencies in access protections by ensuring synchronization across MPUs protecting aliased regions.\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "id": "SYSTEM INSTABILITY AND PRIVILEGE ESCALATION",
      "entity_type": "UNKNOWN",
      "description": "\"Exploiting faulty FSM states can lead to system instability or gaining additional privileges.\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "id": "CRYPTOGRAPHIC PRIMITIVE EVALUATION",
      "entity_type": "UNKNOWN",
      "description": "\"Ensuring cryptographic algorithms are properly evaluated helps mitigate risks associated with non-standard implementations.\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "id": "INCORRECT COMPARISON LOGIC GRANULARITY ISSUE",
      "entity_type": "UNKNOWN",
      "description": "\"Postconditions involving timing attacks result from exploiting issues with comparison logic granularity.\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "id": "CVE-2021-33150 AND CVE-2021-0146 VULNERABILITIES",
      "entity_type": "VULNERABILITY",
      "description": "\"These vulnerabilities involve hardware processors allowing activation of test or debug logic at runtime, enabling potential escalation of privileges and manipulation of system settings.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "MODERN PROCESSORS WITH SHARED RESOURCES",
      "entity_type": "TARGET ENTITY",
      "description": "\"Hardware architecture targeted by these vulnerabilities, involving shared microarchitectural resources.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "PREVENT DATA LEAKAGE",
      "entity_type": "TACTIC",
      "description": "\"The tactic of ensuring sensitive data is properly removed or overwritten during product decommissioning to prevent unauthorized access.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "INSTRUCTION SEQUENCE EXPLOITATION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting combinations of processor instructions leading to undesirable and potentially security-critical behavior.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "INTEL CHIPSETS AND SIMATIC DEVICES",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entities include Intel chipsets and Siemens SIMATIC S7-1200 and S7-200 SMART CPU families that are vulnerable during manufacturing.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "SOC AND MICROCONTROLLER HARDWARE",
      "entity_type": "TARGET ENTITY",
      "description": "\"Microcontroller hardware and SoCs are the target entities of attacks exploiting unprotected alternate hardware interfaces or physical side channels.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "SENSOR VALUE MANIPULATION LEADING TO DOS OR HARDWARE DAMAGE",
      "entity_type": "POSTCONDITION",
      "description": "\"The postconditions include sensor value manipulation leading to a Denial-Of-Service (DoS) condition or physical damage due to bypassing safe operational limits.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "INCOMPLETE REMOVAL PROCEDURES",
      "entity_type": "PRECONDITION",
      "description": "\"Inadequate procedures for removing sensitive data from a device before it is decommissioned can be exploited by attackers.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Exploiting specific instruction sequences in the processor's ISA can lead to unexpected behaviors such as CPU lock-ups or DoS conditions.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "HARDWARE-SENSOR BLOCKS AND FABRIC END-POINT DEVICES",
      "entity_type": "TARGET ENTITY",
      "description": "\"Hardware-sensor blocks and fabric end-point devices are the targets of potential attacks, involving manipulation of parametric data values and enabling unauthorized control over system transactions.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "SENSITIVE DATA VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability arises when sensitive data remains accessible after the product has been decommissioned, posing risks of unauthorized access.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "RIGOROUS TESTING STRATEGY AND PATCHING",
      "entity_type": "MITIGATION",
      "description": "\"Implement a rigorous testing strategy during architecture/design phase to identify dangerous instruction sequences. Patch OS to avoid running dangerous sequences or mitigate damage caused by them.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "ATTACKER (UNDISCLOSED)",
      "entity_type": "ATTACKER",
      "description": "\"An undisclosed attacker who may exploit hardware vulnerabilities to compromise system integrity or confidentiality.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "DATA ACQUISITION AND EXPLOITATION",
      "entity_type": "POSTCONDITION",
      "description": "\"Attackers can acquire sensitive data left on a decommissioned device, potentially leading to exploitation or data leakage.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "LOSS OF DATA INTEGRITY AND AVAILABILITY",
      "entity_type": "TACTIC",
      "description": "\"The tactic is to cause loss of data integrity and system availability through exploiting processor hardware vulnerabilities.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION",
      "entity_type": "VULNERABILITY",
      "description": "\"The product does not ensure the integrity of the configuration state during power save/restore operations, potentially allowing an attacker to alter configurations stored in persistent memory and compromise system security.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "IMPROPERLY PRESERVED INTEGRITY ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where an attacker exploits the lack of integrity verification during power save/restore operations.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "DECOMMISSIONED DEVICE",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entity is the product that has been taken out of service but still retains sensitive data accessible by attackers.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "INSTRUCTION SET ARCHITECTURE BUGS",
      "entity_type": "PRECONDITION",
      "description": "\"Unspecified attackers need to identify and leverage specific combinations of legal and illegal instructions or bugs in the ISA.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "SENSITIVE INFORMATION EXPOSURE THROUGH SIDE CHANNELS",
      "entity_type": "POSTCONDITION",
      "description": "\"An adversary might be able to recover secret keys and data by monitoring hardware operation and correlating it with power, EME, and acoustic measurements.\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "id": "NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES",
      "entity_type": "VULNERABILITY",
      "description": "\"Modern processors share hardware resources across execution contexts, violating architectural isolation and opening covert channels for information leakage between contexts through caches, branch predictors, etc.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "MALICIOUS ACTOR",
      "entity_type": "ATTACKER",
      "description": "\"A malicious actor is an individual or group that aims to reverse engineer integrated circuits (ICs) for the purpose of producing and selling counterfeit versions.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "OBSOLETE ENCODING MECHANISM",
      "entity_type": "SOFTWARE",
      "description": "\"A software mechanism used for encoding access controls that is no longer trusted or secure.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)",
      "entity_type": "VULNERABILITY",
      "description": "\"A bug in AMD CPU's core logic allows a DoS by using a specific x86 instruction sequence to hang the processor, affecting system integrity and availability.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "UART INTERFACE ACCESS DURING BOOT PROCESS",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attacker can exploit this technique by accessing the UART interface during the boot process of S7-1200 CPUs and S7-200 SMART CPUs.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "PARTITIONED CACHES AND BARRIER/FLUSH INSTRUCTIONS",
      "entity_type": "MITIGATION",
      "description": "\"Hardware and software techniques such as partitioned caches and new barrier/flush instructions can mitigate microarchitectural side-channel attacks by preventing unauthorized data leaks.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "POLICY USES OBSOLETE ENCODING PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where the use of an obsolete encoding mechanism leads to vulnerabilities in security tokens and transactions.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-1999-1476)",
      "entity_type": "VULNERABILITY",
      "description": "\"A bug in some Intel Pentium processors allows a DoS via an invalid CMPXCHG8B instruction causing deadlock, impacting the processor's ability to function properly.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"This vulnerability pertains to hardware components where data removal processes do not completely delete all data, leaving sensitive information retrievable due to residual physical characteristics of the media.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "ACCESS CONTROL INCONSISTENCY TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A technique that exploits privilege discrepancies between control and write policies in hardware-enforced access controls.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "PROCESSOR HARDWARE WITH VULNERABLE INSTRUCTIONS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Processors that contain vulnerable instruction sequences or hardware bugs are the targets of attacks leading to unexpected behavior and security breaches.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "MISSING SECURITY IDENTIFIER IN ENTITY TRANSACTIONS ON A SYSTEM-ON-CHIP (SOC) VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A weakness that can exist when source agents in SoC transactions do not consistently include necessary security identifiers, potentially leading to denial-of-service or privilege escalation issues.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "SECURITY TOKEN DECODER REVIEW",
      "entity_type": "MITIGATION",
      "description": "\"Reviewing and testing security token decoders to ensure they are consistent and free of common weaknesses.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "UNSPECIFIED ATTACKER 2",
      "entity_type": "ATTACKER",
      "description": "\"Another unspecified attacker who could exploit vulnerabilities in the way assets are stored or managed.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where hardware structures shared across execution contexts (e.g., caches and branch predictors) violate expected architectural isolation between contexts.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "INCORRECT SECURITY IDENTIFIER DECODING",
      "entity_type": "VULNERABILITY",
      "description": "\"A common weakness where incorrect decoding allows an untrusted agent to gain unauthorized access due to a trusted security identifier.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "COUNTERFEIT PRODUCTION",
      "entity_type": "TACTIC",
      "description": "\"The tactic of producing and selling counterfeit versions of integrated circuits is driven by the goal of exploiting hardware secrets extracted via reverse engineering.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "CONSISTENT POLICY IMPLEMENTATION",
      "entity_type": "TACTIC",
      "description": "\"The tactic of ensuring that hardware-enforced access control policies are consistently applied between agents.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "WRITABLE MEMORY VULNERABILITIES",
      "entity_type": "SOFTWARE",
      "description": "\"Vulnerabilities arise when immutable data such as bootloaders and keys are stored in writable memory, allowing unauthorized modifications.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "MISSING SOURCE IDENTIFIER PRECONDITION VULNERABILITY",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition for this vulnerability is that the source agent does not consistently include necessary Security Identifiers in transactions on a System-On-Chip (SoC), leading to potential DoS or privilege escalation scenarios.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "PRIVILEGE DISCREPANCY INCONSISTENCY",
      "entity_type": "PRECONDITION",
      "description": "\"Inconsistent privilege assignments in policy enforcement can be exploited by attackers to gain unauthorized access.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "STORING ASSETS IN WRITABLE MEMORY PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The pattern involves storing critical security assets like bootloaders or keys in writable memory rather than read-only memory.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "PRIVILEGE ESCALATION THROUGH MISSING SECURITY IDENTIFIER TACTIC",
      "entity_type": "TACTIC",
      "description": "\"A tactic where missing security identifiers in transactions on a SoC can be exploited to escalate privileges or provide unintended access, compromising system confidentiality, integrity, availability, and access control.\"<SEP>\"A tactic where missing security identifiers in transactions on a System-On-Chip can be exploited to escalate privileges or provide unintended access, compromising confidentiality, integrity, availability, and access control.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "ACCESS CONTROL POLICY WEAKNESS",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability arising from inconsistent privilege assignments between control and data agents within hardware-enforced policies.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Technique where an attacker modifies immutable data stored in writable memory to compromise system integrity and trust.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "EXPLOIT OF ACCESS-CONTROL MISCONFIGURATION DURING IMPLEMENTATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An untrusted agent gains unauthorized access by exploiting misconfigured access controls during implementation.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "HARDWARE REMANENCE PHENOMENON PRECONDITION VULNERABILITY",
      "entity_type": "PRECONDITION",
      "description": "\"This precondition involves residual physical characteristics like magnetic media remanence, screen burn-in, and charge residuals that persist after data removal or erasure attempts.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "PHYSICAL TAMPERING DETECTION MECHANISM",
      "entity_type": "MITIGATION",
      "description": "\"Detection mechanisms that can identify when an IC is being tampered with, potentially triggering defensive actions such as erasing information.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO RESOURCES",
      "entity_type": "POSTCONDITION",
      "description": "\"Attackers can exploit inconsistencies in policy privileges to gain unauthorized access to sensitive resources.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "IMMUTABLE CODE AND DATA PROTECTION STRATEGY",
      "entity_type": "MITIGATION",
      "description": "\"Strategy involving programming all immutable code or data into ROM or write-once memory for stronger security guarantees.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where an attacker exploits shared hardware resources to leak information between isolated execution contexts through covert channels.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "GAIN PRIVILEGES THROUGH CONFIGURATION ALTERATION",
      "entity_type": "TACTIC",
      "description": "\"An attacker's tactic of modifying configuration settings to gain unauthorized access or escalate privileges.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "TRUSTED FIRMWARE OR SOFTWARE MODULES",
      "entity_type": "TARGET ENTITY",
      "description": "\"Trusted firmware or software modules that provide access to hardware resources and are subject to policy-enforced access controls.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "COMPROMISED ROOT OF TRUST",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves compromising the root of trust by modifying immutable assets in writable memory, undermining system integrity.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "MISSING PROTECTION MECHANISM FOR ALTERNATE HARDWARE INTERFACE",
      "entity_type": "VULNERABILITY",
      "description": "\"This vulnerability allows attackers to access control-protected assets through alternate paths that lack protection mechanisms.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "TVLA LEAKAGE DETECTION TESTS AND PENETRATION TESTING",
      "entity_type": "MITIGATION",
      "description": "\"Perform leakage detection tests such as the Test Vector Leakage Assessment (TVLA) test requirements for AES and perform full side-channel attacks covering known leakage models against test code.\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "id": "DECAPSULATION AND HIGH-RESOLUTION IMAGING PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"This pattern involves the removal of chip packaging followed by high-resolution imaging techniques to reveal information stored within an integrated circuit.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "ADVERSARIES",
      "entity_type": "ATTACKER",
      "description": "\"Adversaries could bypass the secure-boot process and execute their own untrusted, malicious boot code.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "LACK OF SECURE STORAGE PRACTICES",
      "entity_type": "PRECONDITION",
      "description": "\"Unspecified attackers may exploit a lack of secure storage practices where critical security assets are stored improperly.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability exists when critical security assets like bootloaders or keys are stored insecurely in writable memory, leading to potential compromises.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "SECURE BOOT PROCESS BYPASS",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves adversaries bypassing the secure boot process to execute unauthorized code.\"<SEP>\"The attack pattern involves adversaries bypassing the secure-boot process to execute unauthorized code.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "PROCESSOR AND MEMORY SYSTEM",
      "entity_type": "TARGET ENTITY",
      "description": "\"The processor hardware and memory system are the targets of attacks aimed at exploiting vulnerabilities related to instruction sequences and data immutability.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "MISSING SECURITY IDENTIFIER PRIVILEGE ESCALATION POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"The postcondition is that an attacker can escalate privileges or gain unintended access in a SoC when security identifiers are missing from transactions, affecting system confidentiality, integrity, availability, and access control.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE (CWE-1304)",
      "entity_type": "VULNERABILITY",
      "description": "\"Another key vulnerability focusing on the lack of integrity checks during power operations.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "VOLATILE MEMORY MANIPULATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Adversaries manipulate volatile memory containing bootloader code during the secure-boot process.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "UNKNOWN ATTACKER",
      "entity_type": "ATTACKER",
      "description": "\"An attacker who exploits vulnerabilities to gain unauthorized access to sensitive information.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "SHADOW REGISTERS EXPLOITATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves exploiting unprotected shadow registers within IP cores or SoCs to compromise system security.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "IMPROPER VOLATILE MEMORY PROTECTION",
      "entity_type": "PRECONDITION",
      "description": "\"Insufficient protections for volatile memory allow adversaries to modify boot code and execute unauthorized commands.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "SENSITIVE INFORMATION UNCLEARED BEFORE DEBUG/POWER STATE TRANSITION",
      "entity_type": "VULNERABILITY",
      "description": "\"The product does not clear sensitive information during state transitions, potentially leading to information leakage.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "INTEGRATED CIRCUIT (IC) IMAGING TECHNIQUES",
      "entity_type": "SOFTWARE",
      "description": "\"Techniques such as scanning electron microscopy are used by attackers to capture and analyze images of ICs in order to reverse engineer hardware secrets.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "VOLATILE MEMORY (VM)",
      "entity_type": "TARGET ENTITY",
      "description": "\"Volatile memory is a critical target during the secure-boot process where it contains bootloader code transferred from NVM.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "DEVICE UNLOCK CREDENTIAL SHARING",
      "entity_type": "PRECONDITION",
      "description": "\"Credentials required for unlocking a device are shared among multiple parties, increasing the risk of compromise.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "DEFENSE IN DEPTH IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing defense in depth by protecting assets against all potential interfaces and paths can mitigate this vulnerability.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "UNDISCLOSED ATTACKER",
      "entity_type": "ATTACKER",
      "description": "\"An unspecified attacker who may exploit the improperly preserved integrity of hardware configuration states to compromise system security.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "NON-VOLATILE MEMORY (NVM)",
      "entity_type": "TARGET ENTITY",
      "description": "\"Non-volatile memory stores bootloader code that needs to be transferred to volatile memory for execution during boot.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "RACE CONDITION IN HARDWARE LOGIC",
      "entity_type": "VULNERABILITY",
      "description": "\"A timing error or glitch in hardware logic circuits used for security-sensitive operations can lead to unauthorized access or privilege escalation.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "SECURE BOOT PROCESS EXECUTION",
      "entity_type": "POSTCONDITION",
      "description": "\"Execution of an adversary's code after bypassing the secure-boot process could lead to unauthorized system control and data modification.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "CWE-200: EXPOSURE OF SENSITIVE INFORMATION TO AN UNAUTHORIZED ACTOR",
      "entity_type": "TACTIC",
      "description": "\"An attacker aims to exploit sensitive information exposure to gain unauthorized access or modify system configurations.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "SECURITY IDENTIFIER DECISION-MAKING PROCESS",
      "entity_type": "SOFTWARE",
      "description": "\"A process by which the destination agent uses a security identifier to determine allowed actions on an asset.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "ARCHITECT AND DESIGN REVIEW",
      "entity_type": "MITIGATION",
      "description": "\"Carrying out thorough reviews of the architecture and design phases helps ensure secure configurations are maintained.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "TESTING ACCESS AND PROGRAMMING FLOWS DURING PRE-SILICON AND POST-SILICON PHASES",
      "entity_type": "MITIGATION",
      "description": "\"Access and programming flows must be tested in pre-silicon and post-silicon phases to identify weaknesses.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "UNAUTHORIZED ACCESS CONTROL",
      "entity_type": "MITIGATION",
      "description": "\"To mitigate risks, access controls should be enforced for volatile memory during the boot process.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "CVE-2020-12926",
      "entity_type": "VULNERABILITY",
      "description": "\"Product software does not set a flag as per TPM specifications, preventing failed authorization attempts from being recorded after power loss.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "ACCESS CONTROL LOGIC RACE CONDITION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A specific attack technique involving exploiting race conditions in hardware logic to undermine access control mechanisms.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where sensitive information remains uncleared before power or debug state transitions, potentially exposing data to unauthorized access.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "BOOTLOADER CODE TRANSFER",
      "entity_type": "PRECONDITION",
      "description": "\"The transfer of bootloader code from non-volatile to volatile memory is necessary but can expose vulnerabilities if unprotected.\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "id": "POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Failure to properly manage state transitions can lead to the exposure of sensitive information.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "FINITE STATE MACHINES RACE CONDITIONS EXPLOITATION",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern that involves exploiting race conditions within finite state machines to bypass security protections.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "MALICIOUS SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"Malicious software that could be used by an attacker to misconfigure address ranges, leading to overlaps between protected and unprotected regions.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "CREDENTIAL SHARING AMONG MULTIPLE PARTIES",
      "entity_type": "PRECONDITION",
      "description": "\"Sensitive credentials are shared among multiple parties involved in device manufacturing, increasing risk.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "PRODUCT ADMINISTRATOR",
      "entity_type": "ATTACKER",
      "description": "\"The product administrator may improperly handle sensitive data removal during decommissioning, leaving it vulnerable.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "CONFIDENTIALITY BREACH THROUGH SECRET EXTRACTION",
      "entity_type": "POSTCONDITION",
      "description": "\"A confidentiality breach occurs when malicious actors successfully extract secrets from hardware.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "ADDRESS MAP OVERLAP EXPLOITATION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where an attacker exploits the overlap of protected and unprotected address ranges in the system's on-chip fabric.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "MEMORY DUMP CAPABILITY ACTIVATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Activating debug capabilities through unlocked devices may expose memory dump capabilities to unauthorized users.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "ACTIVE SHIELDING AGAINST REVERSE ENGINEERING",
      "entity_type": "MITIGATION",
      "description": "\"Using active shielding techniques to prevent or detect attempts at reverse engineering integrated circuits.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The specific technique used by an attacker to send transactions that exploit overlapping addresses, thereby bypassing access controls.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "TPM SPECIFICATION COMPLIANCE FAILURE",
      "entity_type": "PRECONDITION",
      "description": "\"Failure to comply with TPM specifications can lead to vulnerabilities in authorization recording.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "SECURE COMMUNICATION BETWEEN OSAT AND CHIPMAKER",
      "entity_type": "MITIGATION",
      "description": "\"Ensuring secure communication channels between the chipmaker and the OSAT vendor helps protect against unauthorized access or data leaks.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "EXTERNAL INTEGRITY CHECK BY TRUSTED AGENT",
      "entity_type": "MITIGATION",
      "description": "\"An external trusted agent performs an integrity check on the configuration state before powering down and upon restore, ensuring security.\"\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "ISOLATION OF PROTECTED AND UNPROTECTED RANGES",
      "entity_type": "MITIGATION",
      "description": "\"A mitigation strategy ensuring protected and unprotected ranges in the address map do not overlap, preventing unauthorized access.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "PROCESSOR HARDWARE VULNERABILITIES",
      "entity_type": "SOFTWARE",
      "description": "\"Processor hardware contains vulnerabilities that can be exploited through specific instruction sequences leading to unexpected behavior such as DoS conditions.\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "id": "INFORMATION LEAKAGE PREVENTION DURING STATE TRANSITIONS",
      "entity_type": "MITIGATION",
      "description": "\"Implementing proper clearing of sensitive information during state transitions can prevent unauthorized access.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS",
      "entity_type": "VULNERABILITY",
      "description": "\"The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to variations in power consumption, electromagnetic emissions (EME), or acoustic emissions.\"<SEP>\"This vulnerability allows sensitive information exposure through patterns in physically observable phenomena such as power consumption, electromagnetic emissions (EME), or acoustic emissions.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b<SEP>chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "id": "INTEGRITY CHECK INSIDE IP",
      "entity_type": "MITIGATION",
      "description": "\"Incorporating an integrity check mechanism inside the IP ensures configuration state integrity during power cycles.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "RESIDUAL CONFIDENTIAL INFORMATION REMOVAL POST-SI TESTS",
      "entity_type": "MITIGATION",
      "description": "\"Post-silicon tests to ensure removal of residual confidential information before parts leave one facility for another.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "BYPASS ACCESS CONTROL",
      "entity_type": "TACTIC",
      "description": "\"The tactic of an attacker attempting to bypass existing protection mechanisms by exploiting overlapping address ranges.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "STATE TRANSITION SENSITIVE INFO LEAKAGE",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where sensitive information is not cleared during state transitions, potentially leading to exposure.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "PHYSICAL SIDE CHANNEL EXPLOITATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves exploiting physical side channels to expose sensitive information due to variations in power consumption, EM emissions, and acoustic emissions.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "MINIMAL TEST INTERFACE ACCESS",
      "entity_type": "PRECONDITION",
      "description": "\"Ensuring that OSAT vendors only have access to the minimal necessary test interfaces and information during pre-production stages.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "ADDRESS RANGE CONFIGURATION MISTAKES",
      "entity_type": "PRECONDITION",
      "description": "\"Incorrect configuration or intentional misconfiguration of address ranges by malicious software can create overlaps as prerequisites for the attack.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "CREDENTIAL SHARING RISK",
      "entity_type": "PRECONDITION",
      "description": "\"The risk associated with sharing unlock credentials among multiple parties involved in device manufacturing processes.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "PERSISTENT STORAGE VULNERABILITY",
      "entity_type": "PRECONDITION",
      "description": "\"A prerequisite vulnerability involving storage mechanisms used for saving states, which can be exploited if integrity checks are not in place.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability arises when there is an overlap between protected and unprotected address ranges in the on-chip fabric, allowing potential unauthorized access.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "TPM SPECIFICATION NON-COMPLIANCE",
      "entity_type": "PRECONDITION",
      "description": "\"Failure to adhere to Trusted Platform Module (TPM) specifications during state transitions can lead to vulnerabilities like CVE-2020-12926.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "HARDWARE-ENFORCED ACCESS CONTROL POLICY",
      "entity_type": "SOFTWARE",
      "description": "\"The hardware-enforced access control policy that improperly accounts for privilege discrepancies between control and write policies.\"<SEP>\"The software responsible for managing hardware-enforced access controls.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "COMPROMISE OF SYSTEM PROTECTIONS",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploitation leads to a breach of system security, bypassing protection mechanisms for overlapping sections of memory or IO space.\"\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "DEBUG CAPABILITY ACTIVATION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Activating debug capabilities of a device that are normally locked in production can expose memory dump functionalities to unauthorized users.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "IMPROPER PRIVILEGE HANDLING IN HARDWARE POLICIES PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern involving improper handling of privileges leading to unauthorized access.\"<SEP>\"An attack pattern where improper handling of privileges leads to unauthorized resource access by untrusted agents.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "IMMUTABLE CODE/DATA PROGRAMMING REQUIREMENT",
      "entity_type": "MITIGATION",
      "description": "\"Requirement to program immutable code or data into ROM/write-once memory as a mitigation against modifiable attestation/measurement data.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "ON-CHIP FABRIC ADDRESS MAP",
      "entity_type": "TARGET ENTITY",
      "description": "\"The address map in the on-chip fabric of a hardware design is the target that could be affected by overlaps between protected and unprotected regions.\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "id": "STATE TRANSITION SECURITY MEASURES",
      "entity_type": "MITIGATION",
      "description": "\"Implementing security measures during state transitions to prevent the leakage of sensitive information.\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "id": "UNINTENTIONAL POLICY INSERTION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique where an untrusted agent is inserted into the policy register due to hardware flaws.\"<SEP>\"The technique whereby an untrusted agent is inserted into the write policy register due to a flaw in the hardware-enforced access control system.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "RUNTIME ACTIVATION OF TEST/DEBUG FEATURES",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Activating test or debug features at runtime can lead to unauthorized access and manipulation of system settings, including sensor data and fabric end-point capabilities.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "UNSPECIFIED ATTACKER GROUP",
      "entity_type": "ATTACKER",
      "description": "\"An unspecified attacker group can exploit vulnerabilities that allow unauthorized access to sensitive information during the manufacturing or assembly process.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "PUBLIC KEY REUSE VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The same public key is used to sign both debug and production code, allowing an attacker to use a debug firmware image on a production system if compromised.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "COMPREHENSIVE TESTING OF ACCESS-CONTROL POLICIES AND FLOWS",
      "entity_type": "MITIGATION",
      "description": "\"Testing during pre-silicon/post-silicon phases ensures proper implementation of access controls.\"<SEP>\"Thorough testing during pre-silicon and post-silicon phases ensures proper implementation of access-control policies.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "IMPLEMENTING ACCESS CONTROLS FOR SENSOR BLOCKS",
      "entity_type": "MITIGATION",
      "description": "\"Access controls should be implemented to ensure that only trusted software is allowed to change threshold limits and sensor parametric data.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "DEBUG MESSAGE LEAKAGES",
      "entity_type": "SOFTWARE",
      "description": "\"Various debug messages contain sensitive information such as memory addresses and cryptographic keys, which can be leaked under certain conditions.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "FIRMWARE DEBUGGING KEYS",
      "entity_type": "PRECONDITION",
      "description": "\"Using the same debugging keys for production opens up vulnerabilities that can be exploited by attackers.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "MODIFICATION OF DEVICE CONFIGURATION TO GAIN UNAUTHORIZED CONTROL",
      "entity_type": "TACTIC",
      "description": "\"Malicious agents aim to modify device configurations for unauthorized control, compromising security.\"<SEP>\"The tactic involves modifying device configurations for unauthorized control.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "IMPROPER FABRIC ATTRIBUTE TRANSLATION MITIGATION",
      "entity_type": "MITIGATION",
      "description": "\"Correcting the translation of security attributes in bridges during design and implementation phases mitigates potential security breaches.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "SHARED MICROARCHITECTURAL RESOURCES VULNERABILITY (CWE-1189)",
      "entity_type": "VULNERABILITY",
      "description": "\"The main vulnerability described, involving shared hardware resources leading to information leakage.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "ASLR BYPASS EXPLOITATION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attacker could exploit vulnerabilities in debug components to bypass Address Space Layout Randomization (ASLR) protections and gain unauthorized access to system resources.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "USE DIFFERENT PUBLIC KEYS FOR PRODUCTION AND DEBUGGING",
      "entity_type": "MITIGATION",
      "description": "\"To mitigate this vulnerability, different public keys should be used for production and debugging phases.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "BLINDING OR MASKING TECHNIQUES, SHIELDING",
      "entity_type": "MITIGATION",
      "description": "\"Apply blinding or masking techniques to cryptographic algorithms and add shielding or tamper-resistant protections to the device to increase measurement difficulty.\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "id": "INSECURE FABRIC BRIDGE",
      "entity_type": "TARGET ENTITY",
      "description": "\"The integration of different fabric protocols in a system-on-chip (SoC) can introduce security vulnerabilities if improperly managed.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "DEBUG MODE EXPLOITATION PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"Exploitation requires the existence of debug modes and their vulnerabilities as prerequisites.\"<SEP>\"The existence of debug modes with override capabilities and additional vulnerabilities that can be exploited by attackers.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves exploiting weaknesses in the protection mechanisms of a chip or system, such as incorrect chaining or granularity of debug components.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "UNAUTHORIZED ACCESS TO SYSTEM CAPABILITIES",
      "entity_type": "POSTCONDITION",
      "description": "\"If an attacker gains access to the debug firmware image using a compromised key, they can run it on a production machine with full capabilities.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "HARDWARE DEVICE (NOT NAMED)",
      "entity_type": "TARGET ENTITY",
      "description": "\"A generic hardware device that is vulnerable due to improper protection of physical side channels.\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "id": "PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where hardware policies improperly handle privilege discrepancies.\"<SEP>\"A vulnerability where hardware-enforced access control policies improperly handle privilege discrepancies, leading to security compromises.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "ACCESS CONTROL MEASURES REVIEW",
      "entity_type": "MITIGATION",
      "description": "\"Review and enhance access control measures to ensure that debug components are properly chained and accessible only at appropriate authorization levels.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "INSECURE CONVERSION OF SECURITY IDENTIFIERS VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"Incorrect conversion mechanism implemented for mapping bus-transaction signals to security identifiers could allow untrusted agents unauthorized access to assets.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "IMPLEMENTING FIRMWARE UPDATE MECHANISMS",
      "entity_type": "MITIGATION",
      "description": "\"Security measures include designing and implementing mechanisms to update firmware, ensuring security updates can be applied.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "UNINTENTIONAL EXPOSURE AND COMPROMISE OF RESOURCES POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the flaw, resources can be unintentionally exposed or compromised, affecting system integrity.\"<SEP>\"Exploitation leads to unintended exposure or compromise of resources, affecting system integrity.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "UNAUTHORIZED SYSTEM ACCESS TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves gaining unauthorized access to the system, possibly through exploitation of vulnerabilities in debug components or other security weaknesses.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "PROTOCOL CONVERSION BRIDGE",
      "entity_type": "PRECONDITION",
      "description": "\"A bridge is needed between different protocols (AHB-to-OCP) and if its implementation is incorrect, it can lead to vulnerabilities.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "EXPLOITATION OF NON-UPDATEABLE FIRMWARE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique involves exploiting vulnerabilities in non-updatable firmware for unauthorized access or control.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "TRUSTED FIRMWARE AND SOFTWARE MODULES WITH ACCESS TO CRITICAL RESOURCES",
      "entity_type": "TARGET ENTITY",
      "description": "\"Critical hardware and software components that are targets for exploitation due to improper access control policies.\"<SEP>\"Critical hardware/software components targeted due to improper access control policies.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "INCORRECT DEBUG COMPONENT CHAINING AND GRANULARITY",
      "entity_type": "PRECONDITION",
      "description": "\"Debugging and testing a chip can lead to incorrect chaining or granularity issues among debug components if not properly managed.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "PROPER PROTOCOL TRANSLATION IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing proper protocol translation at bridges connecting different bus-transaction signal protocols helps mitigate unauthorized access risks.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "SOFTWARE UPDATE MECHANISM FAILURE",
      "entity_type": "SOFTWARE",
      "description": "\"The software or mechanism responsible for updating the firmware is lacking, leading to an inability to patch security vulnerabilities.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "DEBUG HOOKS AND CAPABILITIES IN PRE-PRODUCTION",
      "entity_type": "SOFTWARE",
      "description": "\"Tools/mechanisms allowing override of security checks during pre-production or manufacturing stages.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "OCP PROTOCOL SECURITY BREACH",
      "entity_type": "VULNERABILITY",
      "description": "\"Incorrect translation of MReqInfo and SRespInfo signals in the OCP protocol can result in improper security handling.\"\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "DISABLING HIGH-RESOLUTION PERFORMANCE COUNTERS AND TIMERS",
      "entity_type": "MITIGATION",
      "description": "\"Disabling high-resolution performance counters and timers can help mitigate microarchitectural side-channel attacks by reducing the precision of timing-based leakage.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "VULNERABILITY ID: HWPSIRT-2019-10114 ",
      "entity_type": "VULNERABILITY",
      "description": "\"Improper authorization vulnerability in smartphones allows attackers to switch to third desktop after a series of operations in ADB mode, leading to unauthorized access.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "DEBUG MODE FEATURES",
      "entity_type": "PRECONDITION",
      "description": "\"During development, debug modes provide extensive access to system capabilities that can be exploited if not secured properly.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "ALTERNATE HARDWARE INTERFACE ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"This pattern involves attacking through unprotected alternate hardware interfaces to access control-protected assets.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "PRODUCT RELEASED IN NON-RELEASE CONFIGURATION ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where products are released in insecure configurations intended for testing/debugging purposes.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "SENSITIVE INFORMATION EXPOSURE AND UNAUTHORIZED ACCESS",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploitation of vulnerabilities could result in the exposure of sensitive information and unauthorized access to system resources.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "AHB PROTOCOL IMPLEMENTATION",
      "entity_type": "SOFTWARE",
      "description": "\"A typical bus protocol used in System-On-Chip (SoC) for communication between components, leader agents may implement this protocol.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "GAINING UNAUTHORIZED ACCESS",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves gaining unauthorized access or control over devices due to non-updatable firmware.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "PROTECTION MECHANISM IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing protection mechanisms on all paths to control-protected assets can mitigate the risk of attacks.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "AXPROT SIGNAL MISINTERPRETATION",
      "entity_type": "VULNERABILITY",
      "description": "\"The improper handling of AxPROT signals during protocol conversion may cause security attribute misinterpretations leading to vulnerabilities.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "SYSTEM COMPROMISE AND PRIVILEGE ESCALATION",
      "entity_type": "POSTCONDITION",
      "description": "\"The outcome where an attacker successfully alters hardware configurations to gain unauthorized access or escalate privileges.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "NON-UPGRADED FIRMWARE IN HARDWARE DEVICES",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entity is non-upgraded firmware in hardware devices, which remain vulnerable due to lack of updates.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "CHIPS AND SMARTPHONES WITH DEBUG COMPONENTS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Devices such as chips, smartphones, and other hardware that include debug components are potential targets for exploitation due to improper design or security measures.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "VULNERABILITY DISCOVERY WITHOUT UPDATABILITY",
      "entity_type": "PRECONDITION",
      "description": "\"Devices lack the capability to update firmware, making them vulnerable even after discovery of security flaws.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "SOC INTERNAL REGISTERS ACCESS CONTROL",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entity includes SoC internal registers that are accessible through various interfaces such as UART, SMBUS, PCIe, USB, etc.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "FABRIC BRIDGE SECURITY ISSUE",
      "entity_type": "VULNERABILITY",
      "description": "\"A bridge between different fabric protocols may improperly translate security attributes, potentially leading to access-control bypass and privilege escalation.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "CVE-2021-25476",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability in Digital Rights Management (DRM) capability for mobile platforms that leaks pointer information, aiding in ASLR bypass.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "FIRMWARE UPDATE CAPABILITY ABSENCE",
      "entity_type": "VULNERABILITY",
      "description": "\"The absence of a mechanism to update or patch firmware is a vulnerability that can be exploited by attackers.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "INCORRECT SECURITY TOKENS GENERATION (CWE-1270)",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability exists where Security Tokens generated in Systems-On-a-Chip (SoCs) are incorrect, leading to potential security breaches.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "FABRIC PROTOCOL INTEGRATION",
      "entity_type": "TARGET ENTITY",
      "description": "\"The integration of different fabric protocols in a system-on-chip (SoC) can introduce security vulnerabilities if improperly managed.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "PROTECTION THROUGH IC CAMOUFLAGING",
      "entity_type": "MITIGATION",
      "description": "\"IC camouflaging and obfuscation are recommended security measures to make reverse engineering more difficult and costly for malicious actors.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "CVE-2020-24491",
      "entity_type": "VULNERABILITY",
      "description": "\"Processor generates debug messages containing sensitive memory transaction addresses.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "PERSISTENT SECURITY RISK DUE TO FIRMWARE VULNERABILITIES",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploitation leads to persistent security risks due to unpatched vulnerabilities in non-updatable firmware.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "ACTIVATION WINDOW FOR DEBUG FEATURES",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition is having an activation window that allows the hardware's test or debug features during specific phases.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "CONFIGURE HARDWARE FOR SAFE OPERATION",
      "entity_type": "MITIGATION",
      "description": "\"Configuring hardware to only enter test or debug mode within a window of opportunity such as during boot or configuration stage.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "CVE-2017-18326",
      "entity_type": "VULNERABILITY",
      "description": "\"Modem debug messages include cryptographic keys, posing a risk to system security.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "ENCRYPTION HASH VERIFICATION PROCESS",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attacker uses the encryption hash verification process with a compromised public key to validate the integrity of firmware binaries.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "PRODUCTS WITH NON-UPDATABLE FIRMWARE",
      "entity_type": "TARGET ENTITY",
      "description": "\"Devices or products that lack the ability to update their firmware are targets of such attacks.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "INADEQUATE DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"This vulnerability pertains to hardware components where data removal processes do not completely delete all data, leaving sensitive information retrievable due to residual physical characteristics of the media.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "BYPASSING FIREWALL PROTECTION PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting the lack of protection for mirrored memory regions in on-chip fabric firewalls.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "TAMPER-PROOF PACKAGING IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing tamper-proof packaging is recommended as a security measure against physical attacks such as decapsulation and invasive imaging.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "INCORRECT CHAINING OR GRANULARITY OF DEBUG COMPONENTS",
      "entity_type": "PRECONDITION",
      "description": "\"Improperly chained or granular debug components can lead to vulnerabilities that attackers might exploit.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "BRIDGE FOR PROTOCOL CONVERSION",
      "entity_type": "SOFTWARE",
      "description": "\"A software bridge between different protocols (AHB and OCP) enabling seamless communication across them.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "PRODUCT MANUFACTURER",
      "entity_type": "ATTACKER",
      "description": "\"The manufacturer or developer of products that do not allow users to update their firmware, potentially leaving these products vulnerable.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "ATTACKER WITH PHYSICAL ACCESS",
      "entity_type": "ATTACKER",
      "description": "\"An attacker who has physical access to the device can exploit hardware vulnerabilities during manufacturing.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "SECURE PATCH SUPPORT IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Support for secure patches that can be applied during the next boot or programmed through hardware fuses after device shipping mitigates vulnerabilities in ROM code.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "ENSURING MANUFACTURING COMPLETE STAGE MARKERS ARE UPDATED",
      "entity_type": "MITIGATION",
      "description": "\"Preventing products from being released in insecure configurations by ensuring proper manufacturing process completion.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "UNAUTHORIZED SYSTEM CONFIGURATION MODIFICATION POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploitation leads to unauthorized modifications of system configurations, affecting security and integrity.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "APPROPRIATE POST-SI TESTS",
      "entity_type": "MITIGATION",
      "description": "\"Carrying out appropriate post-manufacturing tests at various authorization levels ensures proper chaining of debug components and restricts access to unauthorized users.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "CVE-2020-9054",
      "entity_type": "VULNERABILITY",
      "description": "\"A critical OS command injection vulnerability in a network-attached storage (NAS) device that is actively exploited by attackers. Some products are end-of-support and cannot be patched, making them susceptible to this attack.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "MANUFACTURING MODE EXPLOIT",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting a vulnerability in the Manufacturing Mode on Intel chipsets to gain unauthorized access.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"This attack technique involves exploiting the vulnerability of inadequate hardware-based data removal processes that leave residual sensitive information recoverable after supposedly secure deletions.\"<SEP>\"This technique involves exploiting vulnerabilities in data erasure processes to retrieve sensitive information that should have been removed.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "DEBUG MODE EXPLOITATION TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique of exploiting debug mode capabilities to gain unauthorized access during pre-production or manufacturing stages.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "SENSITIVE DEBUG INFORMATION EXPOSURE",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploitation leads to the exposure of sensitive information through improperly managed debug components.\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "id": "WEAK KEY GENERATION VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"This refers to a situation where hardware smart locks generate weak keys which can be stolen through BLE sniffing attacks. The device's firmware is non-updatable, leading to continued vulnerability.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "MANUFACTURING MODE PATCHING",
      "entity_type": "MITIGATION",
      "description": "\"Disallowing access to the Manufacturing Mode interface after reporting the vulnerability as a mitigation measure.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "CONFIGURATION STATE VERIFICATION DURING POWER SAVE/RESTORE OPERATIONS",
      "entity_type": "PRECONDITION",
      "description": "\"The system must verify the integrity of configuration states during power save/restore operations to prevent unauthorized alterations that could compromise hardware security.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "INSECURE SECURITY IDENTIFIER MECHANISM",
      "entity_type": "VULNERABILITY",
      "description": "\"The SoC implements a Security Identifier mechanism to differentiate allowed or disallowed actions but the identifiers are not correctly implemented.\"",
      "source_id": "chunk-87fc8cd680673c7b0399cfaa4acf73d6"
    },
    {
      "id": "FIRMWARE UPDATE MECHANISM ABSENCE",
      "entity_type": "PRECONDITION",
      "description": "\"The lack of an update mechanism in devices leads to prerequisites for exploiting vulnerabilities that cannot be patched.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "UNAUTHORIZED ACCESS DURING MANUFACTURING",
      "entity_type": "TACTIC",
      "description": "\"The tactic is to gain unauthorized access to devices during manufacturing for malicious purposes.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "BLINDING/MASKING CRYPTOGRAPHIC ALGORITHM PROTECTION MITIGATION",
      "entity_type": "MITIGATION",
      "description": "\"Applying blinding or masking techniques to cryptographic algorithms during implementation is recommended to mitigate certain types of attacks, such as side-channel attacks. Also includes altering erasure methods and protecting/removing media.\"<SEP>\"Recommended mitigations include applying blinding or masking techniques during the implementation of cryptographic algorithms, altering erasure methods, and protecting/removing media.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "UNINITIALIZED FLIP-FLOPS USED FOR SECURITY-CRITICAL FUNCTIONS (CWE-1271)",
      "entity_type": "PRECONDITION",
      "description": "\"The presence of uninitialized flip-flops used for security-critical functions in devices is a prerequisite that can be exploited during attacks.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "INVASIVE IC LAYER REMOVAL AND IMAGING",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"A technique involving physically removing layers from an integrated circuit to image each layer using a scanning electron microscope.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "DEBUG MESSAGES REVEALING UNNECESSARY INFORMATION",
      "entity_type": "VULNERABILITY",
      "description": "\"Product fails to prevent unnecessary and potentially sensitive system information from being revealed in debug messages, which could help attackers decipher vulnerabilities or understand the system better.\"<SEP>\"The product fails to prevent unnecessary and potentially sensitive system information from being revealed in debug messages, which could help attackers decipher vulnerabilities or understand the system better.\"",
      "source_id": "chunk-87fc8cd680673c7b0399cfaa4acf73d6"
    },
    {
      "id": "EXPLOITATION THROUGH COMMAND INJECTION ATTACK",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attacker uses command injection techniques to exploit the firmware's inability to receive updates and gain unauthorized control over the device.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "IC REVERSE ENGINEERING CAPABILITY",
      "entity_type": "PRECONDITION",
      "description": "\"Malicious actors must have the capability to capture and analyze images of ICs in order to exploit hardware vulnerabilities for secret extraction.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "SOC (SYSTEM-ON-CHIP)",
      "entity_type": "TARGET ENTITY",
      "description": "\"A System-on-Chip (SoC) is a complex integrated circuit that integrates all components of a computer or other electronic system into a single chip. It serves as the target for security vulnerabilities related to Security Identifiers.\"",
      "source_id": "chunk-87fc8cd680673c7b0399cfaa4acf73d6"
    },
    {
      "id": "GAIN UNAUTHORIZED CONTROL OVER DEVICES",
      "entity_type": "TACTIC",
      "description": "\"The tactic of exploiting vulnerabilities in non-updatable firmware to achieve unauthorized access or control over devices.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "SECRET EXTRACTION AND COUNTERFEIT PRODUCTION",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting the vulnerability, malicious actors can extract secrets and produce counterfeit ICs.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "NO SPECIFIC SOFTWARE MENTIONED",
      "entity_type": "SOFTWARE",
      "description": "\"There is no specific malicious software mentioned in this text, but it implies the presence of untrusted software that could manipulate parametric data values and fabric end-point capabilities.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "SECURITY IDENTIFIER MECHANISM IMPLEMENTATION FLAW",
      "entity_type": "PRECONDITION",
      "description": "\"A flaw in how the SoC implements its Security Identifier mechanism is a prerequisite for any attack exploiting this vulnerability.\"",
      "source_id": "chunk-87fc8cd680673c7b0399cfaa4acf73d6"
    },
    {
      "id": "DESIGN REQUIREMENTS IGNORING UPDATES",
      "entity_type": "PRECONDITION",
      "description": "\"During development phases, requirements may not consider the importance of updates over a product's lifetime due to cost constraints or other factors.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "FIRMWARE VULNERABILITY DUE TO NON-UPGRADE",
      "entity_type": "VULNERABILITY",
      "description": "\"The firmware's inability to be upgraded makes it remain vulnerable to reverse engineering attacks that aim to recover secrets from non-updated hardware.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "SOC SECURE BOOT/VERIFIED BOOT IMPLEMENTATION",
      "entity_type": "TARGET ENTITY",
      "description": "\"A System-on-Chip (SoC) implementing secure boot or verified boot is the target of this security risk.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "UNNECESSARY DEBUG INFORMATION DISCLOSURE",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of vulnerabilities related to debug messages, unnecessary and sensitive information may be disclosed, potentially aiding attackers.\"",
      "source_id": "chunk-87fc8cd680673c7b0399cfaa4acf73d6"
    },
    {
      "id": "EXPLOITATION THROUGH WEAK KEY GENERATION ATTACK",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attacker uses weak key generation vulnerabilities in non-updatable firmware to exploit hardware devices like smart locks.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "CHIPMAKER",
      "entity_type": "ATTACKER",
      "description": "\"The chipmaker is an organization that designs chips and outsources manufacturing to OSAT vendors, potentially exposing vulnerabilities.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "HIGH-RESOLUTION X-RAY MICROSCOPY TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique used by malicious actors for capturing detailed images of integrated circuits' internal structures.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "IMPROPER ACCESS CONTROL IN FABRIC BRIDGE ATTACKER",
      "entity_type": "ATTACKER",
      "description": "\"An attacker could exploit improper access control in fabric bridges to gain unauthorized access or perform malicious activities within the SoC.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "PERMANENT SECURITY RISK DUE TO NON-UPDATABLE FIRMWARE",
      "entity_type": "POSTCONDITION",
      "description": "\"Due to the inability of updating firmware, there is a persistent security risk over the lifetime of the device.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "OSAT VENDOR",
      "entity_type": "TARGET ENTITY",
      "description": "\"An Outsourced Semiconductor Assembly and Test (OSAT) vendor responsible for assembling and testing chips designed by others.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "ACCESS CONTROL CHECK IMPLEMENTATION SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"A software solution that ensures proper access control checks are implemented in fabric bridges, preventing unauthorized transactions between IP blocks.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "DEVICES WITH NON-UPDATEABLE FIRMWARE",
      "entity_type": "TARGET ENTITY",
      "description": "\"The devices or products that do not provide any means for their users to update firmware are targets of such attacks.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "MALICIOUS INSIDER AT OSAT FACILITY",
      "entity_type": "ATTACKER",
      "description": "\"A malicious insider working within the OSAT facility who may exploit access to carry out an attack.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "QUALITY DEGRADATION AND STABILITY ISSUES",
      "entity_type": "POSTCONDITION",
      "description": "\"As a result of exploiting improperly preserved hardware state, systems may suffer from quality degradation, instability issues, or reduced performance after restore operations.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "IMPROPER FABRIC BRIDGE ACCESS CONTROL PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The pattern of an attacker exploiting the lack of proper access controls in a fabric bridge to gain improper access or perform malicious activities within the SoC.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "NON-DISCLOSURE AGREEMENTS (NDAS)",
      "entity_type": "MITIGATION",
      "description": "\"Chipmakers require NDAs from OSAT partners as a security measure against information leaks and misuse.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "HIGH-RESOLUTION PERFORMANCE COUNTERS & TIMERS",
      "entity_type": "SOFTWARE",
      "description": "\"Tools that can be disabled to mitigate timing-based attacks on microarchitectural side-channels.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Executing unauthorized transactions through a fabric bridge that lacks proper security measures, potentially leading to data breaches or system compromises.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "LACK OF FIRMWARE UPDATABILITY PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where a product does not provide users with the ability to update or patch its firmware.\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "id": "SECURITY VULNERABILITY IN IT SYSTEM OF OSAT FACILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"A potential weakness within the OSAT facility's IT system that could be exploited for unauthorized access or data breaches.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "CONFIDENTIALITY VIOLATIONS THROUGH COVERT CHANNELS",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploitation of shared microarchitectural resources can lead to confidentiality violations by leaking sensitive information such as cryptographic keys through covert channels.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "PROPER ACCESS CONTROL IN FABRIC BRIDGE MITIGATION",
      "entity_type": "MITIGATION",
      "description": "\"Implementing and enforcing proper access control checks in the fabric bridge to prevent unauthorized transactions between IP blocks.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "BUS TRANSACTION SIGNALS MAPPING",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"Incorrect mapping of bus transaction signals to security identifiers, allowing unauthorized access to system assets.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "PHYSICAL ACCESS AND TECHNICAL SKILLS",
      "entity_type": "PRECONDITION",
      "description": "\"Having physical access to the device and technical skills are prerequisites for exploiting hardware vulnerabilities.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE",
      "entity_type": "PRECONDITION",
      "description": "\"During pre-production stages, debug modes are accessible on chips before thorough security measures are applied.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "BYPASS SECURITY MECHANISM TACTIC",
      "entity_type": "TACTIC",
      "description": "\"An attacker's tactic of bypassing security mechanisms by exploiting improper access controls in a fabric bridge to gain unauthorized access or perform malicious actions within the SoC.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "OCP PROTOCOL IMPLEMENTATION",
      "entity_type": "SOFTWARE",
      "description": "\"An alternative bus protocol to AHB, implemented by follower agents within a SoC system.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) ",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability exists where laptops with Intel chipsets can be exploited when running in Manufacturing Mode.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "ATTACKER ENTITY NOT EXPLICITLY MENTIONED",
      "entity_type": "ATTACKER",
      "description": "\"The text does not explicitly mention a specific attacker entity.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "DESIGN CONSISTENCY REVIEW AND WEAKNESS IDENTIFICATION IN ARCHITECTURE PHASE",
      "entity_type": "PRECONDITION",
      "description": "\"Review of security identifiers for design consistency and common weaknesses is necessary to mitigate potential vulnerabilities.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "LACK OF ACCESS CONTROL CHECKS PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition for an attack is the lack of proper access control checks in the fabric bridge, allowing attackers to exploit this vulnerability.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "INSECURE STATE DUE TO UNINITIALIZED VALUES (CWE-1271)",
      "entity_type": "POSTCONDITION",
      "description": "\"Exploiting vulnerabilities such as uninitialized security settings can result in an insecure state of the device, making it vulnerable to further attacks.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "SOFTWARE NOT EXPLICITLY MENTIONED",
      "entity_type": "SOFTWARE",
      "description": "\"No specific software is mentioned in the provided text that can be categorized as per the given guidelines.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "LOGIC ERRORS DURING DESIGN",
      "entity_type": "PRECONDITION",
      "description": "\"Design flaws that misconfigure debug components, improperly authorizing access to sensitive data.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "INCOMPLETE MANUFACTURING PROCESS PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"A precondition where products are released before completing manufacturing process steps.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)",
      "entity_type": "VULNERABILITY",
      "description": "\"A vulnerability where Advanced High-performance Bus (AHB) bridges do not require authentication for arbitrary read and write access to the BMC's physical address space, leading to potential security breaches.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "ADVERSARY (NOT NAMED)",
      "entity_type": "ATTACKER",
      "description": "\"An adversary could monitor and measure physical phenomena to detect patterns and make inferences, even if it is not possible to extract the information in the digital domain.\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "id": "INTEGRITY CHECKING MECHANISM IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Incorporating integrity checking mechanisms such as cryptographic hashes inside and outside the IP ensures configuration state integrity during power cycles.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "REVIEW AND TESTING OF SECURITY IDENTIFIERS DURING IMPLEMENTATION",
      "entity_type": "MITIGATION",
      "description": "\"Security identifier decoders should be reviewed for design consistency and tested during implementation phases.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "UNAUTHORIZED ACCESS OR MALICIOUS ACTIVITY POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"The postcondition of exploiting improper access control in fabric bridges is unauthorized access or malicious activities within the SoC.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "SCRUBBING CAPABILITY",
      "entity_type": "SOFTWARE",
      "description": "\"A software capability provided by the product to remove sensitive data upon decommissioning, which might be inadequate or missing.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "MISSING PATCH ROM CODE VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The absence of a mechanism to patch code in Read-only-Memory (ROM) can leave systems or SoCs vulnerable to exploitation, reducing maintainability and reliability.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "BUS TRANSACTION SECURITY IDENTIFIERS",
      "entity_type": "TARGET ENTITY",
      "description": "\"Transactions in a SoC with source and destination identities qualify with security identifiers for asset access control decisions.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where insufficient or incomplete data removal from hardware components leaves sensitive information retrievable due to remanence effects, like magnetic media residuals or screen burn-in. The impact involves unauthorized read memory and application data.\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "id": "BRIDGE SECURITY CHECKER SOFTWARE",
      "entity_type": "SOFTWARE",
      "description": "\"A software tool designed to verify the security of transactions across fabric bridges, ensuring no unauthorized activities can occur.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "PRODUCTS IN PRE-PRODUCTION OR MANUFACTURING STATE (INSECURE CONFIGURATIONS)",
      "entity_type": "TARGET ENTITY",
      "description": "\"The target entities include products in pre-production or manufacturing states with insecure configurations.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "UNAUTHORIZED ACCESS VIA FABRIC BRIDGE ATTACK PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern involving exploiting weaknesses in fabric bridge access controls for unauthorized system access.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES",
      "entity_type": "POSTCONDITION",
      "description": "\"Unauthorized exposure of confidential information through misuse or exploitation of accessible debugging and testing functionalities.\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "id": "HPROT SIGNAL MISINTERPRETATION",
      "entity_type": "VULNERABILITY",
      "description": "\"The improper translation of HPROT signals can lead to access control bypass or privilege escalation.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "id": "UNAUTHENTICATED TRANSACTION EXECUTION",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique of sending unverified transactions through a fabric bridge to gain unauthorized access or cause system compromise.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "RESTRICT TEST/DEBUG ACTIVATION",
      "entity_type": "MITIGATION",
      "description": "\"Insert restrictions on when the hardware's test or debug features can be activated to prevent unauthorized access.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability occurs when products are released prematurely with insecure configurations enabled.\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "TRANSACTION AUTHENTICATION IN FABRIC BRIDGE MITIGATION",
      "entity_type": "MITIGATION",
      "description": "\"A mitigation strategy involving the implementation of proper transaction authentication mechanisms within fabric bridges.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "ADVERSARY",
      "entity_type": "ATTACKER",
      "description": "\"An adversary may exploit vulnerabilities such as missing patching mechanisms in ROM code to compromise a system-on-chip (SoC) and reduce its maintainability, reliability, and performance.\"<SEP>\"An adversary modifies attestation or measurement reporting data in registers, potentially compromising system security.\"<SEP>\"An adversary who can take advantage of vulnerabilities in on-chip fabric firewalls and hardware activation of test/debug logic to alter the intended behavior of the system.\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf<SEP>chunk-44164e668381aa7c1f320b2f14a0925f<SEP>chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "LACK OF PROTECTION FOR MIRRORED MEMORY REGIONS",
      "entity_type": "PRECONDITION",
      "description": "\"The precondition is the lack of protection mechanisms applied to mirrored memory regions, allowing attackers to exploit them.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "CRYPTO-HASH VERIFICATION",
      "entity_type": "MITIGATION",
      "description": "\"A method to ensure data integrity by using cryptographic hashes before and after power states are saved/restored.\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "id": "SECRET KEY RECOVERY TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"An attack technique where attackers use decapsulation and high-resolution imaging to recover secret keys, unique device identifiers, and proprietary code from hardware.\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "id": "UNAUTHORIZED ACCESS TACTIC",
      "entity_type": "TACTIC",
      "description": "\"The tactic of gaining unauthorized access through exploiting vulnerabilities in SoC interconnect structures.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "UNAUTHORIZED MEMORY MODIFICATION AND DATA LEAKAGE",
      "entity_type": "POSTCONDITION",
      "description": "\"The postcondition is unauthorized modification of memory and leakage of sensitive data due to exploiting the lack of protection.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "MUTABLE ATTESTATION MEASUREMENT DATA",
      "entity_type": "VULNERABILITY",
      "description": "\"Vulnerability where the contents used for attestation/measurement reporting in registers are modifiable by an adversary, allowing spoofing of measurement results.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "RELEASE IN NON-RELEASE STATE TACTIC (GAINING UNAUTHORIZED ACCESS THROUGH NON-PRODUCTION CONFIGURATIONS)",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves gaining unauthorized access via the release of insecure pre-production versions.\"\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "id": "LACK OF TRANSACTION VERIFICATION PRECONDITION",
      "entity_type": "PRECONDITION",
      "description": "\"A necessary condition for an attack is the lack of proper transaction verification mechanisms within fabric bridges.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "ADVERSARY EXPLOITING TEST/DEBUG FEATURES",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The attack pattern involves exploiting hardware features that allow activation of test or debug logic at runtime.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "LACK OF WRITE PROTECTION FOR PARAMETRIC DATA VALUES",
      "entity_type": "PRECONDITION",
      "description": "\"A precondition that may contribute to this weakness is the lack of a requirement to protect parametric values and sensor settings against untrusted software.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "DATA SCRUBBING FAILURE PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"An attack pattern where a failure in proper data scrubbing leaves decommissioned devices vulnerable to sensitive data acquisition.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "FABRIC BRIDGE AUTHENTICATION BYPASS VULNERABILITY (CVE-2019-6260)",
      "entity_type": "VULNERABILITY",
      "description": "\"The vulnerability allowing unauthorized transactions to bypass authentication checks, leading to potential security breaches in BMC devices.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "IMPLEMENT STRONG PHYSICAL SECURITY MEASURES",
      "entity_type": "MITIGATION",
      "description": "\"Strong physical security measures can prevent the exploitation of physical side channels by securing sensitive information against observable phenomena.\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "id": "TEST OR DEBUG LOGIC ACTIVATION DURING RUNTIME PATTERN",
      "entity_type": "ATTACK PATTERN",
      "description": "\"The pattern involves activating test or debug logic during runtime, which can be exploited to escalate privileges or manipulate system operations.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "INADEQUATE DATA REMOVAL TECHNIQUE",
      "entity_type": "ATTACK TECHNIQUE",
      "description": "\"The technique of failing to adequately remove or overwrite sensitive data during device decommissioning, leading to vulnerabilities.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "UNAUTHORIZED DATA ACCESS POSTCONDITION",
      "entity_type": "POSTCONDITION",
      "description": "\"A post-exploitation result where an attacker gains unauthorized access to data or resources within the SoC.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "SECURITY IDENTIFIER DECODER",
      "entity_type": "SOFTWARE",
      "description": "\"A mechanism that decodes bus transactions to map security identifiers into necessary access-controls/protections.\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "id": "POLICY IMPLEMENTATION AND REVIEW",
      "entity_type": "MITIGATION",
      "description": "\"Implementing strict policies for data removal upon decommissioning and regularly reviewing these policies to ensure compliance.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "AHB BRIDGES IN BMC DEVICE",
      "entity_type": "TARGET ENTITY",
      "description": "\"Specific AHB bridges used in Baseboard Management Controllers (BMC) devices, targeted by attackers due to security weaknesses.\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "id": "ESCALATION OF PRIVILEGES AND INFORMATION DISCLOSURE",
      "entity_type": "TACTIC",
      "description": "\"The tactic involves using attack techniques to escalate privileges or disclose information, potentially leading to DoS conditions.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "CVE-2017-8252 VULNERABILITY",
      "entity_type": "UNKNOWN",
      "description": "\"The postcondition of sensor value manipulation leading to a Denial-of-Service condition is affecting the system due to exploitation of vulnerabilities.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "id": "ERROR INJECTION TECHNIQUE",
      "entity_type": "UNKNOWN",
      "description": "\"Adversaries use error injection as a technique on hardware with active debug/test features.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "TEST AND DEBUG FEATURES IN HARDWARE",
      "entity_type": "UNKNOWN",
      "description": "\"Adversaries use error injection as a technique on hardware with active debug/test features.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "PUBLIC KEY CRYPTOGRAPHY USAGE",
      "entity_type": "UNKNOWN",
      "description": "\"The attacker exploits public key cryptography usage to verify firmware binaries with compromised keys.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "INCORRECT SECURITY IDENTIFIER MAPPING VULNERABILITY",
      "entity_type": "UNKNOWN",
      "description": "\"Improper mapping of bus transaction signals exploits the vulnerability by allowing unauthorized access.\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "id": "POLICY PRIVILEGES ARE NOT ASSIGNED CONSISTENTLY BETWEEN CONTROL AND DATA AGENTS",
      "entity_type": "UNKNOWN",
      "description": "\"This technique exploits inconsistencies in policy privileges, directly implementing this vulnerability.\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "id": "FABRIC FIREWALL VULNERABILITY",
      "entity_type": "UNKNOWN",
      "description": "\"Unauthorized memory modification and data leakage are consequences of exploiting the lack of protection in mirrored regions.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "TARGET ENTITY",
      "entity_type": "UNKNOWN",
      "description": "\"Security Token generation issues impact the overall security of target entities like Intel chipsets and SIMATIC devices.\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "id": "EXTERNAL DEBUGGER",
      "entity_type": "UNKNOWN",
      "description": "\"An adversary uses an external debugger to exploit the lack of protection in the firewall.\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "id": "CVE-1314 AND CVE-2017-8252 VULNERABILITIES",
      "entity_type": "UNKNOWN",
      "description": "\"The lack of write protection is a precondition that contributes to the exploitation of vulnerabilities affecting parametric data values and fabric end-point capabilities.\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    }
  ],
  "edges": [
    {
      "source": "HARDWARE DESIGN REVIEW FOR ZEROIZATION MITIGATION",
      "target": "UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE",
      "weight": 8.0,
      "description": "\"Reviewing hardware design mitigates unauthorized access to sensitive information stored in registers.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "CLEARING LOCK BITS AND EXPLOITING RACE CONDITIONS ",
      "target": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "weight": 6.0,
      "description": "\"Adversaries clear lock bits or exploit race conditions as prerequisites for exploiting hardware lock bit vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "SECURITY TESTING AND COMPLIANCE REVIEW MITIGATION",
      "target": "MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE",
      "weight": 8.0,
      "description": "\"Compliance reviews help mitigate risks associated with techniques that modify system configurations without proper authorization.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "SECURITY-SENSITIVE SETTINGS INITIALIZATION",
      "target": "SYSTEM CONFIGURATION CHANGES VIA FIRMWARE",
      "weight": 12.0,
      "description": "\"Firmware updates can impact security-sensitive settings, necessitating proper initialization during design review.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "SECURITY-SENSITIVE SETTINGS INITIALIZATION",
      "target": "LARGE ADDRESS REGION VULNERABILITY",
      "weight": 14.0,
      "description": "\"Ensuring proper initialization can help reduce risks associated with large address regions not being sufficiently granular.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "TRUSTED FIRMWARE/BOOTLOADER",
      "target": "SYSTEM CONFIGURATION INITIALIZATION PHASE",
      "weight": 6.0,
      "description": "\"Firmware and bootloaders play a crucial role in initializing secure system configurations during hardware reset.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "MEMORY MANAGEMENT FAILURE",
      "target": "CWE-226:INCORRECT DEFAULT PERMISSIONS",
      "weight": 7.0,
      "description": "\"Improperly clearing memory and file permission misconfiguration can both lead to sensitive data exposure.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "UNAUTHORIZED ACTORS",
      "target": "CLEARTEXT TRANSMISSION EXPLOITATION",
      "weight": 18.0,
      "description": "\"Unauthorized actors use the technique of exploiting cleartext transmissions to read sensitive information.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "BYPASSING SECURITY LOCK BITS ATTACK PATTERN",
      "target": "MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE",
      "weight": 9.0,
      "description": "\"This technique is part of the attack pattern focused on bypassing security lock bit protections.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "ADVERSARY (ATTACKER)",
      "target": "TRUSTED FIRMWARE OR SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)",
      "weight": 9.0,
      "description": "\"The adversary may exploit trusted firmware/software modules to clear or bypass lock bits.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "ADVERSARY (ATTACKER)",
      "target": "SOFTWARE EXPLOITING WEAKNESSES IN LOCK BITS ",
      "weight": 9.0,
      "description": "\"The adversary uses software to exploit weaknesses in the lock bit mechanism of protected systems.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "CWE-226:INCORRECT DEFAULT PERMISSIONS",
      "target": "FILE PERMISSION MANAGEMENT FAILURE",
      "weight": 7.0,
      "description": "\"Mismanagement of file permissions can lead to incorrect default settings, affecting security.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "MONITORING TOOLS (E.G., TRUSS, STRACE)",
      "target": "SNIFFING NETWORK TRAFFIC",
      "weight": 16.0,
      "description": "\"Monitoring tools can detect and analyze sniffing activities on network traffic.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "ACCESSING SENSITIVE INFORMATION VIA REGISTER BYPASS TACTIC",
      "target": "UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE",
      "weight": 7.0,
      "description": "\"The tactic of accessing sensitive information is accomplished through the technique of bypassing zeroization procedures.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "UNAUTHORIZED DATA ACCESS THROUGH DEBUG INTERFACE EXPLOITATION",
      "target": "UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION",
      "weight": 9.0,
      "description": "\"The unauthorized data access attack pattern involves using the technique of exploiting improper JTAG interface authorization.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "UNAUTHORIZED DATA ACCESS THROUGH DEBUG INTERFACE EXPLOITATION",
      "target": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "weight": 7.0,
      "description": "\"The unauthorized data access through debug interfaces exploits vulnerabilities present during the execution of ROM code.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "SNIFFING NETWORK TRAFFIC",
      "target": "CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426",
      "weight": 14.0,
      "description": "\"Sniffing network traffic exploits vulnerabilities in file permissions and other insecure settings.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "SNIFFING NETWORK TRAFFIC",
      "target": "CLEARTEXT TRANSMISSION EXPLOITATION",
      "weight": 18.0,
      "description": "\"Cleartext transmission exploitation is a specific form of sniffing network traffic that targets unencrypted data.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "CLEARING SENSITIVE INFORMATION FROM REGISTERS SOFTWARE TOOL",
      "target": "IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACKERS",
      "weight": 9.0,
      "description": "\"Attackers use a software tool to clear sensitive information stored in hardware registers improperly.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "SYSTEM CONFIGURATION INITIALIZATION PHASE",
      "target": "LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 5.0,
      "description": "\"During system configuration initialization, if design flaws exist, they can lead to lock bit vulnerabilities post-reset.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "CLEARTEXT TRANSMISSION EXPLOITATION",
      "target": "USE ENCRYPTION FOR DATA TRANSMISSION",
      "weight": 24.0,
      "description": "\"Encryption mitigates the risk of cleartext transmission exploitation by securing data in transit.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "CLEARTEXT TRANSMISSION EXPLOITATION",
      "target": "MAINTAIN CONFIDENTIALITY AND INTEGRITY",
      "weight": 14.0,
      "description": "\"The tactic of maintaining confidentiality and integrity is accomplished through preventing cleartext transmission exploitation.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "CLEARTEXT TRANSMISSION EXPLOITATION",
      "target": "USE LEAST PRIVILEGE PRINCIPLE",
      "weight": 8.0,
      "description": "\"The mitigation of following the principle of least privilege helps prevent unauthorized access.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "CWE ID 284: IMPROPER LOCKING AFTER POWER TRANSITION",
      "target": "PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 9.0,
      "description": "\"This vulnerability affects the ability to maintain lock bit protection across power state transitions, impacting protected registers.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "IMPROPER ZEROIZATION VULNERABILITY",
      "target": "SENSITIVE INFORMATION IN HARDWARE REGISTERS TARGET ENTITY",
      "weight": 9.0,
      "description": "\"The target hardware registers have the vulnerability of improper zeroization which can lead to unauthorized access.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "IMPROPER ZEROIZATION VULNERABILITY",
      "target": "UNAUTHORIZED ACCESS AND DATA DISCLOSURE POSTCONDITION",
      "weight": 8.0,
      "description": "\"Unintentional disclosure of sensitive information from improperly zeroized registers is a result of exploiting the vulnerability.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "IMPROPER ZEROIZATION VULNERABILITY",
      "target": "DETECTION OF PHYSICAL ATTACKS PRECONDITION",
      "weight": 6.0,
      "description": "\"Detecting physical attacks or changes in operating mode are prerequisites for exploiting improper zeroization vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "IMPROPER ZEROIZATION VULNERABILITY",
      "target": "UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE",
      "weight": 7.0,
      "description": "\"The attack technique exploits the vulnerability of not clearing sensitive information from hardware registers.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "SENSITIVE INFORMATION EXPOSURE ",
      "target": "REMOTE ATTACKER ",
      "weight": 7.0,
      "description": "\"The remote attacker's goal is to expose sensitive information through various attack techniques and vulnerabilities.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "target": "UNAUTHORIZED MODIFICATION OF SYSTEM CONFIGURATION ",
      "weight": 8.0,
      "description": "\"Unauthorized modification is a postcondition resulting from exploiting vulnerabilities in the lock bit mechanism.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "target": "PROTECTED REGISTERS/ADDRESS REGIONS ",
      "weight": 9.0,
      "description": "\"Registers and address regions intended to be protected can become vulnerable if the lock bit mechanism is compromised.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "target": "RESETTING LOCK BIT AFTER POWER RESET ",
      "weight": 7.0,
      "description": "\"This technique exploits the vulnerability in the hardware's security lock bit protection mechanisms by resetting it after power reset.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "target": "POWER STATE TRANSITIONS TESTING ",
      "weight": 8.0,
      "description": "\"Testing across power state transitions is crucial for mitigating vulnerabilities in the lock bit mechanism.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "target": "BYPASSING SECURITY LOCK BIT PATTERN ",
      "weight": 7.0,
      "description": "\"This attack pattern targets the vulnerability present in hardware's security lock bit protection mechanisms.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "VULNERABILITY IN HARDWARE LOCK BIT MECHANISM ",
      "target": "PROTECTED HARDWARE SYSTEMS (E.G., SERVERS, IPS)",
      "weight": 9.0,
      "description": "\"The vulnerability exists in the hardware systems that use lock bits to protect their configurations from unauthorized changes.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "MAINTAIN CONFIDENTIALITY AND INTEGRITY",
      "target": "USE LEAST PRIVILEGE PRINCIPLE",
      "weight": 14.0,
      "description": "\"Using least privilege is a tactic to maintain confidentiality and integrity by limiting access rights.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "BROWSER FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2005-0918) ",
      "target": "FILE EXISTENCE DETERMINATION THROUGH BROWSER SCRIPTING (CVE-2005-0918) ",
      "weight": 8.0,
      "description": "\"The vulnerability in browsers enables file existence determination through scripting.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "OWASP TOP TEN 2007 A8 INSECURE CRYPTOGRAPHIC STORAGE",
      "target": "INSECURE CRYPTOGRAPHIC STORAGE",
      "weight": 5.0,
      "description": "\"This mitigation addresses the attack technique of storing sensitive data without proper encryption.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "source": "CLEARING RESOURCES BEFORE REUSE ",
      "target": "SENSITIVE INFORMATION DETERMINATION ",
      "weight": 8.0,
      "description": "\"Implementing clearing resources before reuse mitigates the tactic of sensitive information determination by attackers.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "UNAUTHORIZED ACCESS TO CONFIGURATION INFORMATION TACTIC",
      "target": "MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE",
      "weight": 7.0,
      "description": "\"The tactic of accessing unauthorized configuration information is accomplished through modifying system configurations via attack techniques.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "LACK OF ENCRYPTION OR INSECURE PERMISSIONS",
      "target": "CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426",
      "weight": 12.0,
      "description": "\"Lack of encryption or insecure permissions are prerequisites for exploiting vulnerabilities in file systems.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "PRODUCT RESOURCE HANDLING ISSUES ",
      "target": "BULLETIN BOARD USER EXISTENCE ERROR RESPONSE VULNERABILITY (CVE-2004-0294) ",
      "weight": 9.0,
      "description": "\"The bulletin board user existence vulnerability is part of broader issues in product resource handling.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "PRODUCT RESOURCE HANDLING ISSUES ",
      "target": "FTP SERVER USERNAME ENUMERATION VULNERABILITY (CVE-2004-1428) ",
      "weight": 9.0,
      "description": "\"This FTP server username enumeration issue exists within the context of broader product resource management issues.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "PRODUCT RESOURCE HANDLING ISSUES ",
      "target": "VIRTUAL MACHINE FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2000-1117) ",
      "weight": 8.0,
      "description": "\"The virtual machine vulnerability is part of larger challenges in handling resources securely within products.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "HDL CODE (HARDWARE DESCRIPTION LANGUAGE)",
      "target": "PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 9.0,
      "description": "\"The HDL code defines the hardware configurations and settings for protected registers and address regions.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426",
      "target": "COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)",
      "weight": 18.0,
      "description": "\"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426",
      "target": "INFORMATION LOSS AND UNAUTHORIZED ACCESS",
      "weight": 16.0,
      "description": "\"Unauthorized access and information loss are postconditions resulting from exploiting these vulnerabilities.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "FILE EXISTENCE INFOLEAK THROUGH VIRTUAL MACHINE (CVE-2000-1117) ",
      "target": "VIRTUAL MACHINE FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2000-1117) ",
      "weight": 8.0,
      "description": "\"The virtual machine vulnerability allows for infoleaks through file existence determination.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES ",
      "target": "IMPLEMENTING SECURITY LOCK BIT REVIEW PROCESS ",
      "weight": 8.0,
      "description": "\"Mitigation processes aim to prevent unauthorized modification techniques such as exploiting debug modes.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES ",
      "target": "BYPASSING SECURITY LOCK BIT PATTERN ",
      "weight": 9.0,
      "description": "\"The technique of modifying system configurations through debug modes is part of the attack pattern for bypassing security locks.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES ",
      "target": "MODIFICATION OF SYSTEM CONFIGURATION FOR UNAUTHORIZED ACCESS ",
      "weight": 7.0,
      "description": "\"The tactic to modify system configurations is accomplished through the attack technique involving debug mode exploitation.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "BRUTE FORCE PASSWORD GUESSING ATTACK ",
      "target": "INFOLEAK THROUGH ERROR RESPONSES ",
      "weight": 9.0,
      "description": "\"The brute force password guessing technique is part of the infoleak through error responses attack pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "BRUTE FORCE PASSWORD GUESSING ATTACK ",
      "target": "SENSITIVE INFORMATION DETERMINATION ",
      "weight": 7.0,
      "description": "\"The tactic of determining sensitive info is accomplished through brute force password guessing attacks.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "SSL TIMING ATTACK VULNERABILITY (CVE-2003-0078) ",
      "target": "PRODUCT SSL IMPLEMENTATION VULNERABILITY (CVE-2003-0078) ",
      "weight": 9.0,
      "description": "\"The vulnerability in the SSL implementation is a specific instance of broader timing attack issues.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)",
      "target": "WORLD-WRITABLE EXECUTABLES (CVE-2005-1941)",
      "weight": 18.0,
      "description": "\"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)",
      "target": "WORLD-WRITABLE LOG FILES (CVE-2001-1550)",
      "weight": 18.0,
      "description": "\"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)",
      "target": "INSECURE PERMISSIONS FOR SHARED SECRET KEY FILES (CVE-2001-0497)",
      "weight": 18.0,
      "description": "\"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-e75a1595db4670470ac4e28b2363c830"
    },
    {
      "source": "GRANULARITY ISSUE IN ADDRESS REGION PROTECTION",
      "target": "TRUSTED FIRMWARE OR BOOTLOADER",
      "weight": 5.0,
      "description": "\"The conflict between functional requirements and security needs impacts the ability of trusted firmware to set configurations securely during boot process.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "source": "GRANULARITY ISSUE IN ADDRESS REGION PROTECTION",
      "target": "IMPROPER RESTRICTION OF WRITE-ONCE BIT FIELDS VULNERABILITY (CVE)",
      "weight": 5.0,
      "description": "\"Design flaws leading to insufficient granularity can result in vulnerabilities where write-once bit fields are improperly restricted.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "source": "IMPROPER PREVENTION OF LOCK BIT MODIFICATION SOFTWARE MODULE",
      "target": "ATTACKER",
      "weight": 7.0,
      "description": "\"Attackers can exploit software modules that improperly prevent lock bits from being modified to unlock system configurations.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "IMPROPER PREVENTION OF LOCK BIT MODIFICATION SOFTWARE MODULE",
      "target": "LOCK BIT MODIFICATION ATTACK TECHNIQUE",
      "weight": 6.0,
      "description": "\"The improper prevention module allows the execution of the attack technique by failing to enforce restrictions on modifying lock bits.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY",
      "target": "LACK OF AUTHENTICATION AND AUTHORIZATION FOR DEBUG PINS",
      "weight": 6.0,
      "description": "\"The lack of proper authentication mechanisms is a prerequisite for exploiting vulnerabilities related to missing unique identifiers.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY",
      "target": "PROPER AUTHENTICATION AND AUTHORIZATION MECHANISMS FOR DEBUG INTERFACES",
      "weight": 8.0,
      "description": "\"Implementing proper authentication and authorization can mitigate the vulnerability caused by missing unique identifiers.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY",
      "target": "UNAUTHORIZED ACCESS AND DATA MODIFICATION THROUGH DEBUG INTERFACE EXPLOITATION",
      "weight": 8.0,
      "description": "\"Exploiting the vulnerability leads to unauthorized access and data modification affecting system integrity.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "REVIEWING DESIGN CONSISTENCY ",
      "target": "PROTECTED REGISTERS/ADDRESS REGIONS ",
      "weight": 6.0,
      "description": "\"Ensuring design consistency prevents weaknesses that could compromise the protection of registers and address regions.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "CWE-573 MISSING CRYPTOGRAPHIC STEP",
      "target": "PLOVER MISSING REQUIRED CRYPTOGRAPHIC STEP ENTRY",
      "weight": 6.0,
      "description": "\"The PLOVER entry describes the CWE-573 issue in the context of missing required cryptographic steps.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "source": "CWE-573 MISSING CRYPTOGRAPHIC STEP",
      "target": "INSECURE CRYPTOGRAPHIC STORAGE",
      "weight": 4.0,
      "description": "\"Missing a step in cryptographic algorithms can lead to insecure storage practices.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "source": "PORT FILTERING MECHANISM VULNERABILITY (CVE-2002-0514) ",
      "target": "PRODUCT PORT FILTERING INFORMATION LEAKAGE VULNERABILITY (CVE-2002-0514) ",
      "weight": 9.0,
      "description": "\"The port filtering mechanism vulnerability is a specific instance of broader information leakage issues.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "CHIP RESET CLEARING CRITICAL READ/WRITE PERMISSIONS FOR RSA FUNCTION",
      "target": "LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 9.0,
      "description": "\"This specific vulnerability affects the integrity of system configurations after a chip reset, allowing unauthorized modifications.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "INSECURE COMMUNICATIONS",
      "target": "SECURE CODING PRACTICES (CERT ORACLE SECURE CODING STANDARD)",
      "weight": 6.0,
      "description": "\"Insecure communications are mitigated by adhering to secure coding practices as defined by the CERT standard.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "source": "PRODUCT DEVELOPERS",
      "target": "DIRECT MEMORY ACCESS (DMA) CAPABLE DEVICE",
      "weight": 14.0,
      "description": "\"Developers create products where DMA capable devices are improperly enabled during boot phases, leading to potential security vulnerabilities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "INCONSISTENT ERROR MESSAGE HANDLING ",
      "target": "DIFFERENT ERROR MESSAGES GENERATION ",
      "weight": 6.0,
      "description": "\"Understanding how error messages are handled helps attackers exploit inconsistencies in responses.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "UNINTENDED PROXY FUNCTIONALITY ('CONFUSED DEPUTY')",
      "target": "ATTACKER",
      "weight": 9.0,
      "description": "\"An attacker uses the technique of unintended proxy functionality to bypass security measures.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "UNINTENDED PROXY FUNCTIONALITY ('CONFUSED DEPUTY')",
      "target": "ACCESS CONTROL BYPASS",
      "weight": 7.0,
      "description": "\"An attacker bypasses access controls using the technique of unintended proxy functionality.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "INTERNAL REGISTERS AND TEST MODES ACCESS CONTROL MECHANISM",
      "target": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "weight": 9.0,
      "description": "\"The vulnerability exists within the access control mechanisms of internal registers and test modes during ROM code execution.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACK PATTERN",
      "target": "UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE",
      "weight": 9.0,
      "description": "\"This technique is part of the improper zeroization attack pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "MUTUAL AUTHENTICATION MECHANISM ENFORCEMENT",
      "target": "INSUFFICIENT AUTHENTICATION MECHANISMS",
      "weight": 8.0,
      "description": "\"Enforcing mutual authentication can mitigate insufficient authentication mechanisms, reducing the risk of FTP bounce attacks.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "MUTUAL AUTHENTICATION MECHANISM ENFORCEMENT",
      "target": "PRESERVATION OF INITIATOR IDENTITY",
      "weight": 8.0,
      "description": "\"Enforcing mutual authentication can help in preserving the identity of transaction initiators.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "INFORMATION DISCLOSURE TACTIC",
      "target": "TIMING AND CONTROL FLOW DISCREPANCY",
      "weight": 7.0,
      "description": "\"The tactic of information disclosure is accomplished through observing timing and control flow discrepancies.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "PRESERVATION OF INITIATOR IDENTITY",
      "target": "DATA FLOW ANALYSIS AND CONTROL FLOW ANALYSIS",
      "weight": 8.0,
      "description": "\"Analyzing data and control flow helps in preserving the identity of transaction initiators.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "SECURE ERROR HANDLING IMPLEMENTATION",
      "target": "ERROR HANDLING MALPRACTICE SOFTWARE",
      "weight": 7.0,
      "description": "\"Implementing secure error handling mitigates the risks associated with improper error handling practices.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "ACCESS CONTROL BYPASS",
      "target": "SHADOW REGISTERS EXPLOITATION",
      "weight": 7.0,
      "description": "\"The tactic of bypassing access control is accomplished through the attack technique of shadow register exploitation.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "EXPLOITER",
      "target": "ROM CODE EXECUTION MANAGEMENT SOFTWARE MODULE",
      "weight": 9.0,
      "description": "\"The attacker exploits vulnerabilities in the ROM code execution management software module to gain unauthorized access.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "SIDE CHANNEL ATTACK PATTERN",
      "target": "TIMING AND CONTROL FLOW DISCREPANCY",
      "weight": 9.0,
      "description": "\"The side channel attack pattern involves observing timing and control flow discrepancies as part of the attack.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "PROTECTED REGISTERS/ADDRESS REGIONS ",
      "target": "CWE-362 (RACE CONDITION)",
      "weight": 8.0,
      "description": "\"A race condition vulnerability can affect protected registers and address regions, leading to potential unauthorized modifications.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-2ccff7f000ca8ceb65b49c7c3183348d"
    },
    {
      "source": "SECURITY LOCK BIT BYPASS VULNERABILITY",
      "target": "HARDWARE SYSTEM CONFIGURATIONS TARGET ENTITY",
      "weight": 9.0,
      "description": "\"The hardware's system configurations have the vulnerability that allows bypassing security lock bits, leading to unauthorized modifications.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "SECURITY LOCK BIT BYPASS VULNERABILITY",
      "target": "SYSTEM CONFIGURATION MODIFICATION AND ACCESS POSTCONDITION",
      "weight": 8.0,
      "description": "\"Unauthorized access and modification of system configurations are postconditions resulting from exploiting security lock bit vulnerabilities.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "SECURITY LOCK BIT BYPASS VULNERABILITY",
      "target": "MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE",
      "weight": 7.0,
      "description": "\"The technique exploits vulnerabilities in hardware's protection mechanisms such as security lock bits.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "SECURITY LOCK BIT BYPASS VULNERABILITY",
      "target": "LACK OF SECURITY LOCK BIT ENFORCEMENT PRECONDITION",
      "weight": 6.0,
      "description": "\"Design flaws or lack of strict enforcement mechanisms are prerequisites for exploiting the security lock bit vulnerability.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-80f8e2a782d3784f549ab8a8418f64bd"
    },
    {
      "source": "OBSERVABLE DISCREPANCY ATTACKERS",
      "target": "ERROR HANDLING MALPRACTICE SOFTWARE",
      "weight": 8.0,
      "description": "\"Attackers use error handling malpractices to gain unauthorized access and exploit observable discrepancies.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "UNINTENDED PROXY BEHAVIOR IN SOFTWARE APPLICATIONS",
      "target": "SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY",
      "weight": 6.0,
      "description": "\"The precondition for this attack is that software applications have unintended proxy behavior.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "IMPROPER ACCESS CONTROL OF ON-CHIP DEBUG AND TEST INTERFACE SOFTWARE MODULE",
      "target": "ATTACKER",
      "weight": 9.0,
      "description": "\"An attacker uses the software module's lack of proper access control to carry out attacks on SoCs.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "IMPROPER ACCESS CONTROL OF ON-CHIP DEBUG AND TEST INTERFACE SOFTWARE MODULE",
      "target": "UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION",
      "weight": 8.0,
      "description": "\"The improper access control software module implements the attack technique of unauthorized JTAG interface exploitation.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "WRITE-ONCE REGISTER MODIFICATION",
      "target": "RACE CONDITION EXPLOITATION PATTERN",
      "weight": 6.0,
      "description": "\"The attack pattern involves exploiting the technique of modifying write-once registers to bypass security controls.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "source": "ADVERSARY EXPLOITING RESERVED BITS",
      "target": "RESERVED BIT UTILIZATION",
      "weight": 6.0,
      "description": "\"An adversary exploits the fact that designers use reserved bits for debugging or future capabilities in production hardware.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "source": "SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY",
      "target": "SOFTWARE APPLICATION ACTING AS PROXY FOR TRANSACTIONS BETWEEN COMPONENTS",
      "weight": 9.0,
      "description": "\"Such applications are at risk of acting as an unintended proxy, leading to security vulnerabilities.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY",
      "target": "UNAUTHORIZED ACCESS AND BYPASS OF SECURITY MEASURES",
      "weight": 8.0,
      "description": "\"Exploiting the vulnerability leads to unauthorized access and bypassing of security measures.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "PROPER AUTHENTICATION AND AUTHORIZATION MECHANISMS FOR DEBUG INTERFACES",
      "target": "UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION",
      "weight": 8.0,
      "description": "\"Implementing proper authentication mechanisms mitigates the unauthorized access through JTAG exploitation.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) ",
      "target": "INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE",
      "weight": 6.0,
      "description": "\"The attack technique exploits the improper isolation vulnerability to enable DMA devices early during boot phases, bypassing security controls.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) ",
      "target": "IMPROPER SECURITY CONFIGURATION AND EARLY BOOT PHASE ENABLEMENT",
      "weight": 5.0,
      "description": "\"Enabling DMA devices too early in the boot phase without proper security configurations sets up a precondition for exploiting shared resource isolation vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) ",
      "target": "SYSTEM-ON-A-CHIP (SOC)",
      "weight": 9.0,
      "description": "\"The vulnerability exists within System-on-Chip architecture, particularly in the improper isolation of shared resources between trusted and untrusted agents.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) ",
      "target": "DATA EXTRACTION AND PRIVILEGE ESCALATION THROUGH EARLY BOOT PHASE ATTACKS",
      "weight": 8.0,
      "description": "\"Early boot phase DMA attacks can result in data extraction or privilege escalation due to improperly isolated shared resources.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "WRITE-ONCE REGISTER VULNERABILITY",
      "target": "UNTRUSTED SOFTWARE COMPONENT (MODULE B)",
      "weight": 7.0,
      "description": "\"An untrusted software component can exploit the vulnerability of a race condition in hardware designs.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-2383be72a89b6aa12cccddc9b5c9b0d8"
    },
    {
      "source": "EXPLOITATION THROUGH DEBUG/TEST INTERFACES WITHOUT PROPER AUTHORIZATION",
      "target": "UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION",
      "weight": 9.0,
      "description": "\"Unauthorized access to JTAG interfaces aligns with exploiting improper debug/test interface authorization.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "EXPLOITATION THROUGH DEBUG/TEST INTERFACES WITHOUT PROPER AUTHORIZATION",
      "target": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "weight": 7.0,
      "description": "\"This attack pattern exploits the vulnerability present during ROM code execution where JTAG is not disabled.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "TIMED RESPONSES FOR USERNAME EXISTENCE ",
      "target": "FTP SERVER USERNAME ENUMERATION VULNERABILITY (CVE-2004-1428) ",
      "weight": 7.0,
      "description": "\"Attackers exploit FTP server vulnerabilities to determine valid usernames based on response times.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "FTP BOUNCE ATTACK PATTERN",
      "target": "ATTACKER",
      "weight": 9.0,
      "description": "\"An attacker uses the FTP bounce attack pattern to exploit vulnerabilities and bypass security measures.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "FTP BOUNCE ATTACK PATTERN",
      "target": "WEB SERVER WITH PROXY FUNCTIONALITY (EXAMPLE)",
      "weight": 7.0,
      "description": "\"The web server with proxy functionality allows an attacker to use the FTP bounce attack pattern to exploit vulnerabilities in other systems.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "INCONSISTENT ERROR RESPONSES AND TIMING VARIATIONS",
      "target": "OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)",
      "weight": 6.0,
      "description": "\"Observing inconsistent error responses and timing variations are prerequisites for exploiting the observable discrepancy vulnerability.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC ATTACK PATTERN",
      "target": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY",
      "weight": 6.0,
      "description": "\"The attack pattern exploits the vulnerability by failing to properly isolate shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC).\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC ATTACK PATTERN",
      "target": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2020-8698) ",
      "weight": 6.0,
      "description": "\"The attack pattern exploits the vulnerability by failing to properly isolate shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC).\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "VERSION CONTROL SYSTEM ALTERNATE HISTORY INFOLEAK VULNERABILITY (CVE-2004-0778) ",
      "target": "PRODUCT VERSION CONTROL SYSTEM INFORMATION LEAKAGE VULNERABILITY (CVE-2004-0778) ",
      "weight": 8.0,
      "description": "\"The vulnerability allows for infoleaks through alternate history files in version control systems.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "FTP PORT COMMAND VULNERABILITY",
      "target": "EXPLOIT PROXY SERVICES FOR ACCESS CONTROL BYPASS TACTIC",
      "weight": 7.0,
      "description": "\"The tactic of exploiting proxy services to bypass access controls is accomplished through the FTP bounce attack on vulnerable systems.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "FTP PORT COMMAND VULNERABILITY",
      "target": "INSUFFICIENT AUTHENTICATION MECHANISMS",
      "weight": 6.0,
      "description": "\"Lack of sufficient authentication mechanisms is a prerequisite for exploiting the FTP PORT command vulnerability.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-cf2bb615b405ec5f79b3729ede5b6486"
    },
    {
      "source": "INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE",
      "target": "SECURITY CONFIGURATION SETUP AND IOMMU UTILIZATION",
      "weight": 14.0,
      "description": "\"Setting up proper security configurations for DMA devices during the boot phase mitigates the risk of early enablement attacks by controlling hardware access.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE",
      "target": "INFORMATION DISCLOSURE AND PRIVILEGE ESCALATION",
      "weight": 12.0,
      "description": "\"The tactic aims to achieve information disclosure or privilege escalation through exploiting insecure DMA device enablement during the boot phase.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE",
      "target": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY",
      "weight": 6.0,
      "description": "\"The attack technique exploits the improper isolation vulnerability to enable DMA devices early during boot phases, bypassing security controls.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "IMPROPERLY CLEARED MEMORY",
      "target": "SENSITIVE INFORMATION EXPOSURE",
      "weight": 8.0,
      "description": "\"Exposure of sensitive information results from improperly cleared memory, affecting the security of stored data.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "SENSITIVE DATA EXPOSURE AND ATTACK SUCCESS",
      "target": "OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)",
      "weight": 8.0,
      "description": "\"Exploiting the observable discrepancy vulnerability leads to sensitive data exposure as a postcondition of successful attacks.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "INFORMATION DISCLOSURE AND PRIVILEGE ESCALATION",
      "target": "ROWHAMMER ATTACK",
      "weight": 8.0,
      "description": "\"Rowhammer attacks can result in information disclosure and privilege escalation by exploiting inconsistencies in memory access control.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "SERVER BEHAVIOR ANALYSIS ",
      "target": "PRODUCT ICMP RESPONSE ANOMALY VULNERABILITY (CVE-2002-0208) ",
      "weight": 6.0,
      "description": "\"Analyzing server behavior helps attackers exploit vulnerabilities in product's modified ICMP responses.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "CWE-203 VULNERABILITY IMPLEMENTATION ATTACKERS",
      "target": "DISCREPANCY DETECTION TOOLS SOFTWARE",
      "weight": 8.0,
      "description": "\"Attackers use discrepancy detection tools to identify and exploit observable discrepancies as per CWE-203.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "ATTACKER ENTITY PLACEHOLDER",
      "target": "POP3 PORT SCANNING SOFTWARE",
      "weight": 16.0,
      "description": "\"The attacker likely uses software that scans networks using modified POP3 ports to exploit the network's vulnerabilities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "DISCREPANCY DETECTION TOOLS SOFTWARE",
      "target": "INCONSISTENT ERROR MESSAGE MITIGATION",
      "weight": 7.0,
      "description": "\"Implementing consistent and minimal error messages mitigates risks associated with discrepancy detection tools.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "POP3 PORT SCANNING SOFTWARE",
      "target": "NETWORK SCANNING USING MODIFIED POP3 PORTS",
      "weight": 14.0,
      "description": "\"The software implements the attack technique of scanning internal networks with modified POP3 port numbers.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "USER ENUMERATION VIA DISCREPANCIES ATTACK PATTERN",
      "target": "ERROR RESPONSE ANALYSIS TECHNIQUE",
      "weight": 9.0,
      "description": "\"The user enumeration attack pattern involves analyzing error responses for discrepancies that indicate successful operations.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "URL-DOWNLOADING LIBRARY EXPLOITATION PATTERN",
      "target": "CVE-2009-0037 VULNERABILITY",
      "weight": 12.0,
      "description": "\"This exploitation pattern targets the vulnerability in a URL-downloading library that automatically follows file:// and scp:// URLs.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "URL-DOWNLOADING LIBRARY EXPLOITATION PATTERN",
      "target": "NETWORK SCANNING USING MODIFIED POP3 PORTS",
      "weight": 16.0,
      "description": "\"The scanning technique complements the attack pattern of exploiting vulnerabilities in URL downloading libraries.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "ERROR RESPONSE ANALYSIS TECHNIQUE",
      "target": "USER ENUMERATION TACTIC",
      "weight": 7.0,
      "description": "\"The tactic of user enumeration is accomplished through analyzing discrepancies in error responses.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "NETWORK SCANNING USING MODIFIED POP3 PORTS",
      "target": "UNAUTHORIZED ACCESS TO NETWORK RESOURCES",
      "weight": 12.0,
      "description": "\"The tactic of gaining unauthorized network resource access is accomplished through the attack technique of scanning using modified POP3 ports.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "FOLLOWS REDIRECTS TO FILE AND SCP URLS",
      "target": "PROPER DOCUMENTATION IMPLEMENTATION",
      "weight": 14.0,
      "description": "\"Implementing proper documentation helps mitigate risks associated with following redirects that could lead to unauthorized access via file:// and scp:// protocols.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "TIMING ANALYSIS PRECONDITION",
      "target": "CWE-203 VULNERABILITY (CVE EXAMPLES)",
      "weight": 6.0,
      "description": "\"Analyzing timing variations is a prerequisite for exploiting observable discrepancies as indicated by CVE examples.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "UNAUTHORIZED ACCESS TO NETWORK RESOURCES",
      "target": "CVE-2010-1637 VULNERABILITY",
      "weight": 14.0,
      "description": "\"Uncontrolled access to network resources may result from exploiting the vulnerability in web-based mail programs that allow internal scanning via modified POP3 ports.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "LARGE TIMEOUTS ON UNCONFIRMED CONNECTIONS (CWE-440)",
      "target": "BUFFER OVERFLOW DUE TO LIBRARY FUNCTION MISUSE (CVE-2005-3265)",
      "weight": 5.0,
      "description": "\"Both issues can arise from improper handling of library functions and connections.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "source": "BOOT FIRMWARE COMPROMISE THROUGH UNTRUSTED IPS",
      "target": "UNTRUSTED COMPONENT MASTERING TRANSACTIONS",
      "weight": 8.0,
      "description": "\"Enabling untrusted components before security features can lead to them mastering hardware transactions, compromising boot firmware.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "source": "BOOT FIRMWARE COMPROMISE THROUGH UNTRUSTED IPS",
      "target": "DISABLING RESERVED BITS FEATURE",
      "weight": 7.0,
      "description": "\"The mitigation of disabling reserved bits helps prevent unauthorized access that could otherwise compromise the boot sequence through untrusted components.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "source": "LACK OF DOCUMENTATION",
      "target": "CVE-2010-1637 VULNERABILITY",
      "weight": 10.0,
      "description": "\"A lack of proper documentation can make it harder to identify and fix vulnerabilities like CVE-2010-1637, making the system more susceptible.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "SENSITIVE INFORMATION DISCLOSURE POSTCONDITION",
      "target": "CWE-203 VULNERABILITY (CVE EXAMPLES)",
      "weight": 8.0,
      "description": "\"Exploiting the vulnerability results in unauthorized access to sensitive information as a postcondition of successful attacks.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "CERT ORACLE SECURE CODING STANDARD FOR JAVA",
      "target": "ICS/OT SYSTEMS",
      "weight": 7.0,
      "description": "\"The CERT Oracle Secure Coding Standard provides guidelines that help mitigate vulnerabilities in ICS/OT systems.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "source": "BULLETIN BOARD USER EXISTENCE ERROR RESPONSE VULNERABILITY (CVE-2004-0294) ",
      "target": "INFOLEAK THROUGH ERROR RESPONSES ",
      "weight": 7.0,
      "description": "\"Attackers exploit bulletin board vulnerabilities to identify users based on error messages.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "CVE-2010-1637 VULNERABILITY",
      "target": "INSUFFICIENT TECHNICAL DOCUMENTATION",
      "weight": 5.0,
      "description": "\"A lack of proper technical documentation can make it easier for attackers to exploit vulnerabilities like CVE-2010-1637.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2010-1637 VULNERABILITY",
      "target": "NETWORK RESOURCES AND DEVICES",
      "weight": 16.0,
      "description": "\"The vulnerability exists in network resources and devices that allow scanning via modified POP3 ports.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2010-1637 VULNERABILITY",
      "target": "UNAUTHORIZED ACCESS TO INTERNAL NETWORKS",
      "weight": 7.0,
      "description": "\"Gaining unauthorized access to internal networks is a consequence of exploiting the CVE-2010-1637 vulnerability.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2010-1637 VULNERABILITY",
      "target": "INTERNAL NETWORK RESOURCES TARGETED BY VULNERABILITIES",
      "weight": 8.0,
      "description": "\"The internal network resources are targeted due to the existence of CVE-2010-1637 vulnerability.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2010-1637 VULNERABILITY",
      "target": "WEB-BASED MAIL PROGRAM SOFTWARE",
      "weight": 8.0,
      "description": "\"The web-based mail program software contains a vulnerability (CVE-2010-1637) that allows unauthorized scanning of internal networks.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2010-1637 VULNERABILITY",
      "target": "EXPLOITATION VIA MODIFIED POP3 PORTS",
      "weight": 8.0,
      "description": "\"The technique of exploiting modified POP3 ports is used to exploit the CVE-2010-1637 vulnerability.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "BYPASS PROTECTION MECHANISM THROUGH UNAUTHORIZED JTAG ACCESS",
      "target": "UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION",
      "weight": 14.0,
      "description": "\"The tactic of bypassing protection is accomplished by exploiting improper JTAG interface authorization.\"<SEP>\"The tactic of bypassing protection mechanisms is accomplished by exploiting improper JTAG interface authorization.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "CVE-2009-0037 VULNERABILITY",
      "target": "URL-DOWNLOADING LIBRARY SOFTWARE",
      "weight": 8.0,
      "description": "\"The URL-downloading library software is vulnerable to CVE-2009-0037, which allows following of file:// and scp:// URLs.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2009-0037 VULNERABILITY",
      "target": "AUTOMATED REDIRECT FOLLOWING EXPLOIT TECHNIQUE",
      "weight": 8.0,
      "description": "\"The technique of automated redirect following is used to exploit the CVE-2009-0037 vulnerability.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2009-0037 VULNERABILITY",
      "target": "UNAUTHORIZED ACCESS TO INTERNAL NETWORKS",
      "weight": 7.0,
      "description": "\"Gaining unauthorized access to internal networks is also a consequence of exploiting the CVE-2009-0037 vulnerability.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "CVE-2009-0037 VULNERABILITY",
      "target": "INTERNAL NETWORK RESOURCES TARGETED BY VULNERABILITIES",
      "weight": 8.0,
      "description": "\"The internal network resources are also targeted due to the existence of CVE-2009-0037 vulnerability.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-511f3baaabb0ab2809dad9343c0d0238"
    },
    {
      "source": "NETWORK SNIFFER AND PROTOCOL ANALYZER USERS",
      "target": "STRACE (LINUX)",
      "weight": 8.0,
      "description": "\"Attackers can use Strace on Linux systems to monitor system calls for detecting plaintext transmission activities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "NETWORK SNIFFER AND PROTOCOL ANALYZER USERS",
      "target": "TRUSS (SOLARIS)",
      "weight": 8.0,
      "description": "\"Attackers can use Truss on Solaris systems to monitor processes and detect plaintext transmission of sensitive data.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "NETWORK SNIFFER AND PROTOCOL ANALYZER USERS",
      "target": "SYSINTERNALS UTILITIES (WINDOWS)",
      "weight": 8.0,
      "description": "\"Attackers may utilize Sysinternals tools like FileMon, RegMon, and Process Monitor on Windows to detect plaintext data transmissions.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "LACK OF AUTHENTICATION AND AUTHORIZATION FOR DEBUG PINS",
      "target": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "weight": 6.0,
      "description": "\"Lacking proper authentication mechanisms for debug pins is a prerequisite for exploiting the vulnerability during ROM execution.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "DATA EXTRACTION AND PRIVILEGE ESCALATION THROUGH EARLY BOOT PHASE ATTACKS",
      "target": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY",
      "weight": 8.0,
      "description": "\"Early boot phase DMA attacks can result in data extraction or privilege escalation due to improperly isolated shared resources.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "target": "UNAUTHORIZED ACCESS AND DATA MODIFICATION THROUGH DEBUG INTERFACE EXPLOITATION",
      "weight": 8.0,
      "description": "\"Exploiting the vulnerability leads to unauthorized access and data modification affecting system integrity and confidentiality.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "target": "ROM CODE EXECUTION MANAGEMENT SOFTWARE MODULE",
      "weight": 8.0,
      "description": "\"The ROM code execution management software module implements vulnerabilities that can be exploited during the execution phase.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION",
      "target": "SYSTEM-ON-CHIP (SOC) WITH MISSING OR INSUFFICIENT IP IDENTIFIERS",
      "weight": 9.0,
      "description": "\"The vulnerability exists within SoCs that do not have adequate identifiers for their components, leading to security weaknesses.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-b2db9bd0b7df158579fa4f955ca5f332"
    },
    {
      "source": "TRUSS (SOLARIS)",
      "target": "CRYPTOGRAPHIC FUNCTION DETECTION",
      "weight": 7.0,
      "description": "\"Truss can be used by attackers to trace system calls related to cryptographic functions during plaintext transmission detection.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "STRACE (LINUX)",
      "target": "CRYPTOGRAPHIC FUNCTION DETECTION",
      "weight": 7.0,
      "description": "\"Strace helps in detecting the presence of cryptographic functions being invoked or omitted during data transmission processes.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "SYSINTERNALS UTILITIES (WINDOWS)",
      "target": "NETWORK TRAFFIC ANALYSIS FOR ENCRYPTION USAGE",
      "weight": 8.0,
      "description": "\"Sysinternals utilities like FileMon and RegMon can be used to analyze network traffic patterns for encryption usage detection.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "ICS/OT SYSTEMS",
      "target": "EXPECTED BEHAVIOR VIOLATION (CWE-440)",
      "weight": 6.0,
      "description": "\"Industries relying on ICS or OT systems are susceptible to expected behavior violations that may compromise security.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-ce9349a8e53d18b31a1043da3b9bb4bc"
    },
    {
      "source": "ATTACKER",
      "target": "DEBUG INTERFACE MISCONFIGURATION",
      "weight": 5.0,
      "description": "\"An attacker can exploit a misconfigured debug interface as part of their attack strategy.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "ATTACKER",
      "target": "SPOOFED UPDATE REQUEST",
      "weight": 9.0,
      "description": "\"Attackers use spoofed update requests to manipulate shadow copies into adopting attacker-friendly values.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-6c031a7ff8a513b1dd7b59f833f1ac53"
    },
    {
      "source": "ATTACKER",
      "target": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "weight": 14.0,
      "description": "\"An attacker can exploit improper protection against voltage and clock glitches to compromise the device.\"<SEP>\"An attacker can exploit the improper protection against voltage and clock glitches to compromise the system.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "ATTACKER",
      "target": "FUSE VALUES CONFIGURATION SOFTWARE",
      "weight": 18.0,
      "description": "\"An attacker uses specific software to incorrectly set fuse values, leading the system into an insecure state.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "ATTACKER",
      "target": "CHIPWHISPERER",
      "weight": 16.0,
      "description": "\"An attacker can use ChipWhisperer as a specialized hardware tool during implementation phase to check for susceptibility of voltage and clock glitching attacks.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "ATTACKER",
      "target": "PUBLIC KEY CRYPTOGRAPHY USAGE",
      "weight": 8.0,
      "description": "\"The attacker exploits public key cryptography usage to verify firmware binaries with compromised keys.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "ATTACKER",
      "target": "EXPLOITATION OF NON-UPDATEABLE FIRMWARE",
      "weight": 9.0,
      "description": "\"The attacker uses techniques exploiting non-updatable firmware for unauthorized access and control.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "ATTACKER",
      "target": "SHADOW REGISTERS EXPLOITATION",
      "weight": 9.0,
      "description": "\"Attackers use the technique of exploiting shadow registers to bypass existing protections.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "ATTACKER",
      "target": "MALICIOUS SOFTWARE",
      "weight": 18.0,
      "description": "\"An attacker uses malicious software to misconfigure address ranges, creating overlaps for exploitation.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "AUTOMATED STATIC ANALYSIS",
      "target": "CRYPTOGRAPHIC FUNCTION DETECTION",
      "weight": 7.0,
      "description": "\"Automated static analysis helps in identifying potential vulnerabilities related to cryptographic function omissions or misuses during development.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "target": "PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 5.0,
      "description": "\"The design flaws allow for the exploitation of vulnerabilities by attackers to modify lock bits.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "target": "PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 9.0,
      "description": "\"The lock bit modification vulnerability exists within hardware IPs, affecting protected registers and address regions.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "target": "DESIGN FLAWS AND IMPLEMENTATION WEAKNESSES",
      "weight": 5.0,
      "description": "\"Implementation weaknesses serve as prerequisites for the vulnerability to be exploited by attackers.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "target": "SYSTEM CONFIGURATION CHANGES POST-POWER TRANSITION",
      "weight": 8.0,
      "description": "\"Post-power transition changes result from the ability to modify lock bits, impacting system configurations.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "LESS TRUSTWORTHY PARTIES",
      "target": "SENSITIVE INFORMATION READ FROM CLEARED MEMORY",
      "weight": 9.0,
      "description": "\"Attackers exploit uncleared resources to read sensitive information left behind.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "IMPROPER SECURITY CONFIGURATION AND EARLY BOOT PHASE ENABLEMENT",
      "target": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY",
      "weight": 5.0,
      "description": "\"Enabling DMA devices too early in the boot phase without proper security configurations sets up a precondition for exploiting shared resource isolation vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "RESOURCE RELEASE AND REUSE PROCESS",
      "target": "UNCLEARED RESOURCE EXPOSURE PATTERN",
      "weight": 8.0,
      "description": "\"The software process can be exploited through patterns that target uncleared resources.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "MANUAL PENETRATION TESTING AND THREAT MODELING",
      "target": "TRANSMITTING DATA IN PLAIN TEXT PRECONDITION",
      "weight": 6.0,
      "description": "\"Penetration testing and threat modeling can help identify preconditions for plaintext transmission vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "UNCLEARED RESOURCE EXPOSURE PATTERN",
      "target": "SENSITIVE INFORMATION READ FROM CLEARED MEMORY",
      "weight": 9.0,
      "description": "\"The technique is part of the uncleared resource exposure pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "UNCLEARED RESOURCE EXPOSURE PATTERN",
      "target": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "weight": 7.0,
      "description": "\"This attack pattern exploits the vulnerability in resource release processes.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "SENSITIVE INFORMATION READ FROM CLEARED MEMORY",
      "target": "RESOURCE OVERWRITING RECOMMENDATIONS",
      "weight": 8.0,
      "description": "\"Overwriting recommendations mitigate the risk of sensitive information being read by attackers.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "SENSITIVE INFORMATION READ FROM CLEARED MEMORY",
      "target": "PREVENT INFORMATION EXPOSURE TACTIC",
      "weight": 7.0,
      "description": "\"The tactic prevents the exposure of information through proper clearing procedures.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "MAINTAINING SECURE SYSTEM CONFIGURATION POST-RESET",
      "target": "PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 6.0,
      "description": "\"Ensuring secure configuration is a tactic that mitigates design flaws by preventing unauthorized changes post-reset.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "DISABLING RESERVED BITS FEATURE",
      "target": "RESERVED BITS MISUSE IN PRODUCTION HARDWARE",
      "weight": 8.0,
      "description": "\"The mitigation of disabling reserved bits feature aims to prevent misuse by adversaries writing to these bits.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0e7e0a03ef0aaa003fbaeb20b6671acf"
    },
    {
      "source": "SENSITIVE INFORMATION EXPOSURE",
      "target": "PHYSICAL SIDE CHANNEL EXPLOITATION",
      "weight": 7.0,
      "description": "\"The tactic of exposing sensitive information is accomplished through the attack technique of physical side channel exploitation.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "TRANSMITTING DATA IN PLAIN TEXT PRECONDITION",
      "target": "ENCRYPTED CHANNELS USAGE FOR COMMUNICATION",
      "weight": 8.0,
      "description": "\"Encrypting communication channels is a mitigation measure aimed at preventing plaintext transmission of sensitive information.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "AUTOMATED TESTING TOOLS FOR LOCK BIT PROTECTION REVIEWING DESIGN INCONSISTENCIES",
      "target": "PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 8.0,
      "description": "\"These tools help identify design inconsistencies and weaknesses that could lead to lock bit modification vulnerabilities.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)",
      "target": "WEB APPLICATIONS WITH SSL USAGE",
      "weight": 9.0,
      "description": "\"These vulnerabilities affect systems transmitting sensitive information over insecure channels without proper encryption mechanisms in place.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)",
      "target": "UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION POSTCONDITION",
      "weight": 8.0,
      "description": "\"Unauthorized access to sensitive information is a postcondition of plaintext transmission vulnerabilities.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)",
      "target": "WEB APPLICATIONS WITH SSL USAGE IMPLEMENTATION PHASE",
      "weight": 8.0,
      "description": "\"Ensuring SSL usage in web applications is critical to prevent vulnerabilities related to plaintext transmission.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "INSUFFICIENT DATA CLEARING PRECONDITION",
      "target": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "weight": 6.0,
      "description": "\"Lack of data clearing is a prerequisite for the vulnerability to be exploited.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "MEMORY MANAGEMENT SYSTEMS",
      "weight": 9.0,
      "description": "\"The vulnerability exists in memory management systems due to improper cleanup procedures.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "SENSITIVE DATA EXPOSURE AND UNAUTHORIZED ACCESS",
      "weight": 8.0,
      "description": "\"Unauthorized access results from the exposure of sensitive data due to uncleared resources.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2019-3733",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to memory exposure in cryptography libraries.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2003-0001",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to frame infoleak in Ethernet NIC drivers.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2003-0291",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to DHCP packet infoleak in routers.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2005-1406",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to memory infoleak due to partial clearing in products.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2005-1858",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to memory infoleak due to partial clearing in products.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2005-3180",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to memory infoleak due to partial clearing in products.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2005-3276",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to data structure infoleak due to partial clearing in products.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY",
      "target": "CVE-2002-2077",
      "weight": 7.0,
      "description": "\"This specific vulnerability is an instance where the general cleanup issue leads to improper memory clearing before reuse in software.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-97f0fe12f43fe0952f114af5f3d4a0a1"
    },
    {
      "source": "LOCK BIT MODIFICATION ATTACK TECHNIQUE",
      "target": "PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS",
      "weight": 7.0,
      "description": "\"The attack technique is part of a broader pattern that exploits design flaws in hardware IPs.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "LOCK BIT MODIFICATION ATTACK TECHNIQUE",
      "target": "PROPER LOCK BIT DESIGN IMPLEMENTATION",
      "weight": 8.0,
      "description": "\"Correct implementation mitigates the risk by preventing unauthorized modification of lock bits post-initialization.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "LOCK BIT MODIFICATION ATTACK TECHNIQUE",
      "target": "SECURITY PROTECTION METHOD (WRITE-ONCE SETTING)",
      "weight": 8.0,
      "description": "\"The security protection method mitigates the risk by preventing write-once settings from being modified post-initialization.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-edc0b7b8ef9d117a05387c6abf439ce2"
    },
    {
      "source": "SECURE TRANSMISSION DESIGN PHASE",
      "target": "SOFTWARE DEVELOPMENT LIFECYCLE SECURITY",
      "weight": 7.0,
      "description": "\"The secure design phase relies on thorough security measures throughout the SDLC to mitigate risks associated with plaintext transmission.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-5ba67b7953cc742d67bd66028d9840d5"
    },
    {
      "source": "SENSITIVE INFORMATION UNCLEARED BEFORE USE",
      "target": "RESOURCE LIFECYCLE MANAGEMENT ISSUE",
      "weight": 8.0,
      "description": "\"Uncleared sensitive information is a result of improper handling in the resource lifecycle management process.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "SENSITIVE INFORMATION UNCLEARED BEFORE USE",
      "target": "MEMORY ALLOCATION VULNERABILITY",
      "weight": 7.0,
      "description": "\"The memory allocation vulnerability is caused by uncleared sensitive data in reusable resources.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY",
      "target": "SYSTEM-ON-A-CHIP (SOC)",
      "weight": 9.0,
      "description": "\"The vulnerability exists within System-on-Chip architecture, particularly in the improper isolation of shared resources between trusted and untrusted agents.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-155e5cca5e90d88780b67dd7b487829a"
    },
    {
      "source": "RESOURCE LIFECYCLE MANAGEMENT ISSUE",
      "target": "CWE-212:UNCLEARED SENSITIVE DATA",
      "weight": 7.0,
      "description": "\"The resource lifecycle management issue encompasses clearing sensitive data before reuse, directly relating to CWE-212.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "RESOURCE LIFECYCLE MANAGEMENT ISSUE",
      "target": "IMPROPER INITIALIZATION/SHUTDOWN",
      "weight": 6.0,
      "description": "\"Problems arise when resources are not properly initialized or shutdown, leading to vulnerabilities in the management process.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "UNTRUSTED AGENTS",
      "target": "CVE-2022-24985 ",
      "weight": 14.0,
      "description": "\"Untrusted agents can exploit CVE-2022-24985 by bypassing authentication checks in a form hosting website.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "UNTRUSTED AGENTS",
      "target": "CVE-2021-36934 ",
      "weight": 14.0,
      "description": "\"Untrusted agents can take advantage of overly permissive ACLs to gain unauthorized access to sensitive files as indicated by CVE-2021-36934.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "UNTRUSTED AGENTS",
      "target": "INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY",
      "weight": 14.0,
      "description": "\"Untrusted agents can exploit the vulnerability due to incorrect hardware register defaults and module parameters, leading to insecure states at power reset.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "UNTRUSTED AGENTS",
      "target": "INSUFFICIENT GRANULARITY OF ADDRESS REGIONS PROTECTED BY REGISTER LOCKS",
      "weight": 12.0,
      "description": "\"Untrusted agents might leverage insufficient granularity in address region protection to exploit the system's weaknesses.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "ACCESS CONTROL POLICY IMPLEMENTATION FAILURE",
      "target": "SECURITY-SENSITIVE ASSETS",
      "weight": 12.0,
      "description": "\"Insufficient granularity of access control policies can lead to unauthorized access to security-sensitive assets.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "CWE-212:UNCLEARED SENSITIVE DATA",
      "target": "NETWORK PACKET EXPOSURE",
      "weight": 7.0,
      "description": "\"Network packet exposure can occur due to uncleared sensitive data within packets during transmission.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "NETWORK PACKET EXPOSURE",
      "target": "CONFIDENTIALITY BREACH",
      "weight": 8.0,
      "description": "\"A breach of confidentiality occurs as a result of sensitive information being exposed through network packets.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-eb9580695df69206d5ae3cb8f9e396f5"
    },
    {
      "source": "CVE-2021-36934 ",
      "target": "SECURITY-SENSITIVE ASSETS",
      "weight": 16.0,
      "description": "\"The overly permissive ACL vulnerability can result in unauthorized access to security-sensitive assets due to insufficient controls on user-related files.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY",
      "target": "SECURITY-SENSITIVE ASSETS",
      "weight": 18.0,
      "description": "\"At power reset, insecure defaults can expose security-sensitive asset accesses to untrusted software, making them targets of exploitation.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY",
      "target": "INSECURE DEFAULT VALUES",
      "weight": 14.0,
      "description": "\"Incorrectly defined default values and module parameters are precursors to the vulnerability at power reset.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY",
      "target": "HARDWARE DESIGN REVIEW PHASE REQUIREMENT",
      "weight": 16.0,
      "description": "\"Reviewing system parameters and register defaults is critical to mitigate the risk of insecure hardware at power reset.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "INSUFFICIENT GRANULARITY OF ADDRESS REGIONS PROTECTED BY REGISTER LOCKS",
      "target": "AUTOMATED TOOLS TESTING PHASE REQUIREMENT",
      "weight": 16.0,
      "description": "\"Testing phases must employ automated tools to ensure address regions are sufficiently granular and protected.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0f1339a1fe7a6f1e0feebb426140abf0"
    },
    {
      "source": "INFOLEAK THROUGH ERROR RESPONSES ",
      "target": "DIFFERENT ERROR MESSAGES GENERATION ",
      "weight": 8.0,
      "description": "\"The generation of different error messages implements an infoleak through error responses attack pattern.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "CWE-203 VULNERABILITY (CVE EXAMPLES)",
      "target": "MULTIPLE OPERATING SYSTEMS (CWE-203)",
      "weight": 9.0,
      "description": "\"The vulnerabilities exist in multiple operating systems, making them targets for exploitation based on observable discrepancies.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "DIFFERENT ERROR MESSAGES GENERATION ",
      "target": "REMOTE ATTACKER ",
      "weight": 9.0,
      "description": "\"The remote attacker uses different error messages generated by the software for information gathering.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-307fbbaf9cc5087b5dba49fab909abc3"
    },
    {
      "source": "OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)",
      "target": "VARIOUS PLATFORMS (CWE-203)",
      "weight": 9.0,
      "description": "\"The observable discrepancy vulnerability exists in various platforms, making them targets for such attacks.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-60f96cbfcdc863307fe7ed2450e4fab0"
    },
    {
      "source": "COMPROMISE SECURE BOOT CHAIN",
      "target": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "weight": 16.0,
      "description": "\"Exploiting the improper protection leads to compromising the secure boot chain, affecting system security.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "DEVICE SUPPORTING SECURE BOOT FEATURES",
      "target": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "weight": 18.0,
      "description": "\"The vulnerability exists in devices lacking proper protection mechanisms.\"<SEP>\"The vulnerability exists in devices that support secure boot features but lack proper protection mechanisms.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "PERSONAL KEY NETWORK TRANSMISSION VULNERABILITY (CVE-2021-34687)",
      "target": "DES ALGORITHM USE",
      "weight": 5.0,
      "description": "\"Using DES algorithms may indirectly contribute to vulnerabilities like CVE-2021-34687 due to outdated standards.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "SIMULATION / EMULATION",
      "target": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "weight": 7.0,
      "description": "\"Verification through functional simulation helps ensure proper adherence to memory map policy, reducing risk.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "FAULT ATTACKS USING VOLTAGE AND CLOCK GLITCHES",
      "target": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "weight": 14.0,
      "description": "\"The fault attack pattern exploits vulnerabilities related to improper protection against voltage and clock glitches.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "FAULT ATTACKS USING VOLTAGE AND CLOCK GLITCHES",
      "target": "VOLTAGE AND CLOCK GLITCH EXPLOITATION",
      "weight": 18.0,
      "description": "\"The technique of exploiting voltage and clock glitches is a part of the fault attacks pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "THOROUGH VERIFICATION OF DATA ROUTING LOGIC",
      "target": "HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS",
      "weight": 8.0,
      "description": "\"Verifying data routing logic can help mitigate the hardware vulnerability that incorrectly forwards data before security checks are complete.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "FUZZING (PENETRATION TESTING)",
      "target": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "weight": 8.0,
      "description": "\"Tests access control mechanisms to ensure protection against unauthorized software access, mitigating risk.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "FAULTY FSM DESIGN",
      "target": "CWE-1191 AND CWE-1244",
      "weight": 5.0,
      "description": "\"Both vulnerabilities can arise from faulty FSM designs that do not account for all possible states or transitions.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "FAULTY FSM DESIGN",
      "target": "IMPROPER WRITE HANDLING IN NON-VOLATILE MEMORIES",
      "weight": 5.0,
      "description": "\"Faulty design of finite state machines can exacerbate issues with improper write handling in non-volatile memories.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "FAULTY FSM DESIGN",
      "target": "CWE-1244",
      "weight": 5.0,
      "description": "\"Both vulnerabilities can result from faulty state handling, creating an environment where unauthorized access is possible.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "FAULTY FSM DESIGN",
      "target": "BLINDING OR MASKING TECHNIQUES FOR INTERNAL ASSETS",
      "weight": 5.0,
      "description": "\"Protecting internal assets through blinding/masking techniques can reduce the impact of faulty FSM design vulnerabilities.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "AUTOMATED ANALYSIS: INFORMATION FLOW TRACKING",
      "target": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "weight": 8.0,
      "description": "\"Detects violations of access policies by tracking sensitive data flow, reducing risk of unauthorized exposure.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "DES ALGORITHM USE",
      "target": "CUSTOM CRYPTOGRAPHIC ALGORITHMS DEVELOPMENT",
      "weight": 7.0,
      "description": "\"Developing custom cryptographic algorithms exposes systems to known weaknesses, including those related to using DES.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "VOLTAGE GLITCH ATTACK TECHNIQUE",
      "target": "BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY",
      "weight": 16.0,
      "description": "\"Attackers can use voltage glitches to exploit vulnerabilities in IP communication firmware allowing unauthorized control through certain impulses.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "MANUAL ANALYSIS",
      "target": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "weight": 7.0,
      "description": "\"Correct implementation of access policies as verified by manual analysis mitigates the vulnerability.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "MD5 CONFIGURATION VULNERABILITY (CVE-2005-2946)",
      "target": "MD5 ALGORITHM USE",
      "weight": 6.0,
      "description": "\"Using MD5 as a default configuration leads to the vulnerability described in CVE-2005-2946.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "VOLTAGE AND CLOCK GLITCH EXPLOITATION",
      "target": "SECURE DEBUG INTERFACE",
      "weight": 7.0,
      "description": "\"Attacks may exploit secure debug interfaces through improper protection against voltage and clock glitches.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "VOLTAGE AND CLOCK GLITCH EXPLOITATION",
      "target": "BYPASS ACCESS CONTROL MECHANISMS",
      "weight": 7.0,
      "description": "\"Using voltage and clock glitch attacks to bypass access control mechanisms.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "VOLTAGE AND CLOCK GLITCH EXPLOITATION",
      "target": "EXECUTE UNAUTHORIZED CODE OR COMMANDS",
      "weight": 8.0,
      "description": "\"As a postcondition, attackers may execute unauthorized code or commands on the system after exploiting vulnerabilities.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "VOLTAGE AND CLOCK GLITCH EXPLOITATION",
      "target": "COMPROMISE SYSTEM SECURITY",
      "weight": 14.0,
      "description": "\"The tactic of compromising system security is accomplished through exploiting voltage and clock glitches.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "VOLTAGE AND CLOCK GLITCH EXPLOITATION",
      "target": "READ MEMORY AND MODIFY MEMORY OPERATIONS",
      "weight": 9.0,
      "description": "\"Executing unauthorized memory operations through voltage and clock glitch attacks.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "HIGH-PERFORMANCE ON-CHIP BUS PROTOCOLS AND PROCESSOR DATA-PATHS",
      "target": "MELTDOWN ATTACK",
      "weight": 9.0,
      "description": "\"The Meltdown attack technique specifically targets the architecture of high-performance on-chip bus protocols and processor data-paths.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "HIGH-PERFORMANCE ON-CHIP BUS PROTOCOLS AND PROCESSOR DATA-PATHS",
      "target": "INSECURE SECURITY CHECKS LOGIC IMPLEMENTATION",
      "weight": 8.0,
      "description": "\"These protocols and data-paths are prone to insecure security checks logic implementation, making them targets for attacks.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "IDENTITY CARD HASH COLLISION VULNERABILITY (CVE-2019-3907)",
      "target": "MD5 ALGORITHM USE",
      "weight": 6.0,
      "description": "\"Using MD5 for identity card hashing introduces a vulnerability as documented in CVE-2019-3907.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "MD5 ALGORITHM USE",
      "target": "MD5 VULNERABILITY (CVE-2020-4778)",
      "weight": 6.0,
      "description": "\"Using MD5 algorithm as a precondition makes systems susceptible to vulnerability CVE-2020-4778.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "MD5 ALGORITHM USE",
      "target": "SHA-2 CHAINING FOR ENCRYPTION IDEA (DISCOURAGED)",
      "weight": 4.0,
      "description": "\"The idea of chaining SHA-2 can be misused to create insecure systems when MD5 is involved, reflecting poor cryptographic design.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "SHA-1 VULNERABILITY (CVE-2005-2946)",
      "target": "MD4 ALGORITHM USE",
      "weight": 5.0,
      "description": "\"Using MD4 can indirectly contribute to the vulnerability described in CVE-2005-2946 by similar weaknesses.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "UNPRIVILEGED SW INTERFACE CHECK",
      "target": "ANTI-GLITCH PROTECTIONS LACK",
      "weight": 6.0,
      "description": "\"Checking if power management interfaces are available from unprivileged software (SW), which could make attacks like CLKSCREW and Plundervolt easier due to lack of anti-glitch protections.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "INSUFFICIENT PHYSICAL PROTECTION DESIGN DECISIONS",
      "target": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "weight": 6.0,
      "description": "\"Design decisions that do not properly align with intended protection can lead to vulnerabilities in physical access control measures.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "CVE-2017-5754: SPECULATIVE EXECUTION VULNERABILITY",
      "target": "SPECULATIVE EXECUTION AND INDIRECT BRANCH PREDICTION EXPLOITATION",
      "weight": 9.0,
      "description": "\"This attack pattern exploits the speculative execution vulnerability identified in CVE-2017-5754.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "ENCRYPTION OF DEBUG COMMUNICATIONS",
      "target": "SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS",
      "weight": 6.0,
      "description": "\"Encryption mitigates sensitive information exposure by preventing unauthorized access to debug interfaces.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "ENCRYPTION OF DEBUG COMMUNICATIONS",
      "target": "CWE-1244",
      "weight": 5.0,
      "description": "\"Encrypting debug communications mitigates the risk of CWE-1244 being exploited.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "ENCRYPTION OF DEBUG COMMUNICATIONS",
      "target": "JTAG ACCESS CONTROL MISMANAGEMENT",
      "weight": 6.0,
      "description": "\"Encrypting debug communications mitigates the risk of improper JTAG access control being exploited.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "SECURITY TOKENS IN SOC SYSTEMS",
      "target": "IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY",
      "weight": 6.0,
      "description": "\"The improper handling of memory ranges affects the security tokens within SoC systems.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "source": "SECURE BOOT BYPASS AND EFUSE READING POSTCONDITION",
      "target": "ANTI-GLITCH PROTECTIONS LACK",
      "weight": 8.0,
      "description": "\"An attacker exploiting the lack of anti-glitch protections can bypass secure boot mechanisms and read protected eFuses as a result.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "DEBUG INTERFACE MISCONFIGURATION",
      "target": "CWE-1244",
      "weight": 5.0,
      "description": "\"Improper configuration of debug interfaces can lead to a state where vulnerabilities like CWE-1244 exist.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "DETECTION OF VOLTAGE AND CLOCK GLITCHES",
      "target": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "weight": 12.0,
      "description": "\"Detection of improper protection against voltage and clock glitches is a prerequisite for launching an attack.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "UNTRUSTED AGENT",
      "target": "ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN",
      "weight": 7.0,
      "description": "\"The untrusted agent uses an attack pattern exploiting inconsistencies in memory protection to bypass hardware-enforced restrictions.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "CWE-1244",
      "target": "SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS",
      "weight": 6.0,
      "description": "\"Exploiting CWE-1244 results in the exposure of sensitive information to unauthorized entities.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "SYSTEM ON CHIP (SOC)",
      "target": "IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)",
      "weight": 9.0,
      "description": "\"The improper security vulnerability exists within System on Chips where fabric bridges lack proper access control checks.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "SYSTEM SOFTWARE MEMORY MANAGEMENT EXPLOIT",
      "target": "PRIVILEGE ESCALATION VIA MEMORY OVERLAP EXPLOIT",
      "weight": 14.0,
      "description": "\"The system software memory management exploit and privilege escalation via overlapping memory are related attack techniques.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "source": "SYSTEM SOFTWARE MEMORY MANAGEMENT EXPLOIT",
      "target": "MEMORY REGION OVERLAP DENIAL OF SERVICE ATTACK",
      "weight": 8.0,
      "description": "\"A denial of service attack can result from exploiting system software’s flexibility in managing memory regions.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "source": "ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN",
      "target": "BYPASSING HARDWARE-ENFORCED ACCESS PROTECTION",
      "weight": 9.0,
      "description": "\"This technique is part of the attack pattern involving inconsistent access protections.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN",
      "target": "MEMORY MAPPING CONFIGURATION ADJUSTMENT",
      "weight": 8.0,
      "description": "\"An attack technique that creates new aliases for unauthorized access by adjusting memory mappings.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "CLOCK GLITCH ATTACK PATTERN",
      "target": "ANTI-GLITCH PROTECTIONS LACK",
      "weight": 14.0,
      "description": "\"The attack pattern of clock glitch involves exploiting the lack of anti-glitch protections, which allows bypassing secure boot mechanisms and reading protected eFuses.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "MEMORY MAPPING CONFIGURATION ADJUSTMENT",
      "target": "SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY",
      "weight": 7.0,
      "description": "\"Changing memory mapping configurations allows the untrusted agent to exploit vulnerabilities related to aliased memory regions.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "MEMORY REGION OVERLAP DENIAL OF SERVICE ATTACK",
      "target": "IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY",
      "weight": 16.0,
      "description": "\"A denial of service attack on high-privilege software memory regions is a postcondition resulting from exploiting the vulnerability.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "source": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "target": "PROPER IMPLEMENTATION OF SECURE BOOT AND PROTECTION LOGIC",
      "weight": 16.0,
      "description": "\"Robust implementation can mitigate risks associated with improper protection against voltage and clock glitches.\"<SEP>\"Robust implementation can mitigate the risks associated with improper protection against voltage and clock glitches.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "target": "ACCESS CONTROL MECHANISMS",
      "weight": 6.0,
      "description": "\"Lack of protection against voltage and clock glitches can lead to bypassing access control mechanisms.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY",
      "target": "HARDWARE-BASED SECURITY FEATURES",
      "weight": 9.0,
      "description": "\"Vulnerabilities exist in hardware-based security features due to improper protection.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "PROTECTION ROUTINE BYPASSING TACTIC",
      "target": "SECURITY REVIEW AGAINST TRANSFER OF ATTACK TARGET",
      "weight": 7.0,
      "description": "\"A mitigation approach involves reviewing whether protections merely transfer the attack target, as bypassing protection routines is a tactic that attackers can use.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "RESTRICTED DEBUG MODE ENTRY CONTROLS",
      "target": "IMPROPERLY RESTRICTED SECURITY TOKEN ASSIGNMENT",
      "weight": 8.0,
      "description": "\"Restricting control over memory aliasing features prevents improper assignment of mutable security tokens to malicious agents.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "RESTRICTED DEBUG MODE ENTRY CONTROLS",
      "target": "CRYPTOGRAPHY OPERATIONS SENSITIVE VALUES EXPOSURE IN HARDWARE DEBUG MODE ",
      "weight": 8.0,
      "description": "\"Mitigation controls to restrict debug mode entry and ensure security-sensitive values are cleared, preventing exposure.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "IMPROPER SECURITY TOKEN ASSIGNMENT PROTECTION MECHANISM VULNERABILITY",
      "target": "SECURITY TOKEN IMPROPER ASSIGNMENT PROTECTION WEAKNESS",
      "weight": 6.0,
      "description": "\"This vulnerability underlies the improper protection mechanisms for security token assignments, leading to potential exploits.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "source": "HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS",
      "target": "MELTDOWN ATTACK",
      "weight": 9.0,
      "description": "\"The Meltdown attack technique exploits the de-synchronization weakness in hardware logic to forward unauthorized data.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS",
      "target": "CWE-821: INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS",
      "weight": 9.0,
      "description": "\"The precondition involves the same hardware logic weakness that incorrectly forwards data before security checks are complete.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "WEAK RANDOMNESS GENERATION",
      "target": "LINEAR FEEDBACK SHIFT REGISTER (LFSR)",
      "weight": 6.0,
      "description": "\"Using LFSR can lead to weak randomness generation, which is a major security issue.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d7e3daa3b506ca99ea5b0a880cbb5093"
    },
    {
      "source": "IMPROPERLY RESTRICTED SECURITY TOKEN ASSIGNMENT",
      "target": "SECURITY TOKEN MECHANISM IN SOCS",
      "weight": 6.0,
      "description": "\"The improper protection of security tokens leads to vulnerabilities within the mechanism used by SoCs for action differentiation and identification.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "MELTDOWN ATTACK",
      "target": "UNAUTHORIZED ACCESS AND DATA EXPOSURE",
      "weight": 8.0,
      "description": "\"As a result of exploiting the hardware vulnerability, unauthorized access occurs leading to data exposure.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "MELTDOWN ATTACK",
      "target": "DATA CONFIDENTIALITY BREACH",
      "weight": 8.0,
      "description": "\"A postcondition resulting from an attacker exploiting the de-synchronization between control and data channels to gain unauthorized access to sensitive information.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "MELTDOWN ATTACK",
      "target": "ATTACKER (NOT EXPLICITLY NAMED)",
      "weight": 9.0,
      "description": "\"An attacker uses the Meltdown attack technique to exploit hardware vulnerabilities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "UNAUTHORIZED ACCESS TO SENSITIVE MEMORY REGIONS",
      "target": "SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY",
      "weight": 8.0,
      "description": "\"As a result, unauthorized access to sensitive regions is affected due to aliased memory region inconsistencies.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "UNAUTHORIZED ACCESS TO SENSITIVE MEMORY REGIONS",
      "target": "CRYPTOGRAPHY OPERATIONS SENSITIVE VALUES EXPOSURE IN HARDWARE DEBUG MODE ",
      "weight": 8.0,
      "description": "\"As a result, unauthorized access can lead to exposure of sensitive cryptographic values when entering debug mode.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "SPECULATIVE EXECUTION AND INDIRECT BRANCH PREDICTION EXPLOITATION",
      "target": "MICROARCHITECTURAL STATE EXPOSURE",
      "weight": 9.0,
      "description": "\"Exploiting microarchitectural state exposure is a tactic achieved through the attack pattern of speculative execution and indirect branch prediction exploitation.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-79d9c663f31b41f25e5f99c1f795c597"
    },
    {
      "source": "ARCHITECTURE OR DESIGN REVIEW",
      "target": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "weight": 7.0,
      "description": "\"Ensures proper policy implementation through documentation review, mitigating the vulnerability.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY",
      "target": "ACCESS CONTROL SYNCHRONIZATION BETWEEN MPU",
      "weight": 8.0,
      "description": "\"Mitigates inconsistencies in access protections by ensuring synchronization across MPUs protecting aliased regions.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2cef8319ae87f01f627389db9b2b7646"
    },
    {
      "source": "MICROCONTROLLER HARDWARE AND PROCESSOR SYSTEMS",
      "target": "INCORRECT SELECTION OF FUSE VALUES VULNERABILITY",
      "weight": 18.0,
      "description": "\"The vulnerability exists in microcontroller hardware and processor systems due to incorrect fuse value settings.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "RAZOR FLIP-FLOPS",
      "target": "SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS",
      "weight": 8.0,
      "description": "\"Special flip-flops designed to detect and prevent glitches in security-sensitive hardware modules, mitigating potential vulnerabilities.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "SYSTEM-ON-CHIP (SOC)",
      "target": "MISSING SECURITY IDENTIFIER PRIVILEGE ESCALATION POSTCONDITION",
      "weight": 9.0,
      "description": "\"SoCs are targeted in scenarios where missing security identifiers lead to privilege escalation or unauthorized access postconditions.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "COMPARISON LOGIC GRANULARITY ISSUE",
      "target": "BYPASS PROTECTION MECHANISM AND GAIN PRIVILEGES TACTIC",
      "weight": 14.0,
      "description": "\"The tactic is accomplished by exploiting comparison logic granularity issues to bypass protection mechanisms.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "COMPARISON LOGIC GRANULARITY ISSUE",
      "target": "INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN",
      "weight": 12.0,
      "description": "\"An attack pattern of incorrect comparison logic granularity exploits an issue where the product's comparison logic is performed step-by-step rather than in one operation.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "INCORRECT SELECTION OF FUSE VALUES VULNERABILITY",
      "target": "HARDWARE SECURITY MEASURES IMPLEMENTATION SOFTWARE",
      "weight": 16.0,
      "description": "\"Software for implementing hardware security measures can prevent vulnerabilities related to incorrect fuse value settings.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "REDUNDANCY IMPLEMENTATION FOR SECURITY-SENSITIVE CODE",
      "target": "SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS",
      "weight": 8.0,
      "description": "\"Implementing redundancy in security-sensitive code helps mitigate glitches and unexpected faults in critical hardware modules.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "COMPARISON LOGIC TIMING ATTACK POSTCONDITION",
      "target": "INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN",
      "weight": 14.0,
      "description": "\"The attack pattern of incorrect comparison logic granularity can lead to postconditions involving timing attacks.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "COMPARISON LOGIC TIMING ATTACK POSTCONDITION",
      "target": "INCORRECT COMPARISON LOGIC GRANULARITY ISSUE",
      "weight": 16.0,
      "description": "\"Postconditions involving timing attacks result from exploiting issues with comparison logic granularity.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "UNSPECIFIED ATTACKER",
      "target": "SOFTWARE-CONTROLLED POWER MANAGEMENT FEATURES",
      "weight": 8.0,
      "description": "\"Attackers use improperly secured software-controlled power management features to exploit vulnerabilities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "UNSPECIFIED ATTACKER",
      "target": "SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION",
      "weight": 8.0,
      "description": "\"An attacker can use specific instruction sequences as a technique for exploiting processor vulnerabilities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "UNSPECIFIED ATTACKER",
      "target": "RUNTIME ACTIVATION OF TEST/DEBUG FEATURES",
      "weight": 8.0,
      "description": "\"The attacker may use runtime activation of test/debug features to carry out their malicious activities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "UNAUTHORIZED CONTROL THROUGH IP COMMUNICATION FIRMWARE",
      "target": "BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY",
      "weight": 7.0,
      "description": "\"Exploiting the vulnerability in IP communication firmware can lead to unauthorized control, allowing attackers to manipulate data or gain access.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "SECURE COMPARISON LOGIC DESIGN PATTERN",
      "target": "SECURE SYSTEM DESIGN IMPLEMENTATION",
      "weight": 14.0,
      "description": "\"Implementation of secure system design includes adopting the secure comparison logic pattern to mitigate timing attacks.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "target": "PHYSICAL MANUFACTURING ERRORS",
      "weight": 5.0,
      "description": "\"Errors during manufacturing phase contribute to the vulnerability by introducing weaknesses into physical security mechanisms.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "target": "PHYSICAL ACCESS CONTROL MECHANISM",
      "weight": 7.0,
      "description": "\"Properly designed and implemented physical control mechanisms mitigate the vulnerability of improper physical access control.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY",
      "target": "FORMAL VERIFICATION",
      "weight": 8.0,
      "description": "\"Assertions in formal verification capture and prevent illegal register access scenarios, mitigating the vulnerability.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "ANTI-GLITCH PROTECTIONS LACK",
      "target": "SECURE BOOT BYPASS VIA ANTI-GLITCH PROTECTIONS LACK",
      "weight": 7.0,
      "description": "\"Lack of anti-glitch protections leads to the postcondition where secure boot mechanisms can be bypassed by attackers.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION",
      "target": "CVE-2019-11157 (PLUNDERVOLT)",
      "weight": 7.0,
      "description": "\"The fault injection technique exploits the improper conditions check in Intel processor voltage settings to escalate privileges.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION",
      "target": "PROPER ACCESS CONTROL FOR PHYSICAL CONDITIONS MANAGEMENT",
      "weight": 8.0,
      "description": "\"Proper access control mitigates the risk of exploiting vulnerabilities through fault injection techniques.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION",
      "target": "ROWHAMMER VULNERABILITY",
      "weight": 7.0,
      "description": "\"The fault injection technique may exploit the Rowhammer vulnerability to cause bit flips in memory.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "LEVEL SENSORS",
      "target": "SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS",
      "weight": 7.0,
      "description": "\"Sensors at the SoC or platform level can detect anomalies caused by glitch attacks on security-sensitive hardware modules.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "COMPARISON LOGIC IMPLEMENTATION SOFTWARE",
      "target": "INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN",
      "weight": 16.0,
      "description": "\"The software implements comparison logic in steps, which is exploited by attackers through incorrect comparison granularity.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY",
      "target": "SECURITY TOKEN IMPROPER ASSIGNMENT PROTECTION WEAKNESS",
      "weight": 12.0,
      "description": "\"The vulnerability and protection weakness share a premise relationship, both being conditions for exploitation by attackers.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "source": "SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT",
      "target": "CVE-2019-11157 (PLUNDERVOLT)",
      "weight": 6.0,
      "description": "\"The side channel analysis technique can exploit the improper conditions check for gathering information necessary to perform attacks.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT",
      "target": "IMPROPER SECURITY LOCK BYPASSING",
      "weight": 7.0,
      "description": "\"The tactic of bypassing security locks is accomplished through side channel analysis and measurement collection.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT",
      "target": "INTEL PROCESSORS, AMD EXTENSIONS FOR LINUX",
      "weight": 9.0,
      "description": "\"The target entity includes processors and extensions vulnerable to side channel analysis attacks through their hardware features.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT",
      "target": "INTEL RAPL INTERFACE",
      "weight": 8.0,
      "description": "\"Attackers use the Intel RAPL interface to gather measurement traces necessary for side-channel analysis.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT",
      "target": "ACCESS CONTROL INADEQUACY IN LINUX KERNEL DRIVER",
      "weight": 6.0,
      "description": "\"Inadequate access control enables attackers to use side-channel analysis through Linux kernel driver vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "UNAUTHORIZED ACTOR",
      "target": "RESTRICTED INFORMATION EXPOSURE",
      "weight": 8.0,
      "description": "\"An unauthorized actor can exploit insufficient protections to access restricted information.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-1a161ab7512e03998cff099072c50818"
    },
    {
      "source": "UNAUTHORIZED ACCESS THROUGH IP COMMUNICATION FIRMWARE",
      "target": "BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY",
      "weight": 8.0,
      "description": "\"Exploiting vulnerabilities in IP communication firmware allows unauthorized access and control through certain impulses as a postcondition.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "INCONSISTENT MEMORY ACCESS CONTROL",
      "target": "CVE-2019-11157 (PLUNDERVOLT)",
      "weight": 6.0,
      "description": "\"Inconsistent memory access control is a prerequisite for exploiting vulnerabilities in power management interfaces.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "MANUFACTURING AND OPERATIONAL DEFECTS",
      "target": "SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS",
      "weight": 6.0,
      "description": "\"Semiconductor defects occurring during manufacturing or operational use can compromise the security objectives of hardware modules containing such flaws.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS",
      "target": "TUNABLE REPLICA CIRCUITS (TRCS)",
      "weight": 7.0,
      "description": "\"TRCs are used at the circuit level to mitigate glitch attacks on security-sensitive hardware modules containing semiconductor defects.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1ea2cd26ef91f5c526781b17429acd7f"
    },
    {
      "source": "CLFLUSH INSTRUCTION EXPLOIT",
      "target": "ROWHAMMER VULNERABILITY",
      "weight": 9.0,
      "description": "\"The CLFLUSH instruction exploit leverages the Rowhammer vulnerability to perform bit flips in memory.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "VIRTUALIZATION SOFTWARE",
      "target": "HPEG",
      "weight": 18.0,
      "description": "\"The HPEG group exploits vulnerabilities in virtualization software, such as the one documented in CVE-2008-7096.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "FAULTY FSM STATE HANDLING",
      "target": "SYSTEM INSTABILITY AND PRIVILEGE ESCALATION",
      "weight": 6.0,
      "description": "\"Exploiting faulty FSM states can lead to system instability or gaining additional privileges.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "FAULTY FSM STATE HANDLING",
      "target": "UNAUTHORIZED DEBUG SESSIONS",
      "weight": 7.0,
      "description": "\"Exploiting faulty state handling in FSMs can result in unauthorized debug sessions, compromising system security.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "ACCESS CONTROL INADEQUACY IN LINUX KERNEL DRIVER",
      "target": "INFORMATION DISCLOSURE THROUGH SIDE CHANNEL ATTACKS",
      "weight": 8.0,
      "description": "\"The postcondition of information disclosure is a result of exploiting inadequate access controls in the Linux kernel driver.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-494a02c2f9b114781552cc59c3c1dce1"
    },
    {
      "source": "PROCESSOR DESIGN FLAW EXPLOITATION PATTERN",
      "target": "CVE-2008-7096: REMAPPING REGISTER VULNERABILITY",
      "weight": 12.0,
      "description": "\"The processor design flaw exploitation pattern can utilize the vulnerability in remapping registers to achieve its objective.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "PROCESSOR DESIGN FLAW EXPLOITATION PATTERN",
      "target": "COMPROMISE HARDWARE PRODUCT SECURITY",
      "weight": 14.0,
      "description": "\"The tactic to compromise hardware product security is accomplished through employing processor design flaw exploitation patterns.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "PROCESSOR DESIGN FLAW EXPLOITATION PATTERN",
      "target": "PROCESSOR DESIGN FLAW",
      "weight": 7.0,
      "description": "\"The processor design flaw enables the exploitation pattern where ring 0 code can access more privileged rings.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "REGISTER REMAPPING TECHNIQUE",
      "target": "MEMORY-ACCESS-CONTROL FILTER IMPLEMENTATION",
      "weight": 16.0,
      "description": "\"Implementing a memory-access-control filter mitigates the risk of register remapping technique being exploited.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "REGISTER REMAPPING TECHNIQUE",
      "target": "CVE-2008-7096: REMAPPING REGISTER VULNERABILITY",
      "weight": 14.0,
      "description": "\"The register remapping technique can exploit the vulnerability in remapping registers documented by CVE-2008-7096.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION",
      "target": "CRYPTOGRAPHIC PRIMITIVE",
      "weight": 12.0,
      "description": "\"A risky implementation of a cryptographic primitive exposes the system to vulnerabilities due to weak or non-standard algorithms.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "source": "CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION",
      "target": "NON-STANDARD CRYPTOGRAPHY IMPLEMENTATION",
      "weight": 5.0,
      "description": "\"Using non-standard cryptography implementations is one of the main reasons for CWE-1240 vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "source": "CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION",
      "target": "ATTACKER EXPLOITATION OF WEAK ALGORITHMS",
      "weight": 8.0,
      "description": "\"Attackers can exploit weaknesses in risky cryptographic implementations to gain unauthorized access to systems.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "source": "LIMITED-WRITE NON-VOLATILE MEMORIES MANAGEMENT FAILURE",
      "target": "IMPROPER WRITE HANDLING IN NON-VOLATILE MEMORIES",
      "weight": 6.0,
      "description": "\"Failure to manage limited-write non-volatile memories correctly leads directly to improper write handling issues.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "IMPROPER HANDLING OF OVERLAPPING MEMORY REGIONS AND REGISTER ACCESS CONTROL",
      "target": "CVE-2008-7096: REMAPPING REGISTER VULNERABILITY",
      "weight": 5.0,
      "description": "\"Lack of proper handling for overlapping memory regions and improper register access control are prerequisites for the vulnerability in remapping registers to be exploited.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "NON-STANDARD CRYPTOGRAPHY IMPLEMENTATION",
      "target": "CRYPTOGRAPHIC PRIMITIVE EVALUATION",
      "weight": 7.0,
      "description": "\"Ensuring cryptographic algorithms are properly evaluated helps mitigate risks associated with non-standard implementations.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "source": "JTAG ACCESS CONTROL MISMANAGEMENT",
      "target": "CVE-2019-18827",
      "weight": 6.0,
      "description": "\"Improper management of JTAG access control leads directly to the CVE-2019-18827 vulnerability.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "CVE-2008-7096: REMAPPING REGISTER VULNERABILITY",
      "target": "SECURITY-SENSITIVE MODULES IN HARDWARE PRODUCT",
      "weight": 9.0,
      "description": "\"The vulnerability in remapping registers exists within security-sensitive modules of hardware products, making them targets for attacks.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "CVE-2008-7096: REMAPPING REGISTER VULNERABILITY",
      "target": "PROCESSOR DESIGN FLAW ENABLING RING 0 ACCESS TO PRIVILEGED RANGES",
      "weight": 8.0,
      "description": "\"The postcondition of enabling ring 0 access to privileged ranges is an effect of exploiting the vulnerability in remapping registers.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "CVE-2008-7096: REMAPPING REGISTER VULNERABILITY",
      "target": "MEMORY-ACCESS-CONTROL CHECK FILTER",
      "weight": 8.0,
      "description": "\"The memory-access-control check filter mitigates the risk associated with exploiting remapping register vulnerabilities.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "PROCESSOR DESIGN FLAW ENABLING RING 0 ACCESS TO PRIVILEGED RANGES",
      "target": "SINGLE-EVENT UPSET (SEU)",
      "weight": 5.0,
      "description": "\"Single-event upsets can cause temporary bit flips, enabling the processor design flaw exploitation pattern.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "ATTACKER EXPLOITATION OF WEAK ALGORITHMS",
      "target": "ADVERSARIAL ACCESS TO ENCRYPTED DATA",
      "weight": 7.0,
      "description": "\"The postcondition of gaining unauthorized access to encrypted data is a result of exploiting weak algorithms in the cryptographic system.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-a47308ac5873562af0ec6cecb9598b6d"
    },
    {
      "source": "PROCESSOR DESIGN FLAW",
      "target": "SECURITY-SENSITIVE MODULE",
      "weight": 9.0,
      "description": "\"The security-sensitive module in hardware products is susceptible to the processor design flaw, making it a target.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "PRIVILEGE ESCALATION VIA MEMORY OVERLAP EXPLOIT",
      "target": "MALICIOUS AGENT",
      "weight": 18.0,
      "description": "\"A malicious agent uses the technique of exploiting overlapping memory regions to escalate privileges.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-c164a155c6861d928b9e41ab73c39e80"
    },
    {
      "source": "SINGLE-EVENT UPSET (SEU)",
      "target": "TRIPLE MODULAR REDUNDANCY (TMR)",
      "weight": 8.0,
      "description": "\"Triple modular redundancy mitigates the impact of single-event upsets on security-sensitive hardware modules.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "ERROR-CORRECTING CODES (ECC) AND ADDRESS INTERLEAVING",
      "target": "IMPROPER MEMORY-MAPPED I/O REGISTERS",
      "weight": 8.0,
      "description": "\"Implementing ECC and address interleaving mitigates the vulnerability of improperly accessed memory-mapped registers.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-25f73985e28c5422bb14dc5727705f9e"
    },
    {
      "source": "ATTACKER ENTITY (NOT NAMED)",
      "target": "SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG",
      "weight": 8.0,
      "description": "\"An attacker might exploit access to sensitive non-volatile information during debug operations for unauthorized entry.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "ATTACKER ENTITY (NOT NAMED)",
      "target": "UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION",
      "weight": 9.0,
      "description": "\"An attacker may use the technique of exploiting undocumented features/chicken bits on a device.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION",
      "target": "DEVICE WITH UNDOCUMENTED FEATURES/CHICKEN BITS",
      "weight": 7.0,
      "description": "\"Exploiting undocumented features/chicken bits affects devices that contain them, providing unintended access points.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION",
      "target": "DISABLING CHICKEN BITS IN PRODUCTION",
      "weight": 9.0,
      "description": "\"Disabling chicken bits in production mitigates the technique of exploiting them for unauthorized access.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG",
      "target": "PROTECTING SENSITIVE INFORMATION DURING DEBUG OPERATIONS",
      "weight": 8.0,
      "description": "\"Protecting sensitive information during debug operations mitigates the risk associated with accessing security-sensitive data during these times.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG",
      "target": "SECURITY-SENSITIVE INFORMATION (STORED IN FUSES)",
      "weight": 8.0,
      "description": "\"Access to security-sensitive information stored in fuses during debug operations is a direct exploitation of this vulnerability.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "SECURE BOOT PROCESS",
      "target": "PROPER IMPLEMENTATION OF SECURE BOOT AND PROTECTION LOGIC",
      "weight": 7.0,
      "description": "\"A proper implementation ensures a trusted environment for boot processes.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-3d2fd26674527134e3c7fbd5cc806bf4"
    },
    {
      "source": "CVE-2021-3692",
      "target": "MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS",
      "weight": 8.0,
      "description": "\"The vulnerability is due to the usage of mt_rand() function for token generation.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS",
      "target": "SECURE BOOT BYPASSING ATTACK PATTERN",
      "weight": 6.0,
      "description": "\"The secure boot bypass attack pattern leads directly to sensitive information exposure through misconfigured debug access levels.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8"
    },
    {
      "source": "DESIGN CHANGE DURING IMPLEMENTATION PHASE",
      "target": "MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS",
      "weight": 6.0,
      "description": "\"Changes made during implementation phase lead to the use of mt_rand() function, which can be exploited.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS",
      "target": "TRUE RANDOM NUMBER GENERATOR IMPLEMENTATION",
      "weight": 9.0,
      "description": "\"Implementing a true random number generator mitigates the risk associated with using mt_rand() function for token generation.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "SECURE SYSTEM DESIGN IMPLEMENTATION",
      "target": "INCORRECT FUSE VALUES SETTING TECHNIQUE",
      "weight": 16.0,
      "description": "\"Secure system design implementation mitigates the risk of incorrectly setting fuse values and driving systems into insecure states.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-eb3af9cc9df9726a2a72280178b25b2d"
    },
    {
      "source": "MD5 HASH VULNERABILITY (CVE-2005-2946)",
      "target": "MD5 HASH ALGORITHM",
      "weight": 7.0,
      "description": "\"The MD5 hash vulnerability exploits the weaknesses in the MD5 algorithm.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-5d9aa46e1c0b88bd33dd6122a455f98b"
    },
    {
      "source": "MALICIOUS AGENT",
      "target": "UNINTENTIONAL POLICY INSERTION",
      "weight": 18.0,
      "description": "\"A malicious agent uses the technique of unintentionally inserting itself into write policy registers to exploit vulnerabilities.\"<SEP>\"A malicious agent uses the technique of unintentionally inserting itself into write policy registers.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "UNDOCUMENTED DEBUG INTERFACES EXPLOITATION",
      "target": "SECURITY-SENSITIVE INFORMATION STORED IN FUSES",
      "weight": 7.0,
      "description": "\"Exploiting undocumented debug interfaces can lead to unauthorized access to security-sensitive information stored in fuses.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "SECURITY-SENSITIVE INFORMATION STORED IN FUSES",
      "target": "SENSITIVE NON-VOLATILE INFORMATION PROTECTION DURING DEBUG MODE",
      "weight": 8.0,
      "description": "\"Protecting sensitive information during debug operations mitigates potential exposure of security-sensitive data.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0204407c5971063b3d859036310a63a1"
    },
    {
      "source": "CVE-2021-33150 AND CVE-2021-0146 VULNERABILITIES",
      "target": "HARDWARE-SENSOR BLOCKS AND FABRIC END-POINT DEVICES",
      "weight": 9.0,
      "description": "\"These vulnerabilities exist in hardware-sensor blocks and fabric end-point devices, making them susceptible to attacks.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "CVE-2021-33150 AND CVE-2021-0146 VULNERABILITIES",
      "target": "TEST OR DEBUG LOGIC ACTIVATION DURING RUNTIME PATTERN",
      "weight": 7.0,
      "description": "\"The attack pattern exploits vulnerabilities that allow test/debug logic to be activated during runtime.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "MODERN PROCESSORS WITH SHARED RESOURCES",
      "target": "IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE (CWE-1304)",
      "weight": 8.0,
      "description": "\"The improperly preserved integrity vulnerability affects modern processors during power operations, compromising system security.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "MODERN PROCESSORS WITH SHARED RESOURCES",
      "target": "SHARED MICROARCHITECTURAL RESOURCES VULNERABILITY (CWE-1189)",
      "weight": 9.0,
      "description": "\"This vulnerability exists in modern processors that share microarchitectural resources, violating isolation between contexts.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "PREVENT DATA LEAKAGE",
      "target": "INADEQUATE DATA REMOVAL TECHNIQUE",
      "weight": 7.0,
      "description": "\"The tactic of preventing data leakage is achieved through ensuring proper data removal, thus countering inadequate removal techniques.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "INSTRUCTION SEQUENCE EXPLOITATION PATTERN",
      "target": "PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)",
      "weight": 7.0,
      "description": "\"The pattern of exploiting instruction sequences is used to exploit the processor vulnerability leading to CPU hang.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "INSTRUCTION SEQUENCE EXPLOITATION PATTERN",
      "target": "SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION",
      "weight": 9.0,
      "description": "\"Exploiting specific sequences is part of the attack pattern involving dangerous instruction combinations.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "INTEL CHIPSETS AND SIMATIC DEVICES",
      "target": "VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) ",
      "weight": 18.0,
      "description": "\"The vulnerability exists on Intel chipsets and Siemens SIMATIC S7-1200/S7-200 SMART CPU families.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "INTEL CHIPSETS AND SIMATIC DEVICES",
      "target": "SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)",
      "weight": 18.0,
      "description": "\"The vulnerability related to uncleared sensitive information exists on Intel chipsets and Siemens SIMATIC devices.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "SOC AND MICROCONTROLLER HARDWARE",
      "target": "IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS",
      "weight": 9.0,
      "description": "\"Microcontroller hardware and SoCs are targets that can be affected by improper protection mechanisms on physical side channels.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "SENSOR VALUE MANIPULATION LEADING TO DOS OR HARDWARE DAMAGE",
      "target": "CVE-2017-8252 VULNERABILITY",
      "weight": 8.0,
      "description": "\"The postcondition of sensor value manipulation leading to a Denial-of-Service condition is affecting the system due to exploitation of vulnerabilities.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "INCOMPLETE REMOVAL PROCEDURES",
      "target": "SENSITIVE DATA VULNERABILITY",
      "weight": 6.0,
      "description": "\"Incomplete procedures for removing sensitive data are a prerequisite that leads to vulnerabilities in decommissioned devices.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION",
      "target": "RIGOROUS TESTING STRATEGY AND PATCHING",
      "weight": 8.0,
      "description": "\"Testing and patching strategies are aimed at mitigating the risk posed by exploiting specific sequences of instructions in processors.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION",
      "target": "LOSS OF DATA INTEGRITY AND AVAILABILITY",
      "weight": 7.0,
      "description": "\"The tactic of causing loss of data integrity and availability is achieved through exploiting dangerous instruction sequences.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION",
      "target": "PROCESSOR HARDWARE VULNERABILITIES",
      "weight": 7.0,
      "description": "\"The hardware vulnerabilities implement the attack techniques of exploiting dangerous instruction sequences in processors.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "SENSITIVE DATA VULNERABILITY",
      "target": "DATA SCRUBBING FAILURE PATTERN",
      "weight": 7.0,
      "description": "\"The failure to properly implement a data scrubbing pattern leads to the existence of sensitive data vulnerabilities.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "SENSITIVE DATA VULNERABILITY",
      "target": "DECOMMISSIONED DEVICE",
      "weight": 9.0,
      "description": "\"The vulnerability exists due to sensitive data remaining on decommissioned devices, making them targets.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "SENSITIVE DATA VULNERABILITY",
      "target": "DATA ACQUISITION AND EXPLOITATION",
      "weight": 8.0,
      "description": "\"Attackers exploiting the existence of sensitive data leads to further exploitation or data leakage as postconditions.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "ATTACKER (UNDISCLOSED)",
      "target": "IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION",
      "weight": 7.0,
      "description": "\"The attacker could exploit improperly preserved integrity during power save/restore operations to compromise hardware security.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "LOSS OF DATA INTEGRITY AND AVAILABILITY",
      "target": "PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-1999-1476)",
      "weight": 7.0,
      "description": "\"This vulnerability can cause loss of data integrity and system availability when exploited by attackers.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION",
      "target": "CONFIGURATION STATE VERIFICATION DURING POWER SAVE/RESTORE OPERATIONS",
      "weight": 6.0,
      "description": "\"Verifying configuration state integrity is a prerequisite to prevent hardware security breaches during power operations.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION",
      "target": "QUALITY DEGRADATION AND STABILITY ISSUES",
      "weight": 8.0,
      "description": "\"The postcondition of quality degradation and stability issues is a result of exploiting improperly preserved hardware state during power operations.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "IMPROPERLY PRESERVED INTEGRITY ATTACK PATTERN",
      "target": "GAIN PRIVILEGES THROUGH CONFIGURATION ALTERATION",
      "weight": 7.0,
      "description": "\"The tactic of gaining privileges is accomplished through the attack pattern of improperly preserved integrity.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "IMPROPERLY PRESERVED INTEGRITY ATTACK PATTERN",
      "target": "PERSISTENT STORAGE VULNERABILITY",
      "weight": 7.0,
      "description": "\"The attack pattern exploits the persistent storage vulnerability to gain unauthorized access or escalate privileges.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "INSTRUCTION SET ARCHITECTURE BUGS",
      "target": "PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)",
      "weight": 6.0,
      "description": "\"Identifying ISA bugs is a prerequisite for exploiting the vulnerability in AMD CPUs.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "SENSITIVE INFORMATION EXPOSURE THROUGH SIDE CHANNELS",
      "target": "TVLA LEAKAGE DETECTION TESTS AND PENETRATION TESTING",
      "weight": 16.0,
      "description": "\"These tests and attacks mitigate the risk of sensitive information exposure.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "source": "NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES",
      "target": "PARTITIONED CACHES AND BARRIER/FLUSH INSTRUCTIONS",
      "weight": 8.0,
      "description": "\"Partitioned caches and barrier/flush instructions are used to mitigate the vulnerability of non-transparent sharing of microarchitectural resources.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES",
      "target": "MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN",
      "weight": 7.0,
      "description": "\"The attack pattern exploits shared hardware resources violating architectural isolation to leak information between execution contexts.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES",
      "target": "CONFIDENTIALITY VIOLATIONS THROUGH COVERT CHANNELS",
      "weight": 8.0,
      "description": "\"Exploitation leads to confidentiality violations through covert channels leaking sensitive information via shared microarchitecture.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "MALICIOUS ACTOR",
      "target": "INTEGRATED CIRCUIT (IC) IMAGING TECHNIQUES",
      "weight": 18.0,
      "description": "\"A malicious actor uses IC imaging techniques as part of their attack strategy to reverse engineer integrated circuits.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)",
      "target": "PROCESSOR HARDWARE WITH VULNERABLE INSTRUCTIONS",
      "weight": 8.0,
      "description": "\"The processor instruction sequence bug exists in the hardware of affected processors, leading to vulnerabilities.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "UART INTERFACE ACCESS DURING BOOT PROCESS",
      "target": "ATTACKER WITH PHYSICAL ACCESS",
      "weight": 18.0,
      "description": "\"An attacker can use the UART interface access technique to exploit vulnerabilities during the boot process.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "UART INTERFACE ACCESS DURING BOOT PROCESS",
      "target": "MANUFACTURING MODE EXPLOIT",
      "weight": 18.0,
      "description": "\"Accessing the UART interface during boot process is a specific technique used to carry out the manufacturing mode exploit attack pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "UART INTERFACE ACCESS DURING BOOT PROCESS",
      "target": "UNAUTHORIZED ACCESS DURING MANUFACTURING",
      "weight": 14.0,
      "description": "\"The tactic of gaining unauthorized access is accomplished through the attack technique of accessing UART interfaces during boot processes.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY",
      "target": "INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE",
      "weight": 7.0,
      "description": "\"The inadequate data erasure implementation attack technique exploits the insufficient data removal pattern in hardware components.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY",
      "target": "HARDWARE REMANENCE PHENOMENON PRECONDITION VULNERABILITY",
      "weight": 6.0,
      "description": "\"Residual physical characteristics post data removal contribute to insufficient erasure processes leading to sensitive information retrieval vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "ACCESS CONTROL INCONSISTENCY TECHNIQUE",
      "target": "POLICY PRIVILEGES ARE NOT ASSIGNED CONSISTENTLY BETWEEN CONTROL AND DATA AGENTS",
      "weight": 8.0,
      "description": "\"This technique exploits inconsistencies in policy privileges, directly implementing this vulnerability.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "SECURITY TOKEN DECODER REVIEW",
      "target": "ACCESS CONTROL POLICY WEAKNESS",
      "weight": 8.0,
      "description": "\"Reviewing security token decoders aims to mitigate vulnerabilities arising from inconsistent privilege assignments.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "UNSPECIFIED ATTACKER 2",
      "target": "UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA",
      "weight": 8.0,
      "description": "\"An attacker can use unauthorized modification techniques against improperly stored critical security assets.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "INCORRECT SECURITY IDENTIFIER DECODING",
      "target": "DESIGN CONSISTENCY REVIEW AND WEAKNESS IDENTIFICATION IN ARCHITECTURE PHASE",
      "weight": 6.0,
      "description": "\"Reviewing design consistency helps identify common weaknesses during architecture phase.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "source": "INCORRECT SECURITY IDENTIFIER DECODING",
      "target": "REVIEW AND TESTING OF SECURITY IDENTIFIERS DURING IMPLEMENTATION",
      "weight": 8.0,
      "description": "\"Testing and reviewing security identifier decoders mitigate incorrect decoding vulnerabilities.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "source": "INCORRECT SECURITY IDENTIFIER DECODING",
      "target": "EXPLOIT OF ACCESS-CONTROL MISCONFIGURATION DURING IMPLEMENTATION",
      "weight": 7.0,
      "description": "\"An untrusted agent exploits misconfigured security identifiers to gain unauthorized access.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "source": "INCORRECT SECURITY IDENTIFIER DECODING",
      "target": "TESTING ACCESS AND PROGRAMMING FLOWS DURING PRE-SILICON AND POST-SILICON PHASES",
      "weight": 8.0,
      "description": "\"Testing access and programming flows mitigates the risk of incorrect security identifier decoding.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "source": "COUNTERFEIT PRODUCTION",
      "target": "SECRET KEY RECOVERY TECHNIQUE",
      "weight": 14.0,
      "description": "\"The tactic of counterfeit production is accomplished through the secret key recovery technique.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "CONSISTENT POLICY IMPLEMENTATION",
      "target": "POLICY PRIVILEGES ARE NOT ASSIGNED CONSISTENTLY BETWEEN CONTROL AND DATA AGENTS",
      "weight": 7.0,
      "description": "\"Ensuring consistent policy implementation is a tactic that directly counters the vulnerability of inconsistent privileges.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "WRITABLE MEMORY VULNERABILITIES",
      "target": "UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA",
      "weight": 7.0,
      "description": "\"Vulnerabilities in writable memory implement the attack technique allowing for unauthorized modifications.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "MISSING SOURCE IDENTIFIER PRECONDITION VULNERABILITY",
      "target": "PRIVILEGE ESCALATION THROUGH MISSING SECURITY IDENTIFIER TACTIC",
      "weight": 14.0,
      "description": "\"Escalating privileges or providing unintended access through missing security identifiers is a tactic accomplished by exploiting the missing source identifier precondition vulnerability in SoCs.\"<SEP>\"The tactic of escalating privileges through missing security identifiers is accomplished by exploiting the precondition vulnerability in SoC transactions.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "MISSING SOURCE IDENTIFIER PRECONDITION VULNERABILITY",
      "target": "INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE",
      "weight": 12.0,
      "description": "\"Exploitation of missing source identifier precondition vulnerabilities can lead to scenarios where security identifiers are missing, allowing for inadequate data erasure implementations.\"<SEP>\"The missing source identifier precondition vulnerability can be exploited through inadequate data erasure implementation attack techniques to escalate privileges or provide unintended access in a SoC.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "PRIVILEGE DISCREPANCY INCONSISTENCY",
      "target": "ACCESS CONTROL POLICY WEAKNESS",
      "weight": 6.0,
      "description": "\"The inconsistency in privilege assignments is a prerequisite leading to vulnerabilities in hardware-enforced access control policies.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "STORING ASSETS IN WRITABLE MEMORY PATTERN",
      "target": "STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)",
      "weight": 7.0,
      "description": "\"The pattern of improperly storing assets leads to vulnerabilities when attackers can modify immutable data.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "STORING ASSETS IN WRITABLE MEMORY PATTERN",
      "target": "UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA",
      "weight": 9.0,
      "description": "\"Unmodified data stored insecurely is an attack technique that fits into the broader pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "ACCESS CONTROL POLICY WEAKNESS",
      "target": "TRUSTED FIRMWARE OR SOFTWARE MODULES",
      "weight": 9.0,
      "description": "\"Vulnerabilities exist within the trusted firmware and software modules due to inconsistent policy privileges.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "ACCESS CONTROL POLICY WEAKNESS",
      "target": "UNAUTHORIZED ACCESS TO RESOURCES",
      "weight": 8.0,
      "description": "\"Exploiting inconsistent access control policies leads to unauthorized resource access as postconditions.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA",
      "target": "IMMUTABLE CODE AND DATA PROTECTION STRATEGY",
      "weight": 8.0,
      "description": "\"The protection strategy aims to mitigate risks associated with unauthorized modifications in writable memory.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA",
      "target": "COMPROMISED ROOT OF TRUST",
      "weight": 7.0,
      "description": "\"Compromising the root of trust is accomplished through unauthorized modification of immutable data.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "PHYSICAL TAMPERING DETECTION MECHANISM",
      "target": "INVASIVE IC LAYER REMOVAL AND IMAGING",
      "weight": 8.0,
      "description": "\"Detection mechanisms can identify invasive layer removal attacks, providing early warnings or triggering defensive actions.\"",
      "keywords": "\"Detect\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN",
      "target": "DISABLING HIGH-RESOLUTION PERFORMANCE COUNTERS AND TIMERS",
      "weight": 8.0,
      "description": "\"Disabling high-resolution performance counters mitigates the attack pattern by reducing timing precision for leaking sensitive data.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN",
      "target": "HIGH-RESOLUTION PERFORMANCE COUNTERS & TIMERS",
      "weight": 8.0,
      "description": "\"Disabling these timers mitigates timing-based attacks on microarchitectural side-channels.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "MISSING PROTECTION MECHANISM FOR ALTERNATE HARDWARE INTERFACE",
      "target": "ALTERNATE HARDWARE INTERFACE ATTACK PATTERN",
      "weight": 7.0,
      "description": "\"The attack pattern exploits the missing protection mechanism on alternate hardware interfaces.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "DECAPSULATION AND HIGH-RESOLUTION IMAGING PATTERN",
      "target": "SECRET KEY RECOVERY TECHNIQUE",
      "weight": 34.0,
      "description": "\"The decapsulation and high-resolution imaging pattern is implemented through the secret key recovery technique.\"<SEP>\"The secret key recovery technique is a part of the decapsulation and high-resolution imaging pattern.\"",
      "keywords": "\"Implement\"<SEP>\"Same_as\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "ADVERSARIES",
      "target": "VOLATILE MEMORY MANIPULATION",
      "weight": 18.0,
      "description": "\"Adversaries use the attack technique of volatile memory manipulation to exploit the lack of proper access controls.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "source": "LACK OF SECURE STORAGE PRACTICES",
      "target": "STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)",
      "weight": 6.0,
      "description": "\"Poor storage practices are prerequisites for vulnerabilities associated with improper asset storage.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)",
      "target": "PROCESSOR AND MEMORY SYSTEM",
      "weight": 8.0,
      "description": "\"The vulnerability exists within the processor hardware and memory system, affecting secure boot processes.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-31ce69f5b7b26b01bc270585046c09e7"
    },
    {
      "source": "SECURE BOOT PROCESS BYPASS",
      "target": "IMPROPER VOLATILE MEMORY PROTECTION",
      "weight": 14.0,
      "description": "\"The secure boot process bypass is an outcome of improper protections for volatile memory during transfer and execution.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "source": "SECURE BOOT PROCESS BYPASS",
      "target": "VOLATILE MEMORY MANIPULATION",
      "weight": 18.0,
      "description": "\"Manipulating volatile memory directly relates to the attack pattern of bypassing the secure-boot process.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "source": "MISSING SECURITY IDENTIFIER PRIVILEGE ESCALATION POSTCONDITION",
      "target": "INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE",
      "weight": 16.0,
      "description": "\"Escalating privileges or providing unintended access through missing security identifiers is a postcondition resulting from exploiting inadequate data erasure implementation attack techniques.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE (CWE-1304)",
      "target": "PERSISTENT STORAGE VULNERABILITY",
      "weight": 6.0,
      "description": "\"A persistent storage vulnerability is a prerequisite for exploiting improperly preserved hardware configuration state vulnerabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "UNKNOWN ATTACKER",
      "target": "POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE",
      "weight": 14.0,
      "description": "\"An attacker exploits the failure to manage power/debug state transitions, leading to sensitive information exposure.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "UNKNOWN ATTACKER",
      "target": "CREDENTIAL SHARING AMONG MULTIPLE PARTIES",
      "weight": 14.0,
      "description": "\"The attacker takes advantage of shared credentials among multiple parties to gain unauthorized access.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "SHADOW REGISTERS EXPLOITATION",
      "target": "ALTERNATE HARDWARE INTERFACE ATTACK PATTERN",
      "weight": 9.0,
      "description": "\"Exploiting shadow registers is a part of the alternate hardware interface attack pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "SHADOW REGISTERS EXPLOITATION",
      "target": "PROTECTION MECHANISM IMPLEMENTATION",
      "weight": 8.0,
      "description": "\"Implementing protection mechanisms can mitigate the attack technique of exploiting unprotected shadow registers.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "IMPROPER VOLATILE MEMORY PROTECTION",
      "target": "UNAUTHORIZED ACCESS CONTROL",
      "weight": 8.0,
      "description": "\"Proper access controls mitigate improper protection for volatile memory by preventing unauthorized modifications.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-283c54bf2a04113b4e93bd42620f4973"
    },
    {
      "source": "SENSITIVE INFORMATION UNCLEARED BEFORE DEBUG/POWER STATE TRANSITION",
      "target": "POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE",
      "weight": 14.0,
      "description": "\"Failure in state transition management results in the exposure of sensitive information during transitions.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "SENSITIVE INFORMATION UNCLEARED BEFORE DEBUG/POWER STATE TRANSITION",
      "target": "CWE-200: EXPOSURE OF SENSITIVE INFORMATION TO AN UNAUTHORIZED ACTOR",
      "weight": 14.0,
      "description": "\"The tactic of exposing sensitive information is accomplished through vulnerabilities in state transition management.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "DEVICE UNLOCK CREDENTIAL SHARING",
      "target": "MEMORY DUMP CAPABILITY ACTIVATION",
      "weight": 18.0,
      "description": "\"Activation of debug capabilities through unlocked devices is facilitated by credential sharing among parties.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "DEFENSE IN DEPTH IMPLEMENTATION",
      "target": "ALTERNATE HARDWARE INTERFACE ATTACK PATTERN",
      "weight": 8.0,
      "description": "\"Implementing defense in depth can mitigate the risk associated with the alternate hardware interface attack pattern.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "UNDISCLOSED ATTACKER",
      "target": "PERSISTENT STORAGE VULNERABILITY",
      "weight": 7.0,
      "description": "\"An attacker exploits the persistent storage vulnerability to alter configuration states during power save/restore operations.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "RACE CONDITION IN HARDWARE LOGIC",
      "target": "FINITE STATE MACHINES RACE CONDITIONS EXPLOITATION",
      "weight": 14.0,
      "description": "\"This attack pattern involves exploiting race conditions in hardware logic within finite state machines.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "SECURITY IDENTIFIER DECISION-MAKING PROCESS",
      "target": "BUS TRANSACTION SIGNALS MAPPING",
      "weight": 9.0,
      "description": "\"The security identifier decision-making process uses mapped signals incorrectly, leading to unauthorized access.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "CVE-2020-12926",
      "target": "TPM SPECIFICATION COMPLIANCE FAILURE",
      "weight": 6.0,
      "description": "\"Failure to comply with TPM specifications leads to the vulnerability CVE-2020-12926.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "CVE-2020-12926",
      "target": "TPM SPECIFICATION NON-COMPLIANCE",
      "weight": 7.0,
      "description": "\"Failure to comply with TPM specifications leads to the vulnerability CVE-2020-12926.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "ACCESS CONTROL LOGIC RACE CONDITION",
      "target": "FINITE STATE MACHINES RACE CONDITIONS EXPLOITATION",
      "weight": 18.0,
      "description": "\"The specific technique of exploiting access control logic race conditions falls under the broader pattern of finite state machine exploitation.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)",
      "target": "VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) ",
      "weight": 16.0,
      "description": "\"Exploiting vulnerabilities during manufacturing can further expose devices to issues related to uncleared sensitive information.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)",
      "target": "UNINITIALIZED FLIP-FLOPS USED FOR SECURITY-CRITICAL FUNCTIONS (CWE-1271)",
      "weight": 16.0,
      "description": "\"The presence of uninitialized flip-flops can lead to sensitive information not being cleared properly before state transitions.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE",
      "target": "INFORMATION LEAKAGE PREVENTION DURING STATE TRANSITIONS",
      "weight": 16.0,
      "description": "\"Preventive measures against state transition failures can mitigate the risk of sensitive information leakage.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "PRODUCT ADMINISTRATOR",
      "target": "SCRUBBING CAPABILITY",
      "weight": 8.0,
      "description": "\"The Product Administrator uses the scrubbing capability to remove sensitive data from decommissioned devices.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "ADDRESS MAP OVERLAP EXPLOITATION PATTERN",
      "target": "TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE",
      "weight": 18.0,
      "description": "\"The attack technique is part of the pattern involving exploiting overlapping protected and unprotected ranges.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "ADDRESS MAP OVERLAP EXPLOITATION PATTERN",
      "target": "OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY",
      "weight": 14.0,
      "description": "\"The exploitation pattern targets this specific vulnerability in the system address map.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "ACTIVE SHIELDING AGAINST REVERSE ENGINEERING",
      "target": "SECRET KEY RECOVERY TECHNIQUE",
      "weight": 9.0,
      "description": "\"Active shielding defends against the secret key recovery technique by detecting and preventing reverse engineering attempts.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE",
      "target": "ISOLATION OF PROTECTED AND UNPROTECTED RANGES",
      "weight": 16.0,
      "description": "\"Mitigation strategy to prevent misuse by isolating ranges from potential overlap exploitation.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE",
      "target": "BYPASS ACCESS CONTROL",
      "weight": 14.0,
      "description": "\"The tactic of bypassing access control is accomplished through the misconfiguration attack technique.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "SECURE COMMUNICATION BETWEEN OSAT AND CHIPMAKER",
      "target": "CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES",
      "weight": 16.0,
      "description": "\"Mitigating the risk of exposure through secure communication helps protect against unauthorized access during pre-production stages.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "EXTERNAL INTEGRITY CHECK BY TRUSTED AGENT",
      "target": "MISSING PATCH ROM CODE VULNERABILITY",
      "weight": 7.0,
      "description": "\"An external trusted agent's integrity check ensures configuration state integrity, thereby mitigating the risk of vulnerabilities due to unpatchable ROM code.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS",
      "target": "ADVERSARY (NOT NAMED)",
      "weight": 14.0,
      "description": "\"The adversary exploits the vulnerability by monitoring and measuring physical phenomena.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "source": "IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS",
      "target": "PHYSICAL SIDE CHANNEL EXPLOITATION",
      "weight": 7.0,
      "description": "\"Exploiting improper protection mechanisms on physical side channels can lead to sensitive information exposure.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS",
      "target": "BLINDING OR MASKING TECHNIQUES, SHIELDING",
      "weight": 16.0,
      "description": "\"Techniques like blinding/masking and shielding are intended to prevent physical side channels from exposing sensitive data.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-350f1de43053ea2973652d98a983f7fb"
    },
    {
      "source": "INTEGRITY CHECK INSIDE IP",
      "target": "MISSING PATCH ROM CODE VULNERABILITY",
      "weight": 8.0,
      "description": "\"Implementing an integrity check mechanism inside the IP mitigates potential vulnerabilities arising from unpatchable ROM code.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "RESIDUAL CONFIDENTIAL INFORMATION REMOVAL POST-SI TESTS",
      "target": "CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES",
      "weight": 16.0,
      "description": "\"Removing residual confidential information post-silicon mitigates the risk of exposure through debug and test modes.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "STATE TRANSITION SENSITIVE INFO LEAKAGE",
      "target": "CREDENTIAL SHARING RISK",
      "weight": 7.0,
      "description": "\"Credential sharing among multiple parties increases the likelihood of sensitive information leakage during state transitions.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "STATE TRANSITION SENSITIVE INFO LEAKAGE",
      "target": "STATE TRANSITION SECURITY MEASURES",
      "weight": 9.0,
      "description": "\"Implementing security measures can prevent the leakage of sensitive information during state transitions.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "PHYSICAL SIDE CHANNEL EXPLOITATION",
      "target": "IMPLEMENT STRONG PHYSICAL SECURITY MEASURES",
      "weight": 8.0,
      "description": "\"Strong physical security measures mitigate the attack technique of exploiting physical side channels.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-9196c23d4d59b9afbe77c085c568d16b"
    },
    {
      "source": "MINIMAL TEST INTERFACE ACCESS",
      "target": "DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE",
      "weight": 12.0,
      "description": "\"Ensuring minimal access aligns with reducing vulnerabilities associated with accessible debug modes during pre-production stages.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "ADDRESS RANGE CONFIGURATION MISTAKES",
      "target": "OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY",
      "weight": 12.0,
      "description": "\"Incorrect configuration or intentional mistakes by malicious actors can set up conditions for exploiting overlaps in address ranges.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "CREDENTIAL SHARING RISK",
      "target": "DEBUG CAPABILITY ACTIVATION",
      "weight": 8.0,
      "description": "\"Shared credentials facilitate unauthorized activation of debug capabilities, exposing memory dump functionalities.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-48f47fa4c06f4f21169acdc6421f3964"
    },
    {
      "source": "PERSISTENT STORAGE VULNERABILITY",
      "target": "CRYPTO-HASH VERIFICATION",
      "weight": 8.0,
      "description": "\"Crypto-hash verification mitigates the persistent storage vulnerability by ensuring data integrity during power operations.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-d495a786a338efce093592daaa0f2478"
    },
    {
      "source": "OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY",
      "target": "ON-CHIP FABRIC ADDRESS MAP",
      "weight": 18.0,
      "description": "\"The vulnerability exists within the structure of overlapping regions on the system's fabric address map.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY",
      "target": "COMPROMISE OF SYSTEM PROTECTIONS",
      "weight": 16.0,
      "description": "\"System protections are compromised when the vulnerability is exploited through misconfigured overlaps.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-022b88d5b18c3c7a7589c9de7a7a5d1c"
    },
    {
      "source": "HARDWARE-ENFORCED ACCESS CONTROL POLICY",
      "target": "IMPROPER PRIVILEGE HANDLING IN HARDWARE POLICIES PATTERN",
      "weight": 14.0,
      "description": "\"The hardware-enforced access control policy is exploited by an improper handling of privileges as part of the attack pattern.\"<SEP>\"The hardware-enforced access control policy is exploited by improper privilege handling as part of an attack pattern.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "IMPROPER PRIVILEGE HANDLING IN HARDWARE POLICIES PATTERN",
      "target": "UNINTENTIONAL POLICY INSERTION",
      "weight": 18.0,
      "description": "\"The technique of unintentional policy insertion is a specific action within the attack pattern of improper privilege handling.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "IMMUTABLE CODE/DATA PROGRAMMING REQUIREMENT",
      "target": "MUTABLE ATTESTATION MEASUREMENT DATA",
      "weight": 7.0,
      "description": "\"Programming immutable code/data into ROM/write-once memory mitigates the vulnerability of mutable attestation/measurement data.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "source": "UNINTENTIONAL POLICY INSERTION",
      "target": "COMPREHENSIVE TESTING OF ACCESS-CONTROL POLICIES AND FLOWS",
      "weight": 16.0,
      "description": "\"Thorough testing mitigates the risk of unintended policy insertion occurring due to hardware flaws.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "UNINTENTIONAL POLICY INSERTION",
      "target": "MODIFICATION OF DEVICE CONFIGURATION TO GAIN UNAUTHORIZED CONTROL",
      "weight": 14.0,
      "description": "\"The tactic of modifying device configurations for unauthorized control is accomplished through unintentional policy insertion.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "RUNTIME ACTIVATION OF TEST/DEBUG FEATURES",
      "target": "TEST OR DEBUG LOGIC ACTIVATION DURING RUNTIME PATTERN",
      "weight": 9.0,
      "description": "\"Activating test/debug features at runtime is the same as following the attack pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "RUNTIME ACTIVATION OF TEST/DEBUG FEATURES",
      "target": "IMPLEMENTING ACCESS CONTROLS FOR SENSOR BLOCKS",
      "weight": 8.0,
      "description": "\"Access control measures are intended to mitigate the risks associated with activating test/debug features during normal operations.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "RUNTIME ACTIVATION OF TEST/DEBUG FEATURES",
      "target": "NO SPECIFIC SOFTWARE MENTIONED",
      "weight": 7.0,
      "description": "\"Untrusted software may implement or trigger the attack technique of runtime activation of test/debug features.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "RUNTIME ACTIVATION OF TEST/DEBUG FEATURES",
      "target": "ESCALATION OF PRIVILEGES AND INFORMATION DISCLOSURE",
      "weight": 7.0,
      "description": "\"The tactic of privilege escalation or information disclosure can be accomplished through runtime activation of test/debug features.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "UNSPECIFIED ATTACKER GROUP",
      "target": "DEBUG MESSAGE LEAKAGES",
      "weight": 9.0,
      "description": "\"Attackers could exploit the leakage of sensitive information from debug messages to further their attacks.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "PUBLIC KEY REUSE VULNERABILITY",
      "target": "ENCRYPTION HASH VERIFICATION PROCESS",
      "weight": 7.0,
      "description": "\"The encryption hash verification process is exploited due to public key reuse, leading to system compromise.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "PUBLIC KEY REUSE VULNERABILITY",
      "target": "DEBUG MODE FEATURES",
      "weight": 5.0,
      "description": "\"Using the same public key for debug and production modes exposes the debug features to exploitation.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "DEBUG MESSAGE LEAKAGES",
      "target": "ASLR BYPASS EXPLOITATION PATTERN",
      "weight": 8.0,
      "description": "\"Leaked pointer information can be used in ASLR bypass exploitation patterns to simplify protection mechanism bypassing.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "IMPROPER FABRIC ATTRIBUTE TRANSLATION MITIGATION",
      "target": "FABRIC BRIDGE SECURITY ISSUE",
      "weight": 16.0,
      "description": "\"Correcting improper attribute translation mitigates the risk of exploitation leading to privilege escalation or denial of service.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "ASLR BYPASS EXPLOITATION PATTERN",
      "target": "CVE-2021-25476",
      "weight": 8.0,
      "description": "\"The vulnerability can be exploited as part of an ASLR bypass attack pattern.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "ASLR BYPASS EXPLOITATION PATTERN",
      "target": "BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE",
      "weight": 9.0,
      "description": "\"Bypassing protection mechanisms includes using the same techniques as those in ASLR bypass patterns.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "USE DIFFERENT PUBLIC KEYS FOR PRODUCTION AND DEBUGGING",
      "target": "ENCRYPTION HASH VERIFICATION PROCESS",
      "weight": 8.0,
      "description": "\"Using different keys mitigates the risk of an attacker compromising the verification process.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "DEBUG MODE EXPLOITATION PRECONDITION",
      "target": "PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY",
      "weight": 12.0,
      "description": "\"Exploitation requires the existence of debug modes and their vulnerabilities as prerequisites.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE",
      "target": "VULNERABILITY ID: HWPSIRT-2019-10114 ",
      "weight": 7.0,
      "description": "\"The attack technique can be used to exploit vulnerabilities leading to unauthorized access and sensitive information exposure.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE",
      "target": "UNAUTHORIZED SYSTEM ACCESS TACTIC",
      "weight": 7.0,
      "description": "\"Gaining unauthorized system access is accomplished through the execution of an attack technique that bypasses existing protections.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE",
      "target": "ACCESS CONTROL MEASURES REVIEW",
      "weight": 8.0,
      "description": "\"Enhancing access control measures can mitigate the risk of attackers successfully executing the attack technique to bypass protection mechanisms.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY",
      "target": "UNINTENTIONAL EXPOSURE AND COMPROMISE OF RESOURCES POSTCONDITION",
      "weight": 16.0,
      "description": "\"Exploitation leads to unintended exposure or compromise of resources, affecting system integrity.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY",
      "target": "TRUSTED FIRMWARE AND SOFTWARE MODULES WITH ACCESS TO CRITICAL RESOURCES",
      "weight": 18.0,
      "description": "\"The vulnerability exists within access control policies governing critical resources, making them susceptible to exploitation.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "IMPLEMENTING FIRMWARE UPDATE MECHANISMS",
      "target": "EXPLOITATION OF NON-UPDATEABLE FIRMWARE",
      "weight": 8.0,
      "description": "\"Updating the firmware can mitigate the attack technique by addressing its exploit.",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "PROTOCOL CONVERSION BRIDGE",
      "target": "BUS TRANSACTION SIGNALS MAPPING",
      "weight": 7.0,
      "description": "\"Improper protocol conversion can lead to incorrect signal mapping and unauthorized access.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "EXPLOITATION OF NON-UPDATEABLE FIRMWARE",
      "target": "FIRMWARE UPDATE CAPABILITY ABSENCE",
      "weight": 7.0,
      "description": "\"The attack technique exploits the absence of firmware update capability as a vulnerability.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "EXPLOITATION OF NON-UPDATEABLE FIRMWARE",
      "target": "GAINING UNAUTHORIZED ACCESS",
      "weight": 7.0,
      "description": "\"Unauthorized access is gained through exploiting non-updatable firmware vulnerabilities.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "EXPLOITATION OF NON-UPDATEABLE FIRMWARE",
      "target": "PERSISTENT SECURITY RISK DUE TO FIRMWARE VULNERABILITIES",
      "weight": 8.0,
      "description": "\"Postconditions include persistent security risks due to non-updatable firmware vulnerabilities.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "INCORRECT DEBUG COMPONENT CHAINING AND GRANULARITY",
      "target": "VULNERABILITY ID: HWPSIRT-2019-10114 ",
      "weight": 6.0,
      "description": "\"Improper chaining or granularity of debug components can lead to vulnerabilities that attackers might exploit.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "PROPER PROTOCOL TRANSLATION IMPLEMENTATION",
      "target": "BUS TRANSACTION SIGNALS MAPPING",
      "weight": 8.0,
      "description": "\"Correctly implementing protocol translation helps prevent the misuse of bus transaction signals.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "SOFTWARE UPDATE MECHANISM FAILURE",
      "target": "LACK OF FIRMWARE UPDATABILITY PATTERN",
      "weight": 8.0,
      "description": "\"A failure in the software update mechanism can lead to a lack of firmware upgradability pattern.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "OCP PROTOCOL SECURITY BREACH",
      "target": "ADVERSARY",
      "weight": 7.0,
      "description": "\"An adversary can exploit improperly translated MReqInfo and SRespInfo signals to bypass access control mechanisms and escalate privileges.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "VULNERABILITY ID: HWPSIRT-2019-10114 ",
      "target": "CHIPS AND SMARTPHONES WITH DEBUG COMPONENTS",
      "weight": 9.0,
      "description": "\"The vulnerability exists in devices containing debug components due to improper design or security practices.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "VULNERABILITY ID: HWPSIRT-2019-10114 ",
      "target": "SENSITIVE INFORMATION EXPOSURE AND UNAUTHORIZED ACCESS",
      "weight": 8.0,
      "description": "\"Exploitation of the vulnerability results in unauthorized access and exposure of sensitive information, affecting device security.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "PRODUCT RELEASED IN NON-RELEASE CONFIGURATION ATTACK PATTERN",
      "target": "DEBUG MODE EXPLOITATION TECHNIQUE",
      "weight": 9.0,
      "description": "\"The technique involves exploiting debug mode capabilities during the release of insecure pre-production versions.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "AHB PROTOCOL IMPLEMENTATION",
      "target": "BRIDGE FOR PROTOCOL CONVERSION",
      "weight": 9.0,
      "description": "\"A bridge between AHB and OCP protocols is implemented to facilitate protocol conversion.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "AXPROT SIGNAL MISINTERPRETATION",
      "target": "ADVERSARY",
      "weight": 7.0,
      "description": "\"An adversary can exploit improperly translated AxPROT signals to bypass access control mechanisms and escalate privileges.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "NON-UPGRADED FIRMWARE IN HARDWARE DEVICES",
      "target": "FIRMWARE VULNERABILITY DUE TO NON-UPGRADE",
      "weight": 18.0,
      "description": "\"The firmware vulnerability due to non-upgrade exists within non-updated firmware in hardware devices.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "VULNERABILITY DISCOVERY WITHOUT UPDATABILITY",
      "target": "FIRMWARE UPDATE CAPABILITY ABSENCE",
      "weight": 6.0,
      "description": "\"The inability to update firmware makes devices vulnerable even after discovery of flaws.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "FABRIC BRIDGE SECURITY ISSUE",
      "target": "ADVERSARY",
      "weight": 14.0,
      "description": "\"An adversary can exploit improperly translated security attributes to bypass access control and escalate privileges in a SoC.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "CVE-2021-25476",
      "target": "INCORRECT CHAINING OR GRANULARITY OF DEBUG COMPONENTS",
      "weight": 8.0,
      "description": "\"Improperly chained debug components contribute to vulnerabilities like CVE-2021-25476.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "INCORRECT SECURITY TOKENS GENERATION (CWE-1270)",
      "target": "INSECURE STATE DUE TO UNINITIALIZED VALUES (CWE-1271)",
      "weight": 16.0,
      "description": "\"Exploiting vulnerabilities like incorrect token generation can exacerbate issues caused by uninitialized values.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "INCORRECT SECURITY TOKENS GENERATION (CWE-1270)",
      "target": "TARGET ENTITY",
      "weight": 16.0,
      "description": "\"Security Token generation issues impact the overall security of target entities like Intel chipsets and SIMATIC devices.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "PROTECTION THROUGH IC CAMOUFLAGING",
      "target": "SECRET KEY RECOVERY TECHNIQUE",
      "weight": 16.0,
      "description": "\"IC camouflaging mitigates against the secret key recovery technique by making reverse engineering more challenging.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "CVE-2020-24491",
      "target": "SENSITIVE DEBUG INFORMATION EXPOSURE",
      "weight": 7.0,
      "description": "\"Exploiting this vulnerability leads to exposure of sensitive debug information, affecting system security.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "ACTIVATION WINDOW FOR DEBUG FEATURES",
      "target": "ADVERSARY EXPLOITING TEST/DEBUG FEATURES",
      "weight": 6.0,
      "description": "\"The attack pattern involves exploiting an activation window to activate test/debug features unauthorized.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "source": "CONFIGURE HARDWARE FOR SAFE OPERATION",
      "target": "TEST AND DEBUG FEATURES IN HARDWARE",
      "weight": 7.0,
      "description": "\"Mitigating risk by configuring hardware to only allow debug/test modes during safe phases.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "source": "CVE-2017-18326",
      "target": "SENSITIVE DEBUG INFORMATION EXPOSURE",
      "weight": 6.0,
      "description": "\"This vulnerability can lead to the leakage of cryptographic keys during debugging, compromising system integrity.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "TAMPER-PROOF PACKAGING IMPLEMENTATION",
      "target": "HIGH-RESOLUTION X-RAY MICROSCOPY TECHNIQUE",
      "weight": 8.0,
      "description": "\"Tamper-proof packaging mitigates against high-resolution x-ray microscopy attacks by obstructing detailed imaging.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "INCORRECT CHAINING OR GRANULARITY OF DEBUG COMPONENTS",
      "target": "APPROPRIATE POST-SI TESTS",
      "weight": 9.0,
      "description": "\"Post-manufacturing tests can mitigate the risk of improperly chained debug components leading to vulnerabilities.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-f6f4c668b2aeaa26c41427011a11b6d8"
    },
    {
      "source": "BRIDGE FOR PROTOCOL CONVERSION",
      "target": "OCP PROTOCOL IMPLEMENTATION",
      "weight": 8.0,
      "description": "\"The bridge implements the necessary conversions from OCP to AHB as part of its operation.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "SECURE PATCH SUPPORT IMPLEMENTATION",
      "target": "MISSING PATCH ROM CODE VULNERABILITY",
      "weight": 16.0,
      "description": "\"Implementing secure patch support mitigates the risk of exploiting missing ROM code patching mechanisms.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "ENSURING MANUFACTURING COMPLETE STAGE MARKERS ARE UPDATED",
      "target": "PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY",
      "weight": 8.0,
      "description": "\"Preventing products from being released prematurely by ensuring proper manufacturing process completion mitigates this vulnerability.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "UNAUTHORIZED SYSTEM CONFIGURATION MODIFICATION POSTCONDITION",
      "target": "PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY",
      "weight": 8.0,
      "description": "\"Exploitation leads to unauthorized modifications of system configurations affecting security and integrity.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "CVE-2020-9054",
      "target": "EXPLOITATION THROUGH COMMAND INJECTION ATTACK",
      "weight": 7.0,
      "description": "\"The command injection vulnerability is exploited through the attack technique of injecting unauthorized commands into a non-updatable firmware system.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "MANUFACTURING MODE EXPLOIT",
      "target": "VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) ",
      "weight": 14.0,
      "description": "\"The attack pattern exploits the vulnerability present in devices running in manufacturing mode.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE",
      "target": "INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT ATTACK PATTERN",
      "weight": 7.0,
      "description": "\"The inadequate data erasure implementation attack technique is used to carry out attacks exploiting the insufficient data removal pattern, targeting hardware components.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE",
      "target": "BLINDING/MASKING CRYPTOGRAPHIC ALGORITHM PROTECTION MITIGATION",
      "weight": 16.0,
      "description": "\"Blinding or masking cryptographic algorithm protection mitigations are intended to mitigate the risk of inadequate data erasure implementation attack techniques targeting hardware components.\"<SEP>\"Recommendations such as blinding/masking cryptographic algorithms help mitigate risks associated with inadequate data erasure implementations.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-8912ca8aa61aec55c4d1970fc938d6b9"
    },
    {
      "source": "WEAK KEY GENERATION VULNERABILITY",
      "target": "EXPLOITATION THROUGH WEAK KEY GENERATION ATTACK",
      "weight": 7.0,
      "description": "\"This vulnerability can be targeted via an attack that leverages weak keys for gaining unauthorized access to devices with unpatchable firmware.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "MANUFACTURING MODE PATCHING",
      "target": "VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) ",
      "weight": 16.0,
      "description": "\"Patching the vulnerability mitigates the risk of unauthorized access during manufacturing mode exploitation.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "INSECURE SECURITY IDENTIFIER MECHANISM",
      "target": "SOC (SYSTEM-ON-CHIP)",
      "weight": 18.0,
      "description": "\"This vulnerability exists in the SoC's implementation of its security identifier mechanism.\"",
      "keywords": "\"Exist_in\"",
      "source_id": "chunk-87fc8cd680673c7b0399cfaa4acf73d6"
    },
    {
      "source": "FIRMWARE UPDATE MECHANISM ABSENCE",
      "target": "GAIN UNAUTHORIZED CONTROL OVER DEVICES",
      "weight": 8.0,
      "description": "\"The inability to update firmware leads directly to a tactic of attackers attempting to gain unauthorized control over these devices.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "FIRMWARE UPDATE MECHANISM ABSENCE",
      "target": "DESIGN REQUIREMENTS IGNORING UPDATES",
      "weight": 6.0,
      "description": "\"Omitting requirements for update mechanisms during product design leads to the absence of these capabilities in devices.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "UNINITIALIZED FLIP-FLOPS USED FOR SECURITY-CRITICAL FUNCTIONS (CWE-1271)",
      "target": "PHYSICAL ACCESS AND TECHNICAL SKILLS",
      "weight": 12.0,
      "description": "\"Having physical access and technical skills can allow attackers to exploit the presence of uninitialized flip-flops.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "INVASIVE IC LAYER REMOVAL AND IMAGING",
      "target": "SECRET KEY RECOVERY TECHNIQUE",
      "weight": 8.0,
      "description": "\"Invasive layer removal and imaging are part of the secret key recovery technique used to access hardware secrets.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "DEBUG MESSAGES REVEALING UNNECESSARY INFORMATION",
      "target": "UNNECESSARY DEBUG INFORMATION DISCLOSURE",
      "weight": 16.0,
      "description": "\"The postcondition where unnecessary information is disclosed due to vulnerabilities in debug messages.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-87fc8cd680673c7b0399cfaa4acf73d6"
    },
    {
      "source": "EXPLOITATION THROUGH COMMAND INJECTION ATTACK",
      "target": "PERMANENT SECURITY RISK DUE TO NON-UPDATABLE FIRMWARE",
      "weight": 8.0,
      "description": "\"This attack technique results in long-term security risks because affected firmware cannot be updated or patched.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "IC REVERSE ENGINEERING CAPABILITY",
      "target": "FIRMWARE VULNERABILITY DUE TO NON-UPGRADE",
      "weight": 12.0,
      "description": "\"Having the capability for IC reverse engineering is a prerequisite for exploiting firmware vulnerabilities in non-upgraded hardware devices.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "SECRET EXTRACTION AND COUNTERFEIT PRODUCTION",
      "target": "FIRMWARE VULNERABILITY DUE TO NON-UPGRADE",
      "weight": 16.0,
      "description": "\"The postcondition of secret extraction and counterfeit production is a result of exploiting the firmware vulnerability due to non-upgrade.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "FIRMWARE VULNERABILITY DUE TO NON-UPGRADE",
      "target": "SECRET KEY RECOVERY TECHNIQUE",
      "weight": 14.0,
      "description": "\"The secret key recovery technique exploits the firmware vulnerability due to non-upgrade in hardware devices.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "EXPLOITATION THROUGH WEAK KEY GENERATION ATTACK",
      "target": "PERMANENT SECURITY RISK DUE TO NON-UPDATABLE FIRMWARE",
      "weight": 8.0,
      "description": "\"This attack on weak key generation results in persistent security risks due to non-updatable firmware.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-bc102d9f54bb50e60fe4796c747399e3"
    },
    {
      "source": "CHIPMAKER",
      "target": "MALICIOUS INSIDER AT OSAT FACILITY",
      "weight": 14.0,
      "description": "\"The chipmaker faces risk from malicious insiders within OSAT facilities who could exploit vulnerabilities.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "HIGH-RESOLUTION X-RAY MICROSCOPY TECHNIQUE",
      "target": "SECRET KEY RECOVERY TECHNIQUE",
      "weight": 8.0,
      "description": "\"The high-resolution x-ray microscopy technique is an attack method that supports the secret key recovery technique.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-1fafa91fe4e5dff2ece171cb782b7c74"
    },
    {
      "source": "IMPROPER ACCESS CONTROL IN FABRIC BRIDGE ATTACKER",
      "target": "UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE",
      "weight": 9.0,
      "description": "\"The attacker uses the technique of executing unauthorized transactions to exploit improper access control in the fabric bridge.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "ACCESS CONTROL CHECK IMPLEMENTATION SOFTWARE",
      "target": "PROPER ACCESS CONTROL IN FABRIC BRIDGE MITIGATION",
      "weight": 8.0,
      "description": "\"This software solution is used as part of mitigation efforts to properly implement and enforce access control checks in the fabric bridge.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "IMPROPER FABRIC BRIDGE ACCESS CONTROL PATTERN",
      "target": "IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)",
      "weight": 7.0,
      "description": "\"The improper fabric bridge access control pattern exploits a vulnerability where AHB bridges do not require authentication for arbitrary read and write access.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "IMPROPER FABRIC BRIDGE ACCESS CONTROL PATTERN",
      "target": "UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE",
      "weight": 9.0,
      "description": "\"Executing unauthorized transactions is the same as exploiting improper fabric bridge access controls in this context.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "NON-DISCLOSURE AGREEMENTS (NDAS)",
      "target": "SECURITY VULNERABILITY IN IT SYSTEM OF OSAT FACILITY",
      "weight": 16.0,
      "description": "\"NDAs aim to mitigate the risks associated with security vulnerabilities in OSAT vendors' IT systems.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE",
      "target": "PROPER ACCESS CONTROL IN FABRIC BRIDGE MITIGATION",
      "weight": 8.0,
      "description": "\"Mitigations against executing unauthorized transactions involve implementing proper access control checks in the fabric bridge.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE",
      "target": "BYPASS SECURITY MECHANISM TACTIC",
      "weight": 7.0,
      "description": "\"The tactic of bypassing security mechanisms is accomplished through the attack technique of unauthorized transaction execution.\"",
      "keywords": "\"Accomplish\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "SECURITY VULNERABILITY IN IT SYSTEM OF OSAT FACILITY",
      "target": "DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE",
      "weight": 12.0,
      "description": "\"Accessible debug modes create a precondition for exploiting system vulnerabilities during pre-production stages.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "BUS TRANSACTION SIGNALS MAPPING",
      "target": "INCORRECT SECURITY IDENTIFIER MAPPING VULNERABILITY",
      "weight": 6.0,
      "description": "\"Improper mapping of bus transaction signals exploits the vulnerability by allowing unauthorized access.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-7acaf7b7bfc562c3e9176c41d3a30307"
    },
    {
      "source": "PHYSICAL ACCESS AND TECHNICAL SKILLS",
      "target": "VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) ",
      "weight": 12.0,
      "description": "\"Having physical access to the device and technical skills are prerequisites for exploiting vulnerabilities during manufacturing mode.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE",
      "target": "CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES",
      "weight": 16.0,
      "description": "\"The unauthorized exposure of confidential information is an outcome when debug modes are not properly secured during early production stages.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-c69cdc2b358db3947b3aef626dc12322"
    },
    {
      "source": "VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) ",
      "target": "INSECURE STATE DUE TO UNINITIALIZED VALUES (CWE-1271)",
      "weight": 16.0,
      "description": "\"Exploiting vulnerabilities during manufacturing mode can result in an insecure state due to uninitialized values.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-413f231b6fa3e23dd4a25e4c2ca5b59e"
    },
    {
      "source": "LACK OF ACCESS CONTROL CHECKS PRECONDITION",
      "target": "IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)",
      "weight": 6.0,
      "description": "\"The lack of proper access control checks is a prerequisite for exploiting the vulnerability in AHB bridges.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "INCOMPLETE MANUFACTURING PROCESS PRECONDITION",
      "target": "PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY",
      "weight": 6.0,
      "description": "\"The existence of an incomplete manufacturing process is a prerequisite for the vulnerability to occur.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-5c85b903657707af65465947038efc98"
    },
    {
      "source": "IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)",
      "target": "UNAUTHORIZED ACCESS OR MALICIOUS ACTIVITY POSTCONDITION",
      "weight": 8.0,
      "description": "\"Exploiting the improper security vulnerability leads to unauthorized access or malicious activities within the SoC.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-af35a9635813405deb7665cfe32b1124"
    },
    {
      "source": "MISSING PATCH ROM CODE VULNERABILITY",
      "target": "ADVERSARY",
      "weight": 14.0,
      "description": "\"An adversary exploits the lack of patching mechanisms in ROM code to reduce maintainability and reliability, compromising the target SoC.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "BUS TRANSACTION SECURITY IDENTIFIERS",
      "target": "SECURITY IDENTIFIER DECODER",
      "weight": 9.0,
      "description": "\"The security identifier decoder is used to decode bus transactions for asset access control decisions.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "source": "HPROT SIGNAL MISINTERPRETATION",
      "target": "ADVERSARY",
      "weight": 7.0,
      "description": "\"An adversary can exploit improperly translated HPROT signals to bypass access control mechanisms and escalate privileges.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-0337a559ab513922c912320a5f53afbf"
    },
    {
      "source": "ADVERSARY",
      "target": "MUTABLE ATTESTATION MEASUREMENT DATA",
      "weight": 8.0,
      "description": "\"The adversary exploits mutable attestation/measurement data to spoof measurement results.\"",
      "keywords": "\"Exploit\"",
      "source_id": "chunk-2a08effb4baf9d8f8c63cdfd2d107514"
    },
    {
      "source": "ADVERSARY",
      "target": "EXTERNAL DEBUGGER",
      "weight": 8.0,
      "description": "\"An adversary uses an external debugger to exploit the lack of protection in the firewall.\"",
      "keywords": "\"Use\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "source": "LACK OF PROTECTION FOR MIRRORED MEMORY REGIONS",
      "target": "FABRIC FIREWALL VULNERABILITY",
      "weight": 7.0,
      "description": "\"The lack of protection is a prerequisite for exploiting the fabric firewall vulnerability.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "source": "UNAUTHORIZED MEMORY MODIFICATION AND DATA LEAKAGE",
      "target": "FABRIC FIREWALL VULNERABILITY",
      "weight": 8.0,
      "description": "\"Unauthorized memory modification and data leakage are consequences of exploiting the lack of protection in mirrored regions.\"",
      "keywords": "\"affecting\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    },
    {
      "source": "LACK OF WRITE PROTECTION FOR PARAMETRIC DATA VALUES",
      "target": "CVE-1314 AND CVE-2017-8252 VULNERABILITIES",
      "weight": 6.0,
      "description": "\"The lack of write protection is a precondition that contributes to the exploitation of vulnerabilities affecting parametric data values and fabric end-point capabilities.\"",
      "keywords": "\"premise\"",
      "source_id": "chunk-3fe4ba5efb195ee3e2e5da2589957c0b"
    },
    {
      "source": "DATA SCRUBBING FAILURE PATTERN",
      "target": "INADEQUATE DATA REMOVAL TECHNIQUE",
      "weight": 9.0,
      "description": "\"An inadequate removal technique is part of the broader data scrubbing failure pattern.\"",
      "keywords": "\"Same_as\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "INADEQUATE DATA REMOVAL TECHNIQUE",
      "target": "POLICY IMPLEMENTATION AND REVIEW",
      "weight": 8.0,
      "description": "\"Regular policy reviews and implementation aim to mitigate the risk posed by inadequate data removal techniques.\"",
      "keywords": "\"Mitigate\"",
      "source_id": "chunk-0389a2e07ed94570629739162785392c"
    },
    {
      "source": "ERROR INJECTION TECHNIQUE",
      "target": "TEST AND DEBUG FEATURES IN HARDWARE",
      "weight": 8.0,
      "description": "\"Adversaries use error injection as a technique on hardware with active debug/test features.\"",
      "keywords": "\"Implement\"",
      "source_id": "chunk-44164e668381aa7c1f320b2f14a0925f"
    }
  ]
}