<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="source_id" attr.type="string"/>
<key id="d5" for="edge" attr.name="keywords" attr.type="string"/>
<key id="d4" for="edge" attr.name="description" attr.type="string"/>
<key id="d3" for="edge" attr.name="weight" attr.type="double"/>
<key id="d2" for="node" attr.name="source_id" attr.type="string"/>
<key id="d1" for="node" attr.name="description" attr.type="string"/>
<key id="d0" for="node" attr.name="entity_type" attr.type="string"/>
<graph edgedefault="undirected"><node id="&quot;HARDWARE DESIGN REVIEW FOR ZEROIZATION MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Security teams should review and ensure proper mechanisms for clearing sensitive information stored in hardware registers."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;CLEARING LOCK BITS AND EXPLOITING RACE CONDITIONS &quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Adversaries may attempt to clear lock bits or exploit race conditions in the security mechanisms as prerequisites for carrying out attacks."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SECURITY TESTING AND COMPLIANCE REVIEW MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Conducting thorough testing and ensuring compliance with security standards like FIPS-140-2 to mitigate vulnerabilities."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;SECURITY-SENSITIVE SETTINGS INITIALIZATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"The default values of these security-sensitive settings need to be defined as part of the design review phase."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;SECURITY LOCK BIT PROTECTION SOFTWARE TOOL&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Tool designed to prevent unauthorized access and modification of system configuration through security lock bit protections."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;TRUSTED FIRMWARE/BOOTLOADER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The trusted firmware or software module that initializes system settings during hardware reset, setting lock bits and other secure configurations."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;MEMORY MANAGEMENT FAILURE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Improperly clearing memory before reuse can lead to sensitive information being exposed."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;UNAUTHORIZED ACTORS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Unauthorized actors can intercept and read cleartext transmissions of sensitive information over communication channels."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;BYPASSING SECURITY LOCK BITS ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting the design flaw that allows bypassing the protection mechanism on hardware's security lock bits."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;ADVERSARY (ATTACKER)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An entity that may exploit weaknesses in hardware lock bits to modify system configuration settings."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;CWE-226:INCORRECT DEFAULT PERMISSIONS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Installed file permissions are set in a way that allows anyone to modify the files, leading to potential unauthorized access."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;MONITORING TOOLS (E.G., TRUSS, STRACE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Monitoring tools are used to examine a software's interaction with the operating system and network in real-time or from recorded data dumps."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;ACCESSING SENSITIVE INFORMATION VIA REGISTER BYPASS TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic is to access sensitive information through improperly zeroized hardware registers."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;UNAUTHORIZED DATA ACCESS THROUGH DEBUG INTERFACE EXPLOITATION&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves gaining unauthorized access to internal data through improperly managed debug interfaces during system execution."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;SNIFFING NETWORK TRAFFIC&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves unauthorized actors intercepting cleartext transmissions of sensitive information over communication channels."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;CLEARING SENSITIVE INFORMATION FROM REGISTERS SOFTWARE TOOL&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A tool or mechanism used by attackers or security teams to clear sensitive data from hardware registers."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;SYSTEM CONFIGURATION INITIALIZATION PHASE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The initial boot phase during which system configuration settings are set to secure values and hardware protections are applied."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;CLEARTEXT TRANSMISSION EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Unauthorized actors exploit the lack of encryption in transmitted data to read and misuse sensitive information."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;BYPASSING SECURITY LOCK BIT PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where an adversary seeks to bypass security measures implemented through hardware lock bits to modify system configurations."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;CWE ID 284: IMPROPER LOCKING AFTER POWER TRANSITION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where the protection mechanism fails to maintain lock bit status across power state transitions, allowing for reprogramming."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Hardware registers do not properly clear sensitive information when a user changes, leading to potential exposure of data."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;USE ENCRYPTION FOR DATA TRANSMISSION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing strong encryption protocols mitigates the risk of unauthorized access to cleartext transmissions."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;SENSITIVE INFORMATION EXPOSURE &quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of exposing sensitive information through vulnerabilities in various products or services."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where hardware lock bit protections are ineffective, allowing unauthorized modifications of system configurations even when locks should be set."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;MAINTAIN CONFIDENTIALITY AND INTEGRITY&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves ensuring that sensitive data remains confidential and its integrity is maintained during transmission."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;BROWSER FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2005-0918) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Browsers allow attackers to infer file existence based on how quickly the page stops loading after setting src properties."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;OWASP TOP TEN 2007 A8 INSECURE CRYPTOGRAPHIC STORAGE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Guidelines provided by OWASP to improve secure storage practices for cryptographic material."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;CLEARING RESOURCES BEFORE REUSE &quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation technique involves clearing sensitive information from released resources before reuse to prevent leakage of data."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO CONFIGURATION INFORMATION TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves gaining unauthorized access to system configuration information for malicious purposes."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;LACK OF ENCRYPTION OR INSECURE PERMISSIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A lack of encryption or insecure permissions on files are prerequisites for unauthorized actors to exploit cleartext transmissions."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;PRODUCT RESOURCE HANDLING ISSUES &quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Various products and services have issues with resource handling, leading to potential information leakage vulnerabilities."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;HDL CODE (HARDWARE DESCRIPTION LANGUAGE)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The HDL code in the hardware description language, which defines default register values and configurations in hardware units."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Various vulnerabilities that permit unauthorized access or information loss due to insecure file permissions."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;FILE EXISTENCE INFOLEAK THROUGH VIRTUAL MACHINE (CVE-2000-1117) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Virtual machine vulnerabilities allow attackers to infer file existence on a client system."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES &quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves using debug modes or internal features of hardware systems to override lock protections and change system configuration settings."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;INFORMATION LOSS AND UNAUTHORIZED ACCESS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploitation of the vulnerability results in unauthorized access to sensitive data, leading to potential misuse."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;BRUTE FORCE PASSWORD GUESSING ATTACK &quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique used by attackers to systematically guess user passwords based on error message differences."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;MODIFICATION OF SYSTEM CONFIGURATION FOR UNAUTHORIZED ACCESS &quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves changing system configurations to gain unauthorized access or modify protected settings within hardware systems."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SSL TIMING ATTACK VULNERABILITY (CVE-2003-0078) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The SSL implementation reveals information about the correctness of padding through timing discrepancies."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Various communication channels can be targets for interception and misuse due to insecure practices."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;GRANULARITY ISSUE IN ADDRESS REGION PROTECTION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Hardware designs may have a large address region protected by the same lock bit, creating conflicts between functional and security requirements."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;IMPROPER PREVENTION OF LOCK BIT MODIFICATION SOFTWARE MODULE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software module or firmware that improperly fails to prevent lock bits from being modified after initial configuration during hardware reset."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;WORLD-WRITABLE EXECUTABLES (CVE-2005-1941)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Executable files installed with world-writable permissions can be modified by unauthorized users."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability arises from the absence of unique identifiers for components within a System-on-Chip (SoC), making it difficult to enforce proper security policies and authentication."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;REVIEWING DESIGN CONSISTENCY &quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Ensuring that the design of the lock bit mechanism is consistent and free from common weaknesses before deployment."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;DETECTION OF PHYSICAL ATTACKS PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition includes the detection of physical attacks on the product or a change in operating mode which can lead to unauthorized access."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;WORLD-WRITABLE LOG FILES (CVE-2001-1550)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Log files installed with world-writable permissions can be altered or deleted by unauthorized users."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;POWER STATE TRANSITIONS TESTING &quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Testing security lock bits across power state transitions to ensure they are effective in preventing unauthorized modifications."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;CWE-573 MISSING CRYPTOGRAPHIC STEP&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A product that lacks an essential step in its cryptographic algorithm can lead to weaker encryption than advertised."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;PORT FILTERING MECHANISM VULNERABILITY (CVE-2002-0514) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Product's port filtering mechanism reveals filtered ports through differential response times or TTL values."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;INSECURE PERMISSIONS FOR SHARED SECRET KEY FILES (CVE-2001-0497)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Files containing shared secrets have inadequate permissions, allowing unauthorized access."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;CHIP RESET CLEARING CRITICAL READ/WRITE PERMISSIONS FOR RSA FUNCTION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability where a chip reset clears critical read/write permissions, potentially allowing unauthorized modifications."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;INSECURE COMMUNICATIONS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Insecure communication practices can lead to exposure of sensitive data over insecure channels."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;AUTOMATED TESTING FOR REGISTER LOCKS AND WRITE-ONCE FIELDS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Testing phases should use automated tools to verify that register locks and write-once fields are properly configured per design specifications."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;USE LEAST PRIVILEGE PRINCIPLE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Following the principle of least privilege to minimize permissions required by processes."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;PRODUCT DEVELOPERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Developers who create products that may enable DMA capable devices too early in boot phase, potentially allowing attackers to exploit this vulnerability."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;INCONSISTENT ERROR MESSAGE HANDLING &quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Attackers need to understand the different error messages and how they are handled by the system to exploit them."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;UNINTENDED PROXY FUNCTIONALITY ('CONFUSED DEPUTY')&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique where an application incorrectly forwards requests from one entity to another, potentially allowing the attacker to bypass security controls."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;INTERNAL REGISTERS AND TEST MODES ACCESS CONTROL MECHANISM&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The access control mechanism governing the internal registers and test modes of components within an SoC is a critical target for attackers seeking unauthorized access or data modification."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting the vulnerability in hardware design that does not properly clear sensitive information stored in built-in registers when a user changes."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;MUTUAL AUTHENTICATION MECHANISM ENFORCEMENT&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Enforcing strong mutual authentication between components in a system can prevent unauthorized proxy functionality."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;DIRECT MEMORY ACCESS (DMA) CAPABLE DEVICE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A Direct Memory Access (DMA) capable device allows data transfer between the computer and connected device using direct hardware access without OS interaction. It can be exploited by attackers if enabled too early in boot phase."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;INSECURE CRYPTOGRAPHIC STORAGE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A method by which sensitive data is stored without adequate cryptographic protections."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;INFORMATION DISCLOSURE TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of obtaining unauthorized access to sensitive information through observable discrepancies, such as side channel attacks or inconsistent error messages."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;PRESERVATION OF INITIATOR IDENTITY&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Maintaining and forwarding the identity of the transaction initiator ensures that the source of requests is correctly identified, mitigating the risk of unauthorized access."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;TRUSTED FIRMWARE OR SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A trusted module that sets lock bits to protect system configurations after power reset."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SECURE ERROR HANDLING IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing secure error handling practices by providing minimal details in error messages and compartmentalizing sensitive data is recommended to prevent information leakage."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;ACCESS CONTROL BYPASS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An attacker's tactic to bypass access controls such as firewalls by using a system with different privileges as an intermediary."&lt;SEP&gt;"The tactic is to bypass existing access control protections on assets through alternate hardware interfaces."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b&lt;SEP&gt;chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;EXPLOITER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An individual or group that exploits vulnerabilities in system-on-chip (SoC) components for unauthorized access or other malicious activities."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;RESETTING LOCK BIT AFTER POWER RESET &quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where an adversary resets the lock bit after a power reset, disabling protection."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SIDE CHANNEL ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The side channel attack pattern involves observing discrepancies in system behavior to infer sensitive information about the system's operation or internal state."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;DATA FLOW ANALYSIS AND CONTROL FLOW ANALYSIS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Analyzing the flow of data and control within applications can help identify potential proxy vulnerabilities."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;PROTECTED REGISTERS/ADDRESS REGIONS &quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Registers or address regions within hardware systems that are intended to be protected from unauthorized modifications by lock bit mechanisms."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SECURITY LOCK BIT BYPASS VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A flaw in hardware design allowing bypassing of protection mechanisms such as security lock bits."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;OBSERVABLE DISCREPANCY ATTACKERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Attackers use observable discrepancies in product behavior to gain unauthorized access to sensitive information."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;UNINTENDED PROXY BEHAVIOR IN SOFTWARE APPLICATIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition for this attack is the presence of software that improperly forwards requests as a proxy without verifying the source identity or context."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;CWE-362 (RACE CONDITION)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A race condition vulnerability allowing attackers to exploit timing windows between when an interrupt handler detects an attempt to write-enable BIOS and when it resets the write-enable bit back to 0."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;IMPROPER ACCESS CONTROL OF ON-CHIP DEBUG AND TEST INTERFACE SOFTWARE MODULE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"This module improperly manages the authorization and authentication processes for accessing internal registers and test modes through physical debug/test interfaces, potentially leading to security vulnerabilities."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;WRITE-ONCE REGISTER MODIFICATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An untrusted software component exploits a race condition by modifying a write-once register before the trusted module has a chance to initialize it."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;ADVERSARY EXPLOITING RESERVED BITS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An adversary exploiting reserved bits in hardware designs for malicious purposes."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where software may inadvertently act as an unintended proxy, leading to security issues such as unauthorized access and bypassing firewalls."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;TIMING AND CONTROL FLOW DISCREPANCY&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Attackers observe timing differences, control flow variations, communication patterns, and general behavioral discrepancies to exploit vulnerabilities through side channel attacks."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;PROPER AUTHENTICATION AND AUTHORIZATION MECHANISMS FOR DEBUG INTERFACES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing robust authentication and authorization mechanisms for debug interfaces can prevent unauthorized access and exploitation of on-chip test/debug features."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;RACE CONDITION EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting the race condition between an original copy and its shadow copy when they are out-of-sync."&lt;SEP&gt;"The attack pattern involves exploiting the race condition vulnerability in hardware designs to allow unauthorized changes to security settings."</data>
  <data key="d2">chunk-6c031a7ff8a513b1dd7b59f833f1ac53&lt;SEP&gt;chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS AND BYPASS OF SECURITY MEASURES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the unintended proxy behavior in software applications, attackers can gain unauthorized access or bypass security measures."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique where attackers access and extract sensitive data from registers due to improper zeroization of hardware."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;CHALLENGE-RESPONSE AUTHENTICATION BYPASS (CVE-2001-1585)&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"This technique involves bypassing challenge-response mechanisms by exploiting public keys, allowing unauthorized access."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted access to assets intended only for trusted users. This vulnerability is detailed as CVE-2019-6260."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;WRITE-ONCE REGISTER VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Hardware design flaw where a write-once register can be programmed by an untrusted software component before being set by trusted firmware."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;SOFTWARE APPLICATION ACTING AS PROXY FOR TRANSACTIONS BETWEEN COMPONENTS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entity is any software application that could potentially act as an intermediary between components without proper identity verification."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;ERROR HANDLING MALPRACTICE SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Improper error handling practices, which can reveal information about the internal state of a system or successful operations, are exploited by attackers through various techniques."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;EXPLOITATION THROUGH DEBUG/TEST INTERFACES WITHOUT PROPER AUTHORIZATION&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting improper access control in the on-chip debug/test interfaces to bypass protection mechanisms and gain unauthorized access to internal information or execute unauthorized commands."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;TIMED RESPONSES FOR USERNAME EXISTENCE &quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Attackers measure the time taken for different server responses to determine if a username exists."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;UNTRUSTED SOFTWARE COMPONENT (MODULE B)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An untrusted software component that attempts to exploit a race condition in the hardware design."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;FTP BOUNCE ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves an attacker using the PORT command in FTP protocol to modify connections, allowing them to connect to other machines through a proxy."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;INCONSISTENT ERROR RESPONSES AND TIMING VARIATIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Attackers need to observe inconsistent error responses or timing variations as prerequisites for exploiting the observable discrepancy vulnerability."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;FILE EXISTENCE DETERMINATION THROUGH BROWSER SCRIPTING (CVE-2005-0918) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Browser scripts can be used to infer the existence of arbitrary files on a server based on page loading times."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;WEB SERVER WITH PROXY FUNCTIONALITY (EXAMPLE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A web server that allows attackers to request URLs from another server, including different ports, enabling proxied scanning."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where shared resources on a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted agents to access assets intended for trusted users."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;VERSION CONTROL SYSTEM ALTERNATE HISTORY INFOLEAK VULNERABILITY (CVE-2004-0778) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Enabling attackers to determine file existence and directory structure using alternate history files."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product behaves differently under different circumstances, revealing security-relevant information about its state through discrepancies."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;FTP PORT COMMAND VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The FTP PORT command vulnerability allows an attacker to modify the connection settings and connect to other machines through a proxy."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of enabling DMA capable devices too early in boot phase before security configurations are established, allowing attackers to extract data or gain privileges."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;IMPROPERLY CLEARED MEMORY&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique involving memory that is not properly cleared before reuse, leading to potential exposure of sensitive information stored within the memory."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;SENSITIVE DATA EXPOSURE AND ATTACK SUCCESS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploiting the observable discrepancy vulnerability leads to unauthorized access to sensitive data and successful attacks on system integrity or confidentiality."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;INSUFFICIENT AUTHENTICATION MECHANISMS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Lack of strong authentication mechanisms that ensure requests come from authorized sources is a prerequisite for exploiting vulnerabilities."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;SECURITY CONFIGURATION SETUP AND IOMMU UTILIZATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Setting up security configurations for DMA devices during the boot phase and utilizing an Input-Output Memory Management Unit (IOMMU) can mitigate early DMA attacks by controlling access to memory resources."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;TRUSTED SOFTWARE COMPONENT (MODULE A)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A trusted software module responsible for initializing security settings during boot-up, which could be targeted by an attacker through exploiting hardware vulnerabilities."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;VARIOUS PLATFORMS (CWE-203) &quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entities include various platforms where discrepancies in product behavior can be observed, leading to security risks such as information disclosure."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;EXPLOIT PROXY SERVICES FOR ACCESS CONTROL BYPASS TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An attacker's tactic to exploit proxy services and use them as means to bypass security controls such as firewalls or access control lists."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;INFORMATION DISCLOSURE AND PRIVILEGE ESCALATION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postconditions of these attacks include enabling information disclosure and potentially escalating privileges by exploiting vulnerabilities in hardware designs."&lt;SEP&gt;"The tactic of exploiting improperly isolated shared resources on SoC or insecure DMA device enablement in boot phase is aimed at disclosing information and escalating privileges."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1&lt;SEP&gt;chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;SERVER BEHAVIOR ANALYSIS &quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Analyze server responses to understand patterns that indicate valid user inputs or system states."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;CWE-203 VULNERABILITY IMPLEMENTATION ATTACKERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Attackers exploit vulnerabilities related to observable discrepancies as defined in CWE-203."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;ATTACKER ENTITY PLACEHOLDER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"The text does not specify a specific attacker, but implies the existence of an active entity exploiting vulnerabilities."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;DISCREPANCY DETECTION TOOLS SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Tools used by attackers to detect and analyze discrepancies in system behavior."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique used by attackers to modify system configurations despite set security measures such as lock bits."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;POP3 PORT SCANNING SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software tool used to scan internal networks using modified POP3 port numbers as part of an attack strategy."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;USER ENUMERATION VIA DISCREPANCIES ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern involving the enumeration of valid usernames or other sensitive information through discrepancies in error messages."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;URL-DOWNLOADING LIBRARY EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern involving the exploitation of a URL-downloading library that automatically follows file:// and scp:// URLs, potentially allowing unauthorized access to resources."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;ERROR RESPONSE ANALYSIS TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Analyzing differences in error responses to infer whether an operation was successful or not."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;NETWORK SCANNING USING MODIFIED POP3 PORTS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves scanning internal networks using modified POP3 port numbers to discover vulnerabilities or gain unauthorized access."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;INCONSISTENT ERROR MESSAGE MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing consistent and minimal error messages to prevent information leakage."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;FOLLOWS REDIRECTS TO FILE AND SCP URLS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where a URL-downloading library is exploited by following redirects to file:// and scp:// URLs, potentially exposing sensitive information."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;USER ENUMERATION TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of enumerating valid user accounts by observing discrepancies in system responses."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;PROPER DOCUMENTATION IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing thorough documentation for product design and usage can help prevent vulnerabilities related to insufficient technical documentation."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;TIMING ANALYSIS PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Attackers need to analyze timing variations as a prerequisite for exploiting the vulnerability."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;FTP SERVER USERNAME TIMING ATTACK VULNERABILITY (CVE-2004-1602) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"FTPs display differences in response times that can be used to determine valid user identities."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO NETWORK RESOURCES&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves gaining unauthorized access to network resources using various attack techniques and exploiting software configurations."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;CWE-203 VULNERABILITY (CVE EXAMPLES) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Various examples of vulnerabilities related to observable discrepancies, such as CVE-2020-8695 and CVE-2019-14353."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;LARGE TIMEOUTS ON UNCONFIRMED CONNECTIONS (CWE-440)&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A precondition where applications use large timeouts for unconfirmed connections leading to potential security vulnerabilities."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;BOOT FIRMWARE COMPROMISE THROUGH UNTRUSTED IPS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Untrusted IPs or peripheral microcontrollers enabled before security features are programmed pose a risk for compromising SoC boot firmware."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;LACK OF DOCUMENTATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A lack of proper documentation or missing critical information about the product's design and configuration can serve as a prerequisite for attackers to exploit vulnerabilities."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;SENSITIVE INFORMATION DISCLOSURE POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploiting the vulnerability results in unauthorized access to sensitive information."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CERT ORACLE SECURE CODING STANDARD FOR JAVA&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A standard providing guidelines to secure coding practices in Java, including cryptographic operations."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;BULLETIN BOARD USER EXISTENCE ERROR RESPONSE VULNERABILITY (CVE-2004-0294) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Bulletin boards reveal distinct error messages when a user exists or not, aiding attackers in identifying users."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;CVE-2010-1637 VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability in a web-based mail program that allows internal network scanning using modified POP3 port numbers, potentially exposing the system to unauthorized access."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;MULTIPLE OPERATING SYSTEMS (CWE-203) &quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entities include multiple operating systems where observable discrepancies can be detected and exploited."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;BYPASS PROTECTION MECHANISM THROUGH UNAUTHORIZED JTAG ACCESS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves exploiting vulnerabilities in the JTAG interface to bypass protection mechanisms and achieve unauthorized execution or data modification."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;DIRECT REMOTE LOGIN DISABLED PASSWORD GUESSING VULNERABILITY (CVE-2004-0243) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"When remote login is disabled, different responses indicate if the password is correct, helping with brute force attacks."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;CVE-2009-0037 VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability in a URL-downloading library that automatically follows file:// and scp:// URLs, exposing sensitive information or allowing unauthorized actions."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;NETWORK SNIFFER AND PROTOCOL ANALYZER USERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Attackers use network sniffing tools to monitor network traffic for the presence of plaintext passwords."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;LACK OF AUTHENTICATION AND AUTHORIZATION FOR DEBUG PINS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A precondition for this attack is the lack of proper authentication and authorization controls, especially when debug pins are hidden within board layers."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;PRODUCT PORT FILTERING INFORMATION LEAKAGE VULNERABILITY (CVE-2002-0514) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Product reveals filtered port status through differential TTL values in response packets."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;NETWORK RESOURCES AND DEVICES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Various network resources and devices are the target entities of attacks exploiting vulnerabilities such as CVE-2010-1637 and CVE-2009-0037."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;DATA EXTRACTION AND PRIVILEGE ESCALATION THROUGH EARLY BOOT PHASE ATTACKS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Early boot phase DMA attacks can result in data extraction or privilege escalation by gaining direct hardware memory access."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability exists during the execution of ROM code where the JTAG interface is not disabled, introducing a race condition to extract encryption keys (CWE-362)."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;PRODUCT ICMP RESPONSE ANOMALY VULNERABILITY (CVE-2002-0208) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product modifies ICMP responses, revealing its presence and causing information leakage."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;TRUSS (SOLARIS)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A system-call tracing utility used in Unix systems, particularly Solaris, to trace system calls and signals generated by processes."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;WEB-BASED MAIL PROGRAM SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A web-based mail program that allows internal network scanning using a modified POP3 port number, which is vulnerable to exploitation."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;STRACE (LINUX)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A Linux utility for monitoring and debugging process behavior by intercepting and logging the system calls executed by or on behalf of a process."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;PLOVER MISSING REQUIRED CRYPTOGRAPHIC STEP ENTRY&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An entry in the PLOVER taxonomy describing missing steps in a cryptographic algorithm leading to vulnerabilities."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;BEHAVIORAL INFOLEAK THROUGH SYN-FIN PACKETS VULNERABILITY (CVE-2004-2252) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"System behavior changes upon receiving SYN-FIN packets, aiding attackers in identifying specific system configurations."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;URL-DOWNLOADING LIBRARY SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software library for downloading URLs that automatically follows redirects to file:// and scp:// URLs, leading to potential security risks."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;SYSINTERNALS UTILITIES (WINDOWS)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A collection of utilities from Microsoft Sysinternals designed to monitor, debug, and manage processes on Windows systems."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;ICS/OT SYSTEMS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Industries and systems that rely on ICS (Industrial Control Systems) or OT (Operational Technology) are at risk from expected behavior violations and other security weaknesses."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS AND DATA DISCLOSURE POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Attackers can obtain unauthorized access and disclose sensitive information due to improper zeroization vulnerabilities."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;INSUFFICIENT TECHNICAL DOCUMENTATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Lack of adequate documentation or design details can lead attackers to easily exploit the system's vulnerabilities."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;FILEMON (WINDOWS)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A utility by Mark Russinovich for monitoring file system activity in real time on a Windows machine."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;EXPECTED BEHAVIOR VIOLATION (CWE-440)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This occurs when a feature, API, or function does not adhere to its defined specifications leading to security issues."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;SENSITIVE INFORMATION DETERMINATION &quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of determining the existence and details of sensitive information through various means, often exploiting software vulnerabilities."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;EXPLOITATION VIA MODIFIED POP3 PORTS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique involving scanning networks using modified POP3 ports to discover and exploit vulnerabilities."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;REGMON (WINDOWS)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A utility by Mark Russinovich for monitoring registry access and modifications on Windows systems."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker can exploit improper access control on-chip debug and test interfaces to bypass protection mechanisms and gain unauthorized access."&lt;SEP&gt;"An attacker who exploits unintended proxy or intermediary functionality of software applications to bypass security measures and gain unauthorized access."&lt;SEP&gt;"The text does not specify a particular attacker, but it implies attackers could exploit the lock bit modification vulnerabilities to unlock system configurations."&lt;SEP&gt;"An attacker who can exploit hardware vulnerabilities to perform clock and voltage glitching attacks on semiconductor devices."&lt;SEP&gt;"An entity that exploits vulnerabilities to alter the state of shadow copies or execute malicious code in memory."&lt;SEP&gt;"An entity that exploits vulnerabilities to gain unauthorized access and cause system instability."&lt;SEP&gt;"An unspecified attacker exploits vulnerabilities related to fuse values and comparison logic granularity."&lt;SEP&gt;"An unspecified attacker who uses voltage and clock glitches to compromise a device."&lt;SEP&gt;"An attacker who exploits vulnerabilities in the firmware's public key reuse for signing both debug and production code."&lt;SEP&gt;"An unspecified attacker exploits vulnerabilities present in firmware of devices that do not provide update capabilities."&lt;SEP&gt;"An unspecified attacker who can exploit vulnerabilities in the system address map to bypass access control and compromise protections."&lt;SEP&gt;"The attacker exploits vulnerabilities in hardware interfaces and shadow registers to bypass existing protections."&lt;SEP&gt;"An attacker who can trigger transient operations and observe their side effects through a covert channel, potentially inferring private data."&lt;SEP&gt;"An attacker who could exploit transient execution vulnerabilities to infer sensitive information through microarchitectural side effects."&lt;SEP&gt;"An attacker who exploits vulnerabilities in hardware to gain unauthorized access or read confidential data from other sandboxes."&lt;SEP&gt;"An unspecified attacker who exploits vulnerabilities to place IoT devices into a botnet or retrieve confidential data from previously owned and factory reset devices."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486&lt;SEP&gt;chunk-b2db9bd0b7df158579fa4f955ca5f332&lt;SEP&gt;chunk-5b8399f81d264b899c6b1465888065e8&lt;SEP&gt;chunk-9196c23d4d59b9afbe77c085c568d16b&lt;SEP&gt;chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8&lt;SEP&gt;chunk-eb3af9cc9df9726a2a72280178b25b2d&lt;SEP&gt;chunk-2dabf9c98bc69986dc24d5e304324dc0&lt;SEP&gt;chunk-7acaf7b7bfc562c3e9176c41d3a30307&lt;SEP&gt;chunk-3d2fd26674527134e3c7fbd5cc806bf4&lt;SEP&gt;chunk-6c031a7ff8a513b1dd7b59f833f1ac53&lt;SEP&gt;chunk-edc0b7b8ef9d117a05387c6abf439ce2&lt;SEP&gt;chunk-bc102d9f54bb50e60fe4796c747399e3&lt;SEP&gt;chunk-1ea2cd26ef91f5c526781b17429acd7f&lt;SEP&gt;chunk-9c2d736840493af6c8eeeed13f45ae1a&lt;SEP&gt;chunk-022b88d5b18c3c7a7589c9de7a7a5d1c&lt;SEP&gt;chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;PRODUCT RESPONSE DISCREPANCY VULNERABILITY (CVE-2001-1387) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product generates inconsistent responses which can lead to information leakage when queried improperly."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO INTERNAL NETWORKS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the network's vulnerabilities, unauthorized access is gained to internal network resources."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;PROCESS MONITOR (WINDOWS)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A tool from Microsoft Sysinternals that monitors all file system activity, registry queries, process creations, and thread activity in real time."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;BUFFER OVERFLOW DUE TO LIBRARY FUNCTION MISUSE (CVE-2005-3265)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This involves the misuse of a third-party library function, leading to unexpected behavior and potential buffer overflows."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;VERSION CONTROL SYSTEM FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2004-0778) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Enabling attackers to infer file existence through specific command responses in a version control system."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;AUTOMATED REDIRECT FOLLOWING EXPLOIT TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique involving exploitation of an automated URL-downloading library that follows file:// and scp:// redirects."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2020-8698) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted access to assets intended only for trusted users. This vulnerability is detailed as CVE-2020-8698."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;FTP SERVER USERNAME ENUMERATION VULNERABILITY (CVE-2004-1428) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"FTP servers expose valid usernames by providing different error messages for non-existent versus existing users."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;AUTOMATED STATIC ANALYSIS&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An automated approach to detecting vulnerabilities by analyzing source code or binary/compiled code without executing it."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;INTERNAL NETWORK RESOURCES TARGETED BY VULNERABILITIES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The internal network resources are the target entities of attacks exploiting vulnerabilities in web-based mail programs or URL downloading libraries."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;ROM CODE EXECUTION MANAGEMENT SOFTWARE MODULE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"This software module manages the execution of ROM code, which can introduce security risks if not properly secured against attacks on JTAG interfaces."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where hardware IP cores and integrated circuits do not prevent the value of a lock bit from being modified after it has been set."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;SSL IMPLEMENTATION TIMING ATTACK VULNERABILITY (CVE-2003-0078) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The SSL implementation reveals information through timing discrepancies when handling incorrect padding."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;CRYPTOGRAPHIC FUNCTION DETECTION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of attaching a monitor to a process and triggering the feature that sends data, looking for cryptographic functions in the call tree."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;LESS TRUSTWORTHY PARTIES&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Entities that could exploit uncleared resources to gain unauthorized access to sensitive data."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;IMPROPER SECURITY CONFIGURATION AND EARLY BOOT PHASE ENABLEMENT&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Enabling DMA capable devices too early during the boot phase before proper security configurations can be established creates a precondition for exploitation by attackers."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;VIRTUAL MACHINE FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2000-1117) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Web pages loaded in a virtual machine can infer file existence based on response times and delays."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;NETWORK TRAFFIC ANALYSIS FOR ENCRYPTION USAGE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Monitoring network traffic to determine if data packets contain readable commands or high entropy, indicating encryption usage."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;RESOURCE RELEASE AND REUSE PROCESS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Operating systems manage resource release and reuse, often leaving old data accessible in new allocations."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;IMPLEMENTING SECURITY LOCK BIT REVIEW PROCESS &quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation approach that includes reviewing the design and testing security lock bit mechanisms across various power state transitions to ensure their effectiveness."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS AND DATA MODIFICATION THROUGH DEBUG INTERFACE EXPLOITATION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploiting improper access control leads to unauthorized read/write access to application data and memory, as well as the modification of system integrity."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;PRODUCT USERNAME TIMED RESPONSE VULNERABILITY (CVE-2003-0637) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Differences in server response time reveal valid usernames through timing attacks."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;MANUAL PENETRATION TESTING AND THREAT MODELING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"The use of manual testing methods like penetration testing and threat modeling to identify weaknesses in security designs and business rules."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;UNCLEARED RESOURCE EXPOSURE PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where attackers exploit uncleared memory or resources to access sensitive information left behind."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;ENCRYPTED COMMUNICATION CHANNELS CONFIGURATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Configuring servers to use encrypted channels such as SSL for secure communication to protect sensitive information during transmission."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;RESERVED BIT UTILIZATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Designers covertly utilizing reserved bits can provide adversaries with potential attack points."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;SENSITIVE INFORMATION READ FROM CLEARED MEMORY&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of reading previously written data from newly released but not properly cleared memory or resources."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;MAINTAINING SECURE SYSTEM CONFIGURATION POST-RESET&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic is to ensure that the system remains in a secure state after initial configuration by preventing unauthorized modifications."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;SYSTEM-ON-CHIP (SOC) WITH MISSING OR INSUFFICIENT IP IDENTIFIERS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The System-on-Chip is a target entity where missing or insufficient identifiers for its components can lead to improper identification issues and security vulnerabilities."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;DISABLING RESERVED BITS FEATURE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Including a feature to disable or block access to reserved bits as mitigation against unauthorized access."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;DESIGN ENCRYPTION PROTECTION INTO HARDWARE PLATFORMS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Ensuring that hardware platforms are designed with encryption algorithms recommended by NIST to protect paths of security critical data."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;RESOURCE OVERWRITING RECOMMENDATIONS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Recommendations to overwrite sensitive information and use fixed patterns like 0's before resource release for secure handling."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The protected registers and address regions within hardware IP cores and integrated circuits are the target of lock bit modification attacks."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Attacker uses this technique by exploiting flaws in the JTAG interface's authorization, allowing them to read application data, memory, and modify system integrity without proper authentication."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;SENSITIVE INFORMATION EXPOSURE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Mirrored regions getting out of sync may result in the exposure of sensitive information due to inconsistencies between mirrored copies."&lt;SEP&gt;"The postcondition of improperly cleared memory or incorrect default permissions is sensitive information exposure."&lt;SEP&gt;"The tactic is to exploit vulnerabilities in physical side channels to expose sensitive information for malicious purposes."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b&lt;SEP&gt;chunk-eb9580695df69206d5ae3cb8f9e396f5&lt;SEP&gt;chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;TRANSMITTING DATA IN PLAIN TEXT PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition for plaintext transmission involves scenarios where authentication credentials or sensitive information is sent over insecure channels."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;PREVENT INFORMATION EXPOSURE TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Strategies designed to prevent the exposure of sensitive data through proper clearing procedures during state transitions or resource releases."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;AUTOMATED TESTING TOOLS FOR LOCK BIT PROTECTION REVIEWING DESIGN INCONSISTENCIES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Tools used during testing phases to verify that lock bit protections are consistent across design and implementation stages."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;IMPROPER RESTRICTION OF WRITE-ONCE BIT FIELDS VULNERABILITY (CVE)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The hardware design control register sticky bits or write-once bit fields can be improperly implemented, allowing reprogramming by software."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Several vulnerabilities exist where sensitive information is transmitted in plaintext over insecure channels, including passwords and session tokens."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;INSUFFICIENT DATA CLEARING PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The condition where insufficient data clearing leaves old information accessible, making it a target for attackers."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"When plaintext transmission of sensitive data occurs, it can lead to unauthorized access and potential misuse of the transmitted information."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;RESERVED BITS MISUSE IN PRODUCTION HARDWARE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Adversaries writing to reserved bits in production hardware can induce unwanted behavior, potentially leading to attacks."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability wherein resources are not properly cleared before reuse leading to potential exposure of sensitive data."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;WEB APPLICATIONS WITH SSL USAGE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Web applications that use SSL for communication are targeted entities for ensuring encrypted channels from login to logout sessions."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;LACK OF SECURITY LOCK BIT ENFORCEMENT PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Design flaws or lack of strict enforcement mechanisms can create a prerequisite condition for exploiting security lock bit vulnerabilities."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;SENSITIVE DATA EXPOSURE AND UNAUTHORIZED ACCESS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition where sensitive data is exposed due to uncleared memory, leading to unauthorized access by attackers."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;LOCK BIT MODIFICATION ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The specific action taken by an attacker to modify a lock bit after it has been set, thereby unlocking protected system configurations or registers."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;UNTRUSTED COMPONENT MASTERING TRANSACTIONS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Adversaries enabling untrusted IPs can master transactions on hardware buses, compromising SoC boot firmware."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;ENCRYPTED CHANNELS USAGE FOR COMMUNICATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring data is transmitted over encrypted channels such as SSL/TLS to protect against plaintext transmission vulnerabilities."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;MEMORY MANAGEMENT SYSTEMS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Systems managing memory operations are the targets of attacks exploiting improper cleanup on resource release."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;DIFFERENT ERROR MESSAGES GENERATION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Different error messages are generated by the software when validating user inputs, which can be exploited for information leakage."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;HARDWARE SYSTEM CONFIGURATIONS TARGET ENTITY&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The hardware's system configurations are targeted by attackers to exploit vulnerabilities for unauthorized modifications."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;SECURE TRANSMISSION DESIGN PHASE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Designing secure transmission mechanisms during the architecture and design phase to prevent sensitive information from being transmitted in plaintext."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;CWE-20: IMPROPER INPUT VALIDATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Insufficient validation of input data is a prerequisite for many resource management vulnerabilities."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;SOFTWARE DEVELOPMENT LIFECYCLE SECURITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Security measures implemented throughout the software development lifecycle (SDLC) are necessary prerequisites for mitigating plaintext transmission risks."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE USE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The condition where sensitive data is not cleared properly before being reused or transferred to another control sphere."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;CVE-2019-3733&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific instance of CWE-459 where heap memory in cryptography libraries is not cleared before release, leading to potential exposure."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC) are improperly isolated, allowing untrusted access to assets intended only for trusted users."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;RESOURCE LIFECYCLE MANAGEMENT ISSUE&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"Issues related to the management of resource lifecycles, particularly around clearing sensitive information before reuse."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;WEB APPLICATIONS WITH SSL USAGE IMPLEMENTATION PHASE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"During the implementation phase, web applications must ensure that all communications are encrypted using SSL/TLS to prevent data breaches."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;CVE-2003-0001&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Ethernet NIC drivers fail to pad frames with null bytes, leading to infoleak from malformed packets."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;PROPER LOCK BIT DESIGN IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring proper design and implementation of lock bits so they cannot be modified post-initialization."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;ENABLING SECURITY FEATURES EARLY IN BOOT SEQUENCE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Programming fabric access controls and memory protections early during the boot sequence to prevent unauthorized component mastery."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;UNTRUSTED AGENTS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Untrusted agents are entities that can exploit insufficient access controls to gain unauthorized access to security-sensitive assets."&lt;SEP&gt;"Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84&lt;SEP&gt;chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;CVE-2003-0291&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Router vulnerability where DHCP packet data is not cleared properly after use, allowing potential exposure of information."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;ACCESS CONTROL POLICY IMPLEMENTATION FAILURE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Insufficient granularity in the implementation of access control policies is a common weakness leading to vulnerabilities in hardware and software systems."&lt;SEP&gt;"Insufficient granularity in the implementation of access control policies is a common weakness leading to vulnerabilities."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;FILE PERMISSION MISCONFIGURATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A prerequisite for exposing sensitive data through file permission misconfigurations."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;CVE-2005-1406&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Products failing to fully clear memory buffers when less data is stored than previously used, risking infoleak."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;CVE-2022-24985 &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A form hosting website vulnerability (CVE-2022-24985) where authentication checks are insufficient, allowing bypass of authentication when multiple forms exist."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;CWE-212:UNCLEARED SENSITIVE DATA&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Sensitive data stored in reusable resources is not properly cleared before reuse."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;CVE-2005-1858&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Similar issue as CVE-2005-1406, emphasizing the risk of partial clearing in memory management systems."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;SECURITY LOCK BIT BYPASS ATTACKERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Attackers who exploit the security lock bit bypass vulnerability to modify system configurations."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;NETWORK PACKET EXPOSURE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique involving the exposure of sensitive information in network packets due to improper handling and clearing."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;CVE-2021-36934 &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"An overly permissive Access Control List (ACL) vulnerability in an operating system (CVE-2021-36934), affecting user password-related files and leading to unauthorized access."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;CVE-2005-3180&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Products failing to fully clear memory buffers when less data is stored than previously used, risking infoleak."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;DESIGN FLAWS AND IMPLEMENTATION WEAKNESSES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Weaknesses during hardware design or implementation phases, such as not enforcing write-once restrictions, enable lock bit modification attacks."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;SYSTEM CONFIGURATION MODIFICATION AND ACCESS POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Attackers can modify system configurations and gain unauthorized access as a result of exploiting the security lock bit vulnerability."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A hardware vulnerability due to insecurely defined register defaults or module parameters, making the system susceptible at power reset."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;CVE-2005-3276&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Product vulnerability where a data structure is not cleared before writing, leading to potential information leakage from previous use."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where design flaws allow for the reprogramming of secure hardware settings, such as lock bit modifications, post-initialization."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;SENSITIVE INFORMATION IN HARDWARE REGISTERS TARGET ENTITY&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Built-in hardware registers that store sensitive data such as passwords or encryption keys, which are the targets of attacks."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;INSUFFICIENT GRANULARITY OF ADDRESS REGIONS PROTECTED BY REGISTER LOCKS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product defines large address regions protected by a single register lock control bit, reducing security granularity and increasing vulnerability."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;CVE-2002-2077&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Memory issues in software that lead to improper clearing of memory before reuse, similar to other CWEs discussed."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;REMOTE ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A remote attacker uses various attack techniques to exploit vulnerabilities in different products or services."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;PROTECTED HARDWARE SYSTEMS (E.G., SERVERS, IPS)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Hardware systems, such as servers and intellectual properties, which rely on hardware locks for protecting their configurations against unauthorized modifications."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;IMPROPER INITIALIZATION/SHUTDOWN&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The condition where resources are not initialized or shutdown properly, leading to potential security vulnerabilities."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;SECURITY-SENSITIVE ASSETS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Security-sensitive assets such as device configurations, keys, etc., are the primary targets of untrusted agent attacks due to inadequate access controls."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;INSECURE DEFAULT VALUES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Incorrectly defined default values or module parameters make hardware IP insecure at power reset."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;CONFIDENTIALITY BREACH&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"A postcondition of exposing sensitive information through improper handling and clearing practices."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;AUTOMATED TOOLS TESTING PHASE REQUIREMENT&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Testing phases should use automated tools to ensure security-sensitive settings are configured as per design specifications."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;MEMORY ALLOCATION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Memory allocation issues where sensitive data is not cleared properly before being reused or released for other purposes."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;SECURITY PROTECTION METHOD (WRITE-ONCE SETTING)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A security protection method used to prevent register settings from being modified after initialization by making them write-once or sticky."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;SYSTEM-ON-A-CHIP (SOC)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The System-on-a-Chip (SoC) is the target entity for improper isolation of shared resources and early boot phase DMA device enablement attacks."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;FILE PERMISSION MANAGEMENT FAILURE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique involving the mismanagement of file permissions leading to unauthorized access and modification."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;SYSTEM CONFIGURATION CHANGES VIA FIRMWARE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Changes in system configuration due to firmware updates can introduce or exacerbate weaknesses if not properly managed."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;SYSTEM CONFIGURATION CHANGES POST-POWER TRANSITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"After power state transitions, system configurations may become changeable due to lock bits becoming programmable again."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;UNAUTHORIZED MODIFICATION OF SYSTEM CONFIGURATION &quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the hardware lock bit mechanism weaknesses, adversaries can modify system configurations leading to potential security risks."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACKERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Attackers who exploit this vulnerability can gain unauthorized access to sensitive information stored in hardware registers."</data>
  <data key="d2">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</node>
<node id="&quot;HARDWARE DESIGN REVIEW PHASE REQUIREMENT&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"During hardware design, all the system parameters and register defaults must be reviewed for security sensitivity."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;LARGE ADDRESS REGION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Defining large address regions with insufficient granularity increases vulnerability to unauthorized access or modification."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;INFOLEAK THROUGH ERROR RESPONSES &quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where attackers exploit discrepancies in system responses to infer sensitive information about users or systems."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;PRODUCT WITH INCOMPLETE ADDRESS REGION PROTECTION&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A product where hardware design lacks sufficient granularity in defining address regions protected by register locks."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;SOFTWARE EXPLOITING WEAKNESSES IN LOCK BITS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Malicious or unintended software used by adversaries to take advantage of vulnerabilities in the hardware lock bit mechanism."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SECURE CODING PRACTICES (CERT ORACLE SECURE CODING STANDARD)&quot;">
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
  <data key="d1">"Insecure communications are mitigated by adhering to secure coding practices as defined by the CERT standard."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;TRUSTED FIRMWARE OR BOOTLOADER&quot;">
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
  <data key="d1">"The conflict between functional requirements and security needs impacts the ability of trusted firmware to set configurations securely during boot process."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;CWE-203 VULNERABILITY (CVE EXAMPLES)&quot;">
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
  <data key="d1">"The vulnerabilities exist in multiple operating systems, making them targets for exploitation based on observable discrepancies."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;MULTIPLE OPERATING SYSTEMS (CWE-203)&quot;">
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
  <data key="d1">"The vulnerabilities exist in multiple operating systems, making them targets for exploitation based on observable discrepancies."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;PRODUCT VERSION CONTROL SYSTEM INFORMATION LEAKAGE VULNERABILITY (CVE-2004-0778) &quot;">
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
  <data key="d1">"The vulnerability allows for infoleaks through alternate history files in version control systems."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;PRODUCT SSL IMPLEMENTATION VULNERABILITY (CVE-2003-0078) &quot;">
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
  <data key="d1">"The vulnerability in the SSL implementation is a specific instance of broader timing attack issues."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;DIFFERENT ERROR MESSAGES GENERATION &quot;">
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
  <data key="d1">"Understanding how error messages are handled helps attackers exploit inconsistencies in responses."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;REMOTE ATTACKER &quot;">
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
  <data key="d1">"The remote attacker's goal is to expose sensitive information through various attack techniques and vulnerabilities."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;BYPASSING SECURITY LOCK BIT PATTERN &quot;">
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
  <data key="d1">"This attack pattern targets the vulnerability present in hardware's security lock bit protection mechanisms."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)&quot;">
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
  <data key="d1">"Observing inconsistent error responses and timing variations are prerequisites for exploiting the observable discrepancy vulnerability."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;VARIOUS PLATFORMS (CWE-203)&quot;">
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
  <data key="d1">"The observable discrepancy vulnerability exists in various platforms, making them targets for such attacks."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;SOFTWARE EXPLOITING WEAKNESSES IN LOCK BITS &quot;">
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
  <data key="d1">"The adversary uses software to exploit weaknesses in the lock bit mechanism of protected systems."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;COMPROMISE SECURE BOOT CHAIN&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the improper protection against voltage and clock glitches, an attacker can compromise the secure boot chain."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;DEVICE SUPPORTING SECURE BOOT FEATURES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entity is a device that supports secure boot features but lacks proper protection against voltage and clock glitches."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;PRODUCT'S ARCHITECTURE WITH MIRRORED REGIONS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The product's architecture involves mirroring regions which can lead to inconsistencies and potential security issues."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;PERSONAL KEY NETWORK TRANSMISSION VULNERABILITY (CVE-2021-34687)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Transmitting personal keys over the network using substitution ciphers can introduce vulnerabilities leading to interception and misuse."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;SIMULATION / EMULATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Functional simulation during implementation phase verifies adherence to the access control policy on design."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;PERFORMANCE OPTIMIZATION THROUGH DUPLICATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves duplicating resources such as memory or computational units for performance optimization, potentially leading to synchronization issues."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;FAULT ATTACKS USING VOLTAGE AND CLOCK GLITCHES&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves using voltage and clock glitches to compromise a device's secure boot process and security logic."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;THOROUGH VERIFICATION OF DATA ROUTING LOGIC&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implement thorough verification procedures for data routing logic during the architecture and design phase to ensure effective blocking of illegal dataflows."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;SHADOW COPIES DIVERGENCE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where shadow copies diverge from the original copy due to improper updates, leading to discrepancies that can be exploited."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;FUZZING (PENETRATION TESTING)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Testing access control mechanisms to verify protection against unauthorized software access through fuzzing or manual penetration testing."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;MIRRORED REGIONS WITHOUT SYNC CHECK&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability exists when mirrored regions are not checked for consistency, allowing discrepancies and potential security breaches."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;FAULTY FSM DESIGN&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability arising from faulty finite state machines (FSMs) that do not account for all possible states, leading to system instability."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;AUTOMATED ANALYSIS: INFORMATION FLOW TRACKING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Traces security sensitive data flow through the design to verify adherence to access policies without relying on specific scenarios or data values."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;DES ALGORITHM USE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Using DES algorithm can make systems vulnerable to certain types of attacks due to its known weaknesses and outdated status."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;LOCAL COPY SYNCHRONIZATION FAILURE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition involves the failure to synchronize local copies with their original counterparts properly, leading to inconsistencies."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;PARALLELIZE SHIFTING OF SECRET DATA&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"This mitigation involves parallelizing the shifting process to obscure power consumption patterns during cryptographic operations."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;MPU DESIGN ENHANCEMENTS FOR PREVENTING MEMORY OVERLAP&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Recommendations to improve MPU design and prevent overlapping memory regions and related attacks."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;VOLTAGE GLITCH ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A technique used during an attack where the voltage supplied to a device is altered, usually by reducing it rapidly and intermittently, to trigger unexpected behavior or faults."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;CACHE MEMORY DUPLICATION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Cache memory duplication is used as an example of how duplicating resources can improve performance but introduces synchronization issues."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;MANUAL ANALYSIS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Manual analysis is a method to ensure that access policy for memory maps is correctly implemented."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;MD5 CONFIGURATION VULNERABILITY (CVE-2005-2946)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A default configuration using MD5 instead of stronger algorithms can simplify forgery attacks on certificates."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;MULTI-CORE PROCESSOR DESIGN&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A multi-core processor design with mirrored MMUs serves to illustrate the issue where local copies must be kept in sync for security and integrity."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;VOLTAGE AND CLOCK GLITCH EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of employing voltage and clock glitches to bypass protection mechanisms or gain unauthorized access."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;HIGH-PERFORMANCE ON-CHIP BUS PROTOCOLS AND PROCESSOR DATA-PATHS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"These protocols and data-paths are the specific target of attacks due to their architecture, which allows for potential de-synchronization issues."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;IDENTITY CARD HASH COLLISION VULNERABILITY (CVE-2019-3907)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Using an MD5 hash for identity card verification introduces a vulnerability that could lead to unauthorized access or forgery."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;IMPROPER PRESERVATION OF CONSISTENCY BETWEEN INDEPENDENT REPRESENTATIONS OF SHARED STATE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability arises when the product does not ensure that all local copies remain consistent with each other, leading to potential inconsistencies and security issues in distributed systems."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;CONSTANT-TIME ALGORITHM USAGE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Using constant-time algorithms for comparing security tokens or credentials can mitigate timing discrepancies and prevent side-channel attacks."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;MD5 ALGORITHM USE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Using MD5 algorithm is considered as a precondition which can make systems vulnerable to specific types of attacks, such as hash collision and forgery."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;SHA-1 VULNERABILITY (CVE-2005-2946)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The use of SHA-1 in certain configurations introduces vulnerabilities simplifying attacks such as certificate forgery."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;OPERATING OUTSIDE DEVICE SPECIFICATIONS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"This technique involves operating hardware outside its specified environmental conditions (temperature, voltage), which can lead to physical defects and security vulnerabilities."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;UNPRIVILEGED SW INTERFACE CHECK&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Checking if the interface to power management features like DVFS is available from unprivileged software (SW) which would make such attacks very easy for attackers."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;CWE-1191&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where authorization for a debug interface, such as JTAG, is missing or improperly enforced."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;INSUFFICIENT PHYSICAL PROTECTION DESIGN DECISIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Design decisions that do not properly align with the intended level of physical protection can lead to vulnerabilities in the system."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;SECURITY GUARANTEES COMPROMISE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of operating hardware outside its specifications or due to manufacturing defects, the product's security guarantees may be compromised leading to system instability and other vulnerabilities."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;MEMORY PROTECTION UNIT (MPU)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A key component in SoC systems responsible for managing memory regions."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;CVE-2017-5754: SPECULATIVE EXECUTION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability identified in systems utilizing speculative execution, allowing unauthorized disclosure of information through a side-channel analysis of the data cache."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;MIRRORED REGIONS (TARGET ENTITY)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Refers to regions within hardware or software architecture where data is duplicated for performance reasons but can lead to discrepancies if not properly synchronized."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;ENCRYPTION OF DEBUG COMMUNICATIONS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Encrypting communications over debug/test interfaces can prevent unauthorized agents from accessing sensitive information."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;SECURITY TOKENS IN SOC SYSTEMS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Security tokens in System on Chip (SoC) systems are target entities that can be improperly programmed by attackers to spoof actions."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;SECURE BOOT BYPASS AND EFUSE READING POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition resulting from exploiting a lack of anti-glitch protections, where an attacker can bypass secure boot mechanisms and read protected eFuses."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;MMU SHADOW COPIES (SOFTWARE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Refers to shadow copies of the Memory-Management Unit's resources in multi-core processors designed for performance optimization but susceptible to synchronization issues."</data>
  <data key="d2">chunk-f00f3b378bd7c23eedd4f2e92b0714ea</data>
</node>
<node id="&quot;DEBUG INTERFACE MISCONFIGURATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Improper configuration of debug interfaces that does not enforce correct debug access levels during system boot or state transitions."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;FAULT INJECTION ATTACK VIA SOFTWARE CONTROL&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attacker uses software-controlled hardware features to inject faults, allowing them to bypass authentication steps or escalate privileges without physical access."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;DETECTION OF VOLTAGE AND CLOCK GLITCHES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Attackers need to detect vulnerabilities related to voltage and clock glitch handling as a prerequisite for launching an attack."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;DYNAMIC MEMORY MANAGEMENT FLEXIBILITY EXPLOIT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Exploiting the flexibility in dynamic memory management for privilege escalation or unauthorized access."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;UNTRUSTED AGENT&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An untrusted agent is an entity that could exploit inconsistencies in memory access protections to bypass security controls."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;CWE-1244&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where an internal asset is assigned the wrong debug access level, leading to unintended exposure to untrusted agents."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;SYSTEM ON CHIP (SOC)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A System on Chip (SoC) containing different IP blocks connected through interconnect-bus fabrics, which could be targeted by an attacker exploiting improper access control in a fabric bridge."&lt;SEP&gt;"The target entity is a System-on-Chip (SoC) that includes components like debug interfaces and non-volatile memory that are vulnerable to improper handling."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124&lt;SEP&gt;chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;SYSTEM SOFTWARE MEMORY MANAGEMENT EXPLOIT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A software component running at lower privilege can program a memory address region to overlap with other regions used by higher-privilege components, leading to attacks."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting the inconsistency in read/write access protections of aliased memory regions to bypass hardware-enforced access restrictions."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;MEMORY PROTECTION UNIT DESIGN WEAKNESS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Weaknesses in MPU design that incorrectly handle overlapping addresses are prerequisites for successful exploitation."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;BYPASSING HARDWARE-ENFORCED ACCESS PROTECTION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Untrusted agents use this technique to modify or read protected memory by exploiting inconsistencies between primary and aliased memory blocks' access rights."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;SHA-1 ALGORITHM USE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Using SHA-1 algorithm is considered a precondition which can make systems vulnerable to specific types of attacks due to known weaknesses."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;CLOCK GLITCH ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern that involves altering the frequency of the clock signal to exploit vulnerabilities in semiconductor devices."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;MEMORY MAPPING CONFIGURATION ADJUSTMENT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A malicious agent can change the system address map to create new aliases that allow unauthorized access or modification of memory regions."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;MEMORY REGION OVERLAP DENIAL OF SERVICE ATTACK&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"An attacker may use overlapping memory addresses to launch a denial of service attack on high-privilege software memory regions."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;BLINDING OR MASKING TECHNIQUES FOR INTERNAL ASSETS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Applying blinding or masking techniques in strategic areas to protect internal assets from being accessed through debug interfaces."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability arises from the device's lack of proper protection against voltage and clock glitches, leading to potential security breaches."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;ACCESS CONTROL SYNCHRONIZATION BETWEEN MEMORY PROTECTION UNITS (MPU)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring consistency in protected ranges and policies between MPUs guarding aliased regions as a mitigation measure against inconsistent access protections."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS THROUGH MEMORY OVERLAP TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of using memory overlap vulnerabilities to gain unauthorized access to system resources."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;PROTECTION ROUTINE BYPASSING TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves bypassing protection routines that are designed to detect and prevent attacks, indicating a deeper level of access or manipulation from an attacker."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;RESTRICTED DEBUG MODE ENTRY CONTROLS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Controls to restrict enabling of memory aliasing features or modifying mapped memory region sizes to trusted software components only, preventing unauthorized actions."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;IMPROPER SECURITY TOKEN ASSIGNMENT PROTECTION MECHANISM VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability related to improperly restricting the assignment of security tokens, making them mutable and exploitable."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;CLEAR SECURITY SENSITIVE VALUES WHEN ENTERING DEBUG MODE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring all registers containing sensitive assets are cleared whenever debug mode is enabled as a mitigation against uncleared debug information exposure."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The hardware logic can incorrectly forward data before security checks are complete, potentially leading to unauthorized access to sensitive information."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;WEAK RANDOMNESS GENERATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Generating weak randomness is a precondition that can be exploited to compromise cryptographic systems and data integrity."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;IMPROPERLY RESTRICTED SECURITY TOKEN ASSIGNMENT&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A security vulnerability wherein Security Tokens, used to differentiate actions originated from trusted entities in SoCs, are improperly restricted and thus mutable by malicious agents."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;MELTDOWN ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A specific attack technique where an attacker exploits the de-synchronization between data and permissions checking logic in high-performance on-chip bus protocols and processor data-paths."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;PRODUCT PHYSICAL PROTECTION MECHANISM IMPLEMENTATION ERRORS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Errors in implementing physical protection mechanisms can lead to vulnerabilities allowing unauthorized access."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO SENSITIVE MEMORY REGIONS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Untrusted agents exploit memory mapping inconsistencies to gain unauthorized access or modification capabilities over sensitive memory regions as a consequence of the vulnerability."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;SPECULATIVE EXECUTION AND INDIRECT BRANCH PREDICTION EXPLOITATION&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern involving exploiting speculative execution and indirect branch prediction vulnerabilities to allow unauthorized disclosure of information via a side-channel analysis of the data cache."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;ARCHITECTURE OR DESIGN REVIEW&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Manual documentation review of system memory map, register specification, and permissions ensures proper policy implementation."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A system where higher-order address bits are ignored by the decoder unit, allowing for aliased memory regions to have different read/write protections leading to access control bypass."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;CWE-821: INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition involves errors in hardware logic that incorrectly forward data before security checks are complete, leading to potential unauthorized access scenarios."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;UNAUTHORIZED PARTY&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unauthorized party is an entity that attempts to exploit vulnerabilities such as timing discrepancies and power side-channel attacks."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;MICROCONTROLLER HARDWARE AND PROCESSOR SYSTEMS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The microcontroller hardware and processor systems that are the targets of these security vulnerabilities."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;RAZOR FLIP-FLOPS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Special flip-flops designed to detect and prevent glitches in security-sensitive hardware modules."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;SYSTEM-ON-CHIP (SOC)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A System-On-A-Chip where Security Tokens are improperly protected, potentially leading to unauthorized actions."&lt;SEP&gt;"Modern SoC hardware platforms are the target entities for attacks exploiting missing security identifier vulnerabilities in transaction handling processes."&lt;SEP&gt;"Modern System-On-Chip hardware platforms are the target entities for attacks that exploit missing security identifier vulnerabilities in transaction handling processes."&lt;SEP&gt;"The SoC fetches and authenticates the boot code during secure-boot process, making it a target for manipulation."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9&lt;SEP&gt;chunk-2cef8319ae87f01f627389db9b2b7646&lt;SEP&gt;chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;DATA CONFIDENTIALITY BREACH&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the insecure de-synchronization between control and data channels, an attacker can gain unauthorized access to sensitive information, compromising confidentiality."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;COMPARISON LOGIC GRANULARITY ISSUE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A precondition where the product's comparison logic is performed step-by-step rather than in one operation, making it vulnerable to timing attacks."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;SECURITY TOKEN MECHANISM IN SOCS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Mechanism used by Systems-On-A-Chip to differentiate and identify actions based on security tokens assigned to agents."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;CWE-1256&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where the interface to power management features like Dynamic Voltage and Frequency Scaling (DVFS) is available from unprivileged software, making such attacks very easy for attackers."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;STRING.EQUALS() TIMING DISCREPANCY&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves exploiting the difference in execution time of String.equals() when comparing HMAC signatures, allowing attackers to infer information about the signatures."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;INCORRECT SELECTION OF FUSE VALUES VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability allowing an attacker to set a system to an insecure state by blowing fuses incorrectly."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;MEMORY ACCELERATOR FOR SSD PRODUCT&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"An SSD product's memory accelerator that exposes sensitive system information due to uncleared debug information."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;REDUNDANCY IMPLEMENTATION FOR SECURITY-SENSITIVE CODE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing redundancy in security-sensitive code to mitigate glitch attacks by ensuring that critical checks are performed multiple times with different methods."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;POWER SIDE-CHANNEL ATTACK&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"A pattern where an attacker monitors a device's real-time power consumption during security token evaluation and uses the data to determine the value of the reference token."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;COMPARISON LOGIC TIMING ATTACK POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting comparison logic granularity issues, attackers can perform timing attacks leading to interception and misuse of process data."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;CRYPTOGRAPHY OPERATIONS SENSITIVE VALUES EXPOSURE IN HARDWARE DEBUG MODE &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability wherein security-sensitive values, such as keys and intermediate steps of cryptographic operations, are not cleared when entering debug mode."</data>
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</node>
<node id="&quot;SEMICONDUCTOR DEFECTS IN SECURITY-SENSITIVE HARDWARE MODULES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Semiconductor defects occurring in security-sensitive hardware modules that can compromise the security objectives of these modules due to unexpected faults in chip-internal signals or registers."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;TIMING-SIDE CHANNEL ATTACK ON ROUTER PASSWORD VALIDATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack that relies on observing timing differences in responses to incorrect password guesses to reveal passwords through brute-force attacks."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;BYPASS PROTECTION MECHANISM AND GAIN PRIVILEGES TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of bypassing protection mechanisms to gain unauthorized privileges or access confidential information."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;UNSPECIFIED ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unspecified attacker can exploit the vulnerabilities in processor instruction sequences or data immutability."&lt;SEP&gt;"An unspecified attacker exploits vulnerabilities in hardware designs that lack proper access control for mirrored or aliased memory regions."&lt;SEP&gt;"An unspecified attacker may exploit the vulnerabilities to manipulate sensor data or gain unauthorized control over system transactions."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b&lt;SEP&gt;chunk-494a02c2f9b114781552cc59c3c1dce1&lt;SEP&gt;chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;UNAUTHORIZED CONTROL THROUGH IP COMMUNICATION FIRMWARE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of the vulnerability allowing access to a boot shell via certain impulses in the IP communication firmware, attackers may gain unauthorized control or manipulate data."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;SECURE COMPARISON LOGIC DESIGN PATTERN&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A secure design pattern ensuring comparison operations are performed as one operation to prevent timing leaks and vulnerabilities."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability arises when a product's design does not sufficiently protect against unauthorized physical access."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;SOFTWARE-CONTROLLED POWER MANAGEMENT FEATURES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Features allowing software to manage power and clock settings can be exploited by attackers if not properly secured."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;ANTI-GLITCH PROTECTIONS LACK&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where a lack of anti-glitch protections allows an attacker to launch physical attacks, potentially bypassing secure boot mechanisms and reading protected eFuses."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;HARDWARE SECURITY MEASURES IMPLEMENTATION SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software or tool used for implementing hardware security measures like the non-executable bit on data areas."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Manipulating the device clock or voltage supply is a technique used to inject faults cheaply with physical access, which can also be done from software."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;LEVEL SENSORS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implemented at the SoC or platform level, these sensors can detect anomalies caused by glitch attacks."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;COMPARISON LOGIC IMPLEMENTATION SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software used for implementing comparison logic that compares step-by-step rather than in a single operation, leading to timing attacks."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product allows address regions to overlap, which can result in the bypassing of intended memory protection and potentially allow privilege escalation attacks."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;ROWHAMMER ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Repeatedly writing to DRAM at high speed from unprivileged software causes bit flips in adjacent memory locations, leading to potential data corruption or information disclosure."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;MICROARCHITECTURAL STATE EXPOSURE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves exploiting microarchitectural state exposure through speculative execution and indirect branch prediction flaws to read privileged memory from a non-privileged context."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS AND DATA EXPOSURE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition involves unauthorized access leading to the exposure of sensitive data due to security check failures."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Gathering power consumption traces can reveal sensitive information through side channel analysis if hardware features like Intel RAPL are not adequately protected."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;BYPASS ACCESS CONTROL MECHANISMS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Using voltage and clock glitch attacks to bypass access control mechanisms implemented in hardware or firmware."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;UNAUTHORIZED ACTOR&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unauthorized actor physically accessing restricted areas intended to have limited access."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;PROPER ACCESS CONTROL FOR PHYSICAL CONDITIONS MANAGEMENT&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring proper access control mechanisms protect software-accessible physical operating conditions (clock frequency, voltage) is recommended to mitigate these attacks."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;SECURE BOOT BYPASS VIA ANTI-GLITCH PROTECTIONS LACK&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The condition that arises when secure boot mechanisms can be bypassed due to the lack of anti-glitch protections."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;PHYSICAL ACCESS CONTROL MECHANISM&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Mechanisms designed and implemented to restrict physical access to certain parts of a product or system as security measures."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;IMPROPER SECURITY LOCK BYPASSING&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Attackers aim to bypass security locks and exploit vulnerabilities through improper access control for power/clock management in hardware designs."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS THROUGH IP COMMUNICATION FIRMWARE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Access gained through exploiting vulnerabilities in IP communication firmware, allowing unauthorized control or data manipulation."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;INCONSISTENT MEMORY ACCESS CONTROL&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Hardware may allow untrusted agents to bypass memory protection by exploiting inconsistent read/write permissions enforced on aliased or mirrored memory regions."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;MANUFACTURING AND OPERATIONAL DEFECTS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Semiconductor defects occurring during manufacturing due to issues in the environment or improper handling, as well as operational defects caused by usage under extreme conditions."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;EXECUTE UNAUTHORIZED CODE OR COMMANDS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting vulnerabilities, attackers may execute unauthorized code or commands on the system."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;CVE-2019-11157 (PLUNDERVOLT)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Improper conditions check in voltage settings for some Intel processors enabling privilege escalation and information disclosure."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A hardware module that is security-sensitive and contains semiconductor defects leading to unexpected faults."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;SPOOFED UPDATE REQUEST&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A type of software used by attackers to send fake update requests to shadow copies, causing them to adopt attacker-friendly values."</data>
  <data key="d2">chunk-6c031a7ff8a513b1dd7b59f833f1ac53</data>
</node>
<node id="&quot;CHIPWHISPERER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A specialized hardware tool used during the implementation phase to check for susceptibility to voltage and clock glitching attacks in actual hardware."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;INTEL PROCESSORS, AMD EXTENSIONS FOR LINUX&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Certain Intel processors and AMD's extension to a Linux service are targeted entities due to their vulnerable power management interfaces."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;SECURE DEBUG INTERFACE&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern involving compromising secure debug interfaces through improper protection against voltage and clock glitches."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;INTEL RAPL INTERFACE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The Intel Running Average Power Limit (RAPL) interface allows software to monitor and manage power consumption on Intel processors. If not properly secured, it can be exploited for side-channel attacks."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;HARDWARE PRODUCT EXPLOITATION GROUP (HPEG)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A group of attackers targeting specific hardware products, likely through vulnerabilities in remapping registers or memory-mapped I/O registers."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;PHYSICAL MANUFACTURING ERRORS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Errors during manufacturing phase can introduce weaknesses into physical access control measures."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;CLFLUSH INSTRUCTION EXPLOIT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An exploit that uses the CLFLUSH instruction to perform Rowhammer attacks and cause bit flips in adjacent memory locations."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;VIRTUALIZATION SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The software that allows the compromise of hardware by accessing certain remapping registers (CVE-2008-7096)."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;FAULTY FSM STATE HANDLING&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attacker uses faulty state handling in finite state machines to cause instability or gain privileges."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;ACCESS CONTROL INADEQUACY IN LINUX KERNEL DRIVER&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Insufficient access control mechanisms in the Linux kernel driver for Intel processors can allow attackers to perform information disclosure through side-channel analysis."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;PROCESSOR DESIGN FLAW EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where ring 0 code can access more privileged rings due to a processor design flaw."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;ROWHAMMER VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability that allows unprivileged software to repeatedly write to DRAM, leading to bit flips in adjacent memory locations (CVE-2015-0565)."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;REGISTER REMAPPING TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A technique used by attackers to exploit overlapping address ranges in memory or remapping registers."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;INFORMATION DISCLOSURE THROUGH SIDE CHANNEL ATTACKS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting hardware vulnerabilities, attackers can perform information disclosure via side-channel analysis."</data>
  <data key="d2">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</node>
<node id="&quot;MEMORY-ACCESS-CONTROL FILTER IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"An effective mitigation against improper handling of single-event upsets and register interface access control issues is the implementation of a memory-access-control filter that applies policies to overlapping ranges."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The use of a cryptographic primitive with a risky implementation is considered a security vulnerability because it can weaken the overall system's encryption strength."</data>
  <data key="d2">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</node>
<node id="&quot;LIMITED-WRITE NON-VOLATILE MEMORIES MANAGEMENT FAILURE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Failure to manage limited-write non-volatile memories correctly leads to potential data integrity issues."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;COMPROMISE HARDWARE PRODUCT SECURITY&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic employed by attackers aiming to compromise the security guarantees provided by hardware products through exploiting design flaws or vulnerabilities."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;CRYPTOGRAPHIC PRIMITIVE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A specific cryptographic algorithm or technique used in systems to secure data, such as digital signatures, hash functions, and ciphers."</data>
  <data key="d2">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</node>
<node id="&quot;UNAUTHORIZED DEBUG SESSIONS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting vulnerabilities, attackers can perform unauthorized debug sessions and access sensitive information."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;FORMAL VERIFICATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Assertions created in formal verification ensure illegal register accesses cannot occur, covering entire design space effectively."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;IMPROPER HANDLING OF OVERLAPPING MEMORY REGIONS AND REGISTER ACCESS CONTROL&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"This precondition involves improper handling of overlapping memory regions and lack of adequate access control for register interfaces, setting the stage for potential exploitation by attackers."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;NON-STANDARD CRYPTOGRAPHY IMPLEMENTATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Using a non-standard implementation of cryptographic primitives can introduce vulnerabilities due to lack of thorough review and testing."</data>
  <data key="d2">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</node>
<node id="&quot;JTAG ACCESS CONTROL MISMANAGEMENT&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Failure to properly manage JTAG access control can expose the system to unauthorized debug sessions."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;CUSTOM CRYPTOGRAPHIC ALGORITHMS DEVELOPMENT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Developing custom or private cryptographic algorithms can expose systems to known attacks by cryptographers."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;CVE-2008-7096: REMAPPING REGISTER VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability allowing compromise of hardware products through accessing certain remapping registers, as documented in CVE-2008-7096."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;CRYPTOGRAPHIC ALGORITHM EVALUATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Reviewing cryptographic algorithms for compliance with standards and ensuring they have undergone rigorous scrutiny from security experts."</data>
  <data key="d2">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</node>
<node id="&quot;PROCESSOR DESIGN FLAW ENABLING RING 0 ACCESS TO PRIVILEGED RANGES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition where a processor design flaw allows ring 0 code to access more privileged rings by causing a register window to overlap a range of protected system RAM, leading to potential security breaches."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;MD5 VULNERABILITY (CVE-2020-4778)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The use of MD5 in software introduces a vulnerability that makes the system less secure compared to using SHA-256."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;ATTACKER EXPLOITATION OF WEAK ALGORITHMS&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where attackers exploit vulnerabilities in weak or non-standard cryptographic implementations to gain unauthorized access to encrypted data."</data>
  <data key="d2">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</node>
<node id="&quot;SECURITY-SENSITIVE MODULES IN HARDWARE PRODUCT&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Hardware modules within products that are sensitive to security concerns and susceptible to single-event upsets (SEUs) leading to compromised security guarantees."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;TUNABLE REPLICA CIRCUITS (TRCS)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"At the circuit level, TRCs can be implemented to mitigate glitch attacks by providing a tunable reference for comparing actual device signals against expected patterns."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;ADVERSARIAL ACCESS TO ENCRYPTED DATA&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the risky implementation, an attacker can potentially read and manipulate encrypted information."</data>
  <data key="d2">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</node>
<node id="&quot;PROCESSOR DESIGN FLAW&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A processor design flaw that allows ring 0 code to access more privileged rings, compromising security-sensitive modules in hardware products."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;PRIVILEGE ESCALATION VIA MEMORY OVERLAP EXPLOIT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attacker can exploit overlapping memory regions to escalate privileges or bypass protection mechanisms."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;MEMORY-ACCESS-CONTROL CHECK FILTER&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A filter designed to apply a policy on overlapping memory ranges and enforce proper handling of overlapping regions to prevent unauthorized access."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;SECURITY-SENSITIVE MODULE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Modules within hardware products that handle sensitive data such as security settings or critical operations, making them potential targets for attacks."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;CHECKSUM USE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Using checksums instead of cryptographically generated hashes can weaken security measures by introducing vulnerabilities."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;SINGLE-EVENT UPSET (SEU)&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Temporary bit flips caused by single-event upsets in hardware, potentially compromising the integrity and security of sensitive modules."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;LINEAR FEEDBACK SHIFT REGISTER (LFSR)&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Using LFSR as a substitute for an accepted and standard Random Number Generator is discouraged due to its potential weaknesses."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;TRIPLE MODULAR REDUNDANCY (TMR) IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation technique that provides redundancy to protect against bit flips or transient errors in security-sensitive hardware modules."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;SECURITY REVIEW AGAINST TRANSFER OF ATTACK TARGET&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Reviewing whether protections against glitching merely transfer the attack target, as depending on such protections can be akin to Security by Obscurity."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;CVE-2019-18827&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific case of CWE-1191, allowing full system access before secure boot initialization completes."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;SHA-2 CHAINING FOR ENCRYPTION IDEA (DISCOURAGED)&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The idea of using SHA-2 chaining for encryption purposes is discouraged because it might be misused in ways that compromise security."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;ERROR-CORRECTING CODES (ECC) AND ADDRESS INTERLEAVING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation technique involving SRAMs with Error-Correcting Codes and address interleaving to protect against single-event upsets in security-critical data."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;IMPROPER MEMORY-MAPPED I/O REGISTERS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where memory-mapped I/O registers lack proper access control, allowing unauthorized software to tamper with hardware functionality and potentially violate confidentiality or integrity."</data>
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</node>
<node id="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Incorrectly implemented circuitry or sensors that fail to detect and mitigate voltage and clock glitches, potentially allowing attackers to exploit the system."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;READ MEMORY AND MODIFY MEMORY OPERATIONS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Exploiting voltage and clock glitches to execute unauthorized read or modify memory operations on the device's hardware."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;FREQUENT KEY UPDATES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Regularly updating keys limits the amount of data available for analysis by an attacker in a power or timing attack."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;ATTACKER ENTITY (NOT NAMED)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker may exploit undocumented features or chicken bits and sensitive non-volatile information not protected during debug to gain unauthorized access."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where attackers exploit comparison logic that is performed in steps rather than across the entire string in one operation."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves exploiting undocumented features or chicken bits on a device to disable security features or obtain entry points for unauthorized access."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Accessing security-sensitive information stored in fuses during debug operations without proper protection can lead to exposure of critical data."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;PREDICTABLE ALGORITHM IN RANDOM NUMBER GENERATOR (CWE-1240)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A device using a predictable algorithm generates pseudo-random numbers, leading to compromised randomness and exposure of internal states."</data>
  <data key="d2">chunk-5d9aa46e1c0b88bd33dd6122a455f98b</data>
</node>
<node id="&quot;DISABLING CHICKEN BITS IN PRODUCTION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensure that chicken bits are disabled in production devices to prevent unauthorized access."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"An IP communication firmware vulnerability allowing access to a boot shell through certain impulses, which can be exploited for unauthorized control or data manipulation."</data>
  <data key="d2">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</node>
<node id="&quot;PROTECTING SENSITIVE INFORMATION DURING DEBUG OPERATIONS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Disable access to security-sensitive information stored in fuses directly and reflected from temporary storage locations when in debug mode."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;IMPROPER WRITE HANDLING IN NON-VOLATILE MEMORIES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product does not correctly implement wear leveling operations in limited-write non-volatile memories, potentially causing data integrity issues."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;EXPLOITING SECURITY TOKEN ASSIGNMENT WEAKNESSES PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where attackers exploit the improper assignment of security tokens to gain unauthorized access."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;HARDWARE MEMORY AND REGISTER BIT MODIFICATION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"An attacker can modify hardware memory or register bits, leading to security breaches through improperly restricted software interfaces."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;ATTACKER (NOT EXPLICITLY NAMED)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unspecified attacker who exploits vulnerabilities to gain unauthorized access."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;SECURITY-SENSITIVE INFORMATION (STORED IN FUSES)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Access to security-sensitive values programmed into fuses during debug operations is not limited, leading to potential exposure of critical data."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;MANIPULATION OF POWER MANAGEMENT FEATURES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Improperly secured power management features are a prerequisite for mounting fault injection and side-channel attacks via software control."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;ACCESS CONTROL MECHANISMS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Various hardware and firmware-based mechanisms that provide access control to sensitive information or software on the device."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;DEVICE WITH UNDOCUMENTED FEATURES/CHICKEN BITS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The device that includes chicken bits or undocumented features can be targeted for unauthorized access due to these design elements."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;SECURITY TOKEN EVALUATION AGAINST REFERENCE VALUE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Evaluation of security tokens against a reference value is necessary before the side-channel attack can be effective."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;SECURE BOOT PROCESS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Ensuring a trusted environment for the operating system by validating each stage of the boot process before transferring control."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;CWE-1242&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A true random number generator should be implemented for cryptographic algorithms to prevent exploitation of undocumented features or chicken bits that can create entry points for unauthorized actors."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;EXPLOITING VULNERABILITIES FOR UNAUTHORIZED ACCESS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves exploiting vulnerabilities to gain unauthorized access and control over system features."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;RANDOM DATA ADDITION IN CRYPTO OPERATIONS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Adding random data before and subtracting it after cryptographic operations can mask side-channel information but incurs performance overhead."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;INSECURE SECURITY CHECKS LOGIC IMPLEMENTATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"An insecure implementation of security checks logic in hardware is a prerequisite for attackers to exploit vulnerabilities."</data>
  <data key="d2">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</node>
<node id="&quot;CVE-2021-3692&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens, which is a predictable pseudo-random number generator and not suitable for cryptographic algorithms."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;SENSITIVE HARDWARE FEATURES ACCESSIBLE THROUGH SOFTWARE INTERFACE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability lies in providing unrestricted access via software interfaces to device functionalities like power and clock management."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting CWE-1244, sensitive information can be exposed to unauthorized agents through improperly configured debug interfaces."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;DESIGN CHANGE DURING IMPLEMENTATION PHASE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The design originally specifies a cryptographically secure random number generator but changes during implementation due to unforeseen constraints."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;FUSE VALUES CONFIGURATION SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The software used by an attacker to incorrectly set fuse values, leading the system into an insecure state."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;PHYSICAL PRODUCT MANUFACTURING PHASE WEAKNESSES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Weaknesses introduced during the manufacturing phase that compromise the intended level of physical security."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"Using mt_rand() function in PHP frameworks can lead to predictable token generation, making systems vulnerable to attacks."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;SECURE SYSTEM DESIGN IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing secure system design practices that ensure blown fuses do not put the product into an insecure state."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;MD5 HASH VULNERABILITY (CVE-2005-2946)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Identity card uses MD5 hash of a salt and password, leading to potential vulnerabilities due to MD5's weaknesses."</data>
  <data key="d2">chunk-5d9aa46e1c0b88bd33dd6122a455f98b</data>
</node>
<node id="&quot;MALICIOUS AGENT&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A malicious actor exploiting improper access control policies to gain unauthorized access."&lt;SEP&gt;"A malicious agent exploiting a resource access control flaw to gain unauthorized access and manipulate resources."&lt;SEP&gt;"A malicious agent that can improperly program a Security Token to spoof actions as if they originated from a trusted agent."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98&lt;SEP&gt;chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;UNDOCUMENTED DEBUG INTERFACES EXPLOITATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Exploiting undocumented debug interfaces for unauthorized access and modification of security-sensitive information."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;IMPROPER RESTRICTION OF SOFTWARE INTERFACES TO HARDWARE FEATURES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where software interfaces improperly limit or do not restrict functionalities that can affect hardware, such as power management features."</data>
  <data key="d2">chunk-6a4dfbf47077a5469d7329b776a196c9</data>
</node>
<node id="&quot;RESTRICTED INFORMATION EXPOSURE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"When the improper physical access control leads to exposure of restricted information due to insufficient protection measures."</data>
  <data key="d2">chunk-1a161ab7512e03998cff099072c50818</data>
</node>
<node id="&quot;TRUE RANDOM NUMBER GENERATOR IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing a true random number generator is recommended to avoid predictable pseudo-random numbers in cryptographic algorithms."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;COMPROMISE SYSTEM SECURITY&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves exploiting improper protection against voltage and clock glitches to gain unauthorized privileges or access sensitive information."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;HARDWARE-BASED SECURITY FEATURES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Hardware-based security features such as secure boot, access controls, and debug interfaces that can be compromised by attackers."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;SECURITY-SENSITIVE INFORMATION STORED IN FUSES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Access to security-sensitive information stored in fuses during debug operations can be exploited due to lack of proper protection."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;PROPER IMPLEMENTATION OF SECURE BOOT AND PROTECTION LOGIC&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing robust circuitry and sensors to detect and mitigate voltage and clock glitches, ensuring secure boot processes cannot be circumvented."</data>
  <data key="d2">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</node>
<node id="&quot;MD4 ALGORITHM USE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The use of MD4 algorithm as a default configuration can introduce vulnerabilities and should be avoided in new implementations."</data>
  <data key="d2">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</node>
<node id="&quot;IMPLEMENTATION OF CHICKEN BITS IN DEVICES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The implementation phase includes chicken bits or undocumented features that can create entry points for unauthorized access."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;INCORRECT FUSE VALUES SETTING TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique of incorrectly setting fuse values to drive the system into an insecure state."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;UNAUTHORIZED CODE EXECUTION POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Unauthorized code execution resulting from exploiting system vulnerabilities, leading to potential compromise of integrity and availability."</data>
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</node>
<node id="&quot;SECURITY TOKEN IMPROPER ASSIGNMENT PROTECTION WEAKNESS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Improper handling of overlap between protected memory ranges and security token assignment issues are conditions necessary for exploitation by attackers."</data>
  <data key="d2">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</node>
<node id="&quot;SENSITIVE NON-VOLATILE INFORMATION PROTECTION DURING DEBUG MODE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Disabling access to security-sensitive information stored in fuses and temporary storage locations during debug mode is recommended."</data>
  <data key="d2">chunk-0204407c5971063b3d859036310a63a1</data>
</node>
<node id="&quot;SECURE BOOT BYPASSING ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where an attacker exploits the ability to access JTAG/debugging ports before secure boot initialization completes."</data>
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</node>
<node id="&quot;HPEG&quot;">
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
  <data key="d1">"The HPEG group exploits vulnerabilities in virtualization software, such as the one documented in CVE-2008-7096."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;CWE-1191 AND CWE-1244&quot;">
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
  <data key="d1">"Both vulnerabilities can arise from faulty FSM designs that do not account for all possible states or transitions."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;MD5 HASH ALGORITHM&quot;">
  <data key="d2">chunk-5d9aa46e1c0b88bd33dd6122a455f98b</data>
  <data key="d1">"The MD5 hash vulnerability exploits the weaknesses in the MD5 algorithm."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;TRIPLE MODULAR REDUNDANCY (TMR)&quot;">
  <data key="d2">chunk-25f73985e28c5422bb14dc5727705f9e</data>
  <data key="d1">"Triple modular redundancy mitigates the impact of single-event upsets on security-sensitive hardware modules."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;ACCESS CONTROL SYNCHRONIZATION BETWEEN MPU&quot;">
  <data key="d2">chunk-2cef8319ae87f01f627389db9b2b7646</data>
  <data key="d1">"Mitigates inconsistencies in access protections by ensuring synchronization across MPUs protecting aliased regions."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;SYSTEM INSTABILITY AND PRIVILEGE ESCALATION&quot;">
  <data key="d2">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
  <data key="d1">"Exploiting faulty FSM states can lead to system instability or gaining additional privileges."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;CRYPTOGRAPHIC PRIMITIVE EVALUATION&quot;">
  <data key="d2">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
  <data key="d1">"Ensuring cryptographic algorithms are properly evaluated helps mitigate risks associated with non-standard implementations."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;INCORRECT COMPARISON LOGIC GRANULARITY ISSUE&quot;">
  <data key="d2">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
  <data key="d1">"Postconditions involving timing attacks result from exploiting issues with comparison logic granularity."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;CVE-2021-33150 AND CVE-2021-0146 VULNERABILITIES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"These vulnerabilities involve hardware processors allowing activation of test or debug logic at runtime, enabling potential escalation of privileges and manipulation of system settings."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;MODERN PROCESSORS WITH SHARED RESOURCES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Hardware architecture targeted by these vulnerabilities, involving shared microarchitectural resources."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;PREVENT DATA LEAKAGE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of ensuring sensitive data is properly removed or overwritten during product decommissioning to prevent unauthorized access."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;INSTRUCTION SEQUENCE EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting combinations of processor instructions leading to undesirable and potentially security-critical behavior."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;INTEL CHIPSETS AND SIMATIC DEVICES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entities include Intel chipsets and Siemens SIMATIC S7-1200 and S7-200 SMART CPU families that are vulnerable during manufacturing."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;SOC AND MICROCONTROLLER HARDWARE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Microcontroller hardware and SoCs are the target entities of attacks exploiting unprotected alternate hardware interfaces or physical side channels."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;SENSOR VALUE MANIPULATION LEADING TO DOS OR HARDWARE DAMAGE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postconditions include sensor value manipulation leading to a Denial-Of-Service (DoS) condition or physical damage due to bypassing safe operational limits."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;INCOMPLETE REMOVAL PROCEDURES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Inadequate procedures for removing sensitive data from a device before it is decommissioned can be exploited by attackers."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Exploiting specific instruction sequences in the processor's ISA can lead to unexpected behaviors such as CPU lock-ups or DoS conditions."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;HARDWARE-SENSOR BLOCKS AND FABRIC END-POINT DEVICES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Hardware-sensor blocks and fabric end-point devices are the targets of potential attacks, involving manipulation of parametric data values and enabling unauthorized control over system transactions."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;SENSITIVE DATA VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability arises when sensitive data remains accessible after the product has been decommissioned, posing risks of unauthorized access."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;RIGOROUS TESTING STRATEGY AND PATCHING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implement a rigorous testing strategy during architecture/design phase to identify dangerous instruction sequences. Patch OS to avoid running dangerous sequences or mitigate damage caused by them."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;ATTACKER (UNDISCLOSED)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An undisclosed attacker who may exploit hardware vulnerabilities to compromise system integrity or confidentiality."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;DATA ACQUISITION AND EXPLOITATION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Attackers can acquire sensitive data left on a decommissioned device, potentially leading to exploitation or data leakage."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;LOSS OF DATA INTEGRITY AND AVAILABILITY&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic is to cause loss of data integrity and system availability through exploiting processor hardware vulnerabilities."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product does not ensure the integrity of the configuration state during power save/restore operations, potentially allowing an attacker to alter configurations stored in persistent memory and compromise system security."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;IMPROPERLY PRESERVED INTEGRITY ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where an attacker exploits the lack of integrity verification during power save/restore operations."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;DECOMMISSIONED DEVICE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entity is the product that has been taken out of service but still retains sensitive data accessible by attackers."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;INSTRUCTION SET ARCHITECTURE BUGS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Unspecified attackers need to identify and leverage specific combinations of legal and illegal instructions or bugs in the ISA."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;SENSITIVE INFORMATION EXPOSURE THROUGH SIDE CHANNELS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"An adversary might be able to recover secret keys and data by monitoring hardware operation and correlating it with power, EME, and acoustic measurements."</data>
  <data key="d2">chunk-350f1de43053ea2973652d98a983f7fb</data>
</node>
<node id="&quot;NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Modern processors share hardware resources across execution contexts, violating architectural isolation and opening covert channels for information leakage between contexts through caches, branch predictors, etc."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;MALICIOUS ACTOR&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A malicious actor is an individual or group that aims to reverse engineer integrated circuits (ICs) for the purpose of producing and selling counterfeit versions."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;OBSOLETE ENCODING MECHANISM&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software mechanism used for encoding access controls that is no longer trusted or secure."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A bug in AMD CPU's core logic allows a DoS by using a specific x86 instruction sequence to hang the processor, affecting system integrity and availability."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;UART INTERFACE ACCESS DURING BOOT PROCESS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attacker can exploit this technique by accessing the UART interface during the boot process of S7-1200 CPUs and S7-200 SMART CPUs."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;PARTITIONED CACHES AND BARRIER/FLUSH INSTRUCTIONS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Hardware and software techniques such as partitioned caches and new barrier/flush instructions can mitigate microarchitectural side-channel attacks by preventing unauthorized data leaks."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;POLICY USES OBSOLETE ENCODING PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where the use of an obsolete encoding mechanism leads to vulnerabilities in security tokens and transactions."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-1999-1476)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A bug in some Intel Pentium processors allows a DoS via an invalid CMPXCHG8B instruction causing deadlock, impacting the processor's ability to function properly."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability pertains to hardware components where data removal processes do not completely delete all data, leaving sensitive information retrievable due to residual physical characteristics of the media."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;ACCESS CONTROL INCONSISTENCY TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A technique that exploits privilege discrepancies between control and write policies in hardware-enforced access controls."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;PROCESSOR HARDWARE WITH VULNERABLE INSTRUCTIONS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Processors that contain vulnerable instruction sequences or hardware bugs are the targets of attacks leading to unexpected behavior and security breaches."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;MISSING SECURITY IDENTIFIER IN ENTITY TRANSACTIONS ON A SYSTEM-ON-CHIP (SOC) VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A weakness that can exist when source agents in SoC transactions do not consistently include necessary security identifiers, potentially leading to denial-of-service or privilege escalation issues."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;SECURITY TOKEN DECODER REVIEW&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Reviewing and testing security token decoders to ensure they are consistent and free of common weaknesses."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;UNSPECIFIED ATTACKER 2&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Another unspecified attacker who could exploit vulnerabilities in the way assets are stored or managed."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where hardware structures shared across execution contexts (e.g., caches and branch predictors) violate expected architectural isolation between contexts."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;INCORRECT SECURITY IDENTIFIER DECODING&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A common weakness where incorrect decoding allows an untrusted agent to gain unauthorized access due to a trusted security identifier."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;COUNTERFEIT PRODUCTION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of producing and selling counterfeit versions of integrated circuits is driven by the goal of exploiting hardware secrets extracted via reverse engineering."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;CONSISTENT POLICY IMPLEMENTATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of ensuring that hardware-enforced access control policies are consistently applied between agents."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;WRITABLE MEMORY VULNERABILITIES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Vulnerabilities arise when immutable data such as bootloaders and keys are stored in writable memory, allowing unauthorized modifications."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;MISSING SOURCE IDENTIFIER PRECONDITION VULNERABILITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition for this vulnerability is that the source agent does not consistently include necessary Security Identifiers in transactions on a System-On-Chip (SoC), leading to potential DoS or privilege escalation scenarios."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;PRIVILEGE DISCREPANCY INCONSISTENCY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Inconsistent privilege assignments in policy enforcement can be exploited by attackers to gain unauthorized access."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;STORING ASSETS IN WRITABLE MEMORY PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The pattern involves storing critical security assets like bootloaders or keys in writable memory rather than read-only memory."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;PRIVILEGE ESCALATION THROUGH MISSING SECURITY IDENTIFIER TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"A tactic where missing security identifiers in transactions on a SoC can be exploited to escalate privileges or provide unintended access, compromising system confidentiality, integrity, availability, and access control."&lt;SEP&gt;"A tactic where missing security identifiers in transactions on a System-On-Chip can be exploited to escalate privileges or provide unintended access, compromising confidentiality, integrity, availability, and access control."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;ACCESS CONTROL POLICY WEAKNESS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability arising from inconsistent privilege assignments between control and data agents within hardware-enforced policies."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique where an attacker modifies immutable data stored in writable memory to compromise system integrity and trust."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;EXPLOIT OF ACCESS-CONTROL MISCONFIGURATION DURING IMPLEMENTATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An untrusted agent gains unauthorized access by exploiting misconfigured access controls during implementation."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;HARDWARE REMANENCE PHENOMENON PRECONDITION VULNERABILITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"This precondition involves residual physical characteristics like magnetic media remanence, screen burn-in, and charge residuals that persist after data removal or erasure attempts."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;PHYSICAL TAMPERING DETECTION MECHANISM&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Detection mechanisms that can identify when an IC is being tampered with, potentially triggering defensive actions such as erasing information."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO RESOURCES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Attackers can exploit inconsistencies in policy privileges to gain unauthorized access to sensitive resources."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;IMMUTABLE CODE AND DATA PROTECTION STRATEGY&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Strategy involving programming all immutable code or data into ROM or write-once memory for stronger security guarantees."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where an attacker exploits shared hardware resources to leak information between isolated execution contexts through covert channels."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;GAIN PRIVILEGES THROUGH CONFIGURATION ALTERATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An attacker's tactic of modifying configuration settings to gain unauthorized access or escalate privileges."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;TRUSTED FIRMWARE OR SOFTWARE MODULES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Trusted firmware or software modules that provide access to hardware resources and are subject to policy-enforced access controls."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;COMPROMISED ROOT OF TRUST&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves compromising the root of trust by modifying immutable assets in writable memory, undermining system integrity."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;MISSING PROTECTION MECHANISM FOR ALTERNATE HARDWARE INTERFACE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability allows attackers to access control-protected assets through alternate paths that lack protection mechanisms."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;TVLA LEAKAGE DETECTION TESTS AND PENETRATION TESTING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Perform leakage detection tests such as the Test Vector Leakage Assessment (TVLA) test requirements for AES and perform full side-channel attacks covering known leakage models against test code."</data>
  <data key="d2">chunk-350f1de43053ea2973652d98a983f7fb</data>
</node>
<node id="&quot;DECAPSULATION AND HIGH-RESOLUTION IMAGING PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"This pattern involves the removal of chip packaging followed by high-resolution imaging techniques to reveal information stored within an integrated circuit."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;ADVERSARIES&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Adversaries could bypass the secure-boot process and execute their own untrusted, malicious boot code."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;LACK OF SECURE STORAGE PRACTICES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Unspecified attackers may exploit a lack of secure storage practices where critical security assets are stored improperly."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability exists when critical security assets like bootloaders or keys are stored insecurely in writable memory, leading to potential compromises."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;SECURE BOOT PROCESS BYPASS&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves adversaries bypassing the secure boot process to execute unauthorized code."&lt;SEP&gt;"The attack pattern involves adversaries bypassing the secure-boot process to execute unauthorized code."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;PROCESSOR AND MEMORY SYSTEM&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The processor hardware and memory system are the targets of attacks aimed at exploiting vulnerabilities related to instruction sequences and data immutability."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;MISSING SECURITY IDENTIFIER PRIVILEGE ESCALATION POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition is that an attacker can escalate privileges or gain unintended access in a SoC when security identifiers are missing from transactions, affecting system confidentiality, integrity, availability, and access control."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE (CWE-1304)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Another key vulnerability focusing on the lack of integrity checks during power operations."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;VOLATILE MEMORY MANIPULATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Adversaries manipulate volatile memory containing bootloader code during the secure-boot process."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;UNKNOWN ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker who exploits vulnerabilities to gain unauthorized access to sensitive information."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;SHADOW REGISTERS EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves exploiting unprotected shadow registers within IP cores or SoCs to compromise system security."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;IMPROPER VOLATILE MEMORY PROTECTION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Insufficient protections for volatile memory allow adversaries to modify boot code and execute unauthorized commands."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE DEBUG/POWER STATE TRANSITION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The product does not clear sensitive information during state transitions, potentially leading to information leakage."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;INTEGRATED CIRCUIT (IC) IMAGING TECHNIQUES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Techniques such as scanning electron microscopy are used by attackers to capture and analyze images of ICs in order to reverse engineer hardware secrets."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;VOLATILE MEMORY (VM)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Volatile memory is a critical target during the secure-boot process where it contains bootloader code transferred from NVM."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;DEVICE UNLOCK CREDENTIAL SHARING&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Credentials required for unlocking a device are shared among multiple parties, increasing the risk of compromise."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;DEFENSE IN DEPTH IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing defense in depth by protecting assets against all potential interfaces and paths can mitigate this vulnerability."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;UNDISCLOSED ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unspecified attacker who may exploit the improperly preserved integrity of hardware configuration states to compromise system security."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;NON-VOLATILE MEMORY (NVM)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Non-volatile memory stores bootloader code that needs to be transferred to volatile memory for execution during boot."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;RACE CONDITION IN HARDWARE LOGIC&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A timing error or glitch in hardware logic circuits used for security-sensitive operations can lead to unauthorized access or privilege escalation."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;SECURE BOOT PROCESS EXECUTION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Execution of an adversary's code after bypassing the secure-boot process could lead to unauthorized system control and data modification."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;CWE-200: EXPOSURE OF SENSITIVE INFORMATION TO AN UNAUTHORIZED ACTOR&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An attacker aims to exploit sensitive information exposure to gain unauthorized access or modify system configurations."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;SECURITY IDENTIFIER DECISION-MAKING PROCESS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A process by which the destination agent uses a security identifier to determine allowed actions on an asset."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;ARCHITECT AND DESIGN REVIEW&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Carrying out thorough reviews of the architecture and design phases helps ensure secure configurations are maintained."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;TESTING ACCESS AND PROGRAMMING FLOWS DURING PRE-SILICON AND POST-SILICON PHASES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Access and programming flows must be tested in pre-silicon and post-silicon phases to identify weaknesses."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS CONTROL&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"To mitigate risks, access controls should be enforced for volatile memory during the boot process."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;CVE-2020-12926&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Product software does not set a flag as per TPM specifications, preventing failed authorization attempts from being recorded after power loss."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;ACCESS CONTROL LOGIC RACE CONDITION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A specific attack technique involving exploiting race conditions in hardware logic to undermine access control mechanisms."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where sensitive information remains uncleared before power or debug state transitions, potentially exposing data to unauthorized access."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;BOOTLOADER CODE TRANSFER&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The transfer of bootloader code from non-volatile to volatile memory is necessary but can expose vulnerabilities if unprotected."</data>
  <data key="d2">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</node>
<node id="&quot;POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Failure to properly manage state transitions can lead to the exposure of sensitive information."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;FINITE STATE MACHINES RACE CONDITIONS EXPLOITATION&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern that involves exploiting race conditions within finite state machines to bypass security protections."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;MALICIOUS SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Malicious software that could be used by an attacker to misconfigure address ranges, leading to overlaps between protected and unprotected regions."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;CREDENTIAL SHARING AMONG MULTIPLE PARTIES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Sensitive credentials are shared among multiple parties involved in device manufacturing, increasing risk."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;PRODUCT ADMINISTRATOR&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"The product administrator may improperly handle sensitive data removal during decommissioning, leaving it vulnerable."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;CONFIDENTIALITY BREACH THROUGH SECRET EXTRACTION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"A confidentiality breach occurs when malicious actors successfully extract secrets from hardware."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;ADDRESS MAP OVERLAP EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where an attacker exploits the overlap of protected and unprotected address ranges in the system's on-chip fabric."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;MEMORY DUMP CAPABILITY ACTIVATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Activating debug capabilities through unlocked devices may expose memory dump capabilities to unauthorized users."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;ACTIVE SHIELDING AGAINST REVERSE ENGINEERING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Using active shielding techniques to prevent or detect attempts at reverse engineering integrated circuits."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The specific technique used by an attacker to send transactions that exploit overlapping addresses, thereby bypassing access controls."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;TPM SPECIFICATION COMPLIANCE FAILURE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Failure to comply with TPM specifications can lead to vulnerabilities in authorization recording."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;SECURE COMMUNICATION BETWEEN OSAT AND CHIPMAKER&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring secure communication channels between the chipmaker and the OSAT vendor helps protect against unauthorized access or data leaks."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;EXTERNAL INTEGRITY CHECK BY TRUSTED AGENT&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"An external trusted agent performs an integrity check on the configuration state before powering down and upon restore, ensuring security.""</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;ISOLATION OF PROTECTED AND UNPROTECTED RANGES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation strategy ensuring protected and unprotected ranges in the address map do not overlap, preventing unauthorized access."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;PROCESSOR HARDWARE VULNERABILITIES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Processor hardware contains vulnerabilities that can be exploited through specific instruction sequences leading to unexpected behavior such as DoS conditions."</data>
  <data key="d2">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</node>
<node id="&quot;INFORMATION LEAKAGE PREVENTION DURING STATE TRANSITIONS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing proper clearing of sensitive information during state transitions can prevent unauthorized access."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to variations in power consumption, electromagnetic emissions (EME), or acoustic emissions."&lt;SEP&gt;"This vulnerability allows sensitive information exposure through patterns in physically observable phenomena such as power consumption, electromagnetic emissions (EME), or acoustic emissions."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b&lt;SEP&gt;chunk-350f1de43053ea2973652d98a983f7fb</data>
</node>
<node id="&quot;INTEGRITY CHECK INSIDE IP&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Incorporating an integrity check mechanism inside the IP ensures configuration state integrity during power cycles."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;RESIDUAL CONFIDENTIAL INFORMATION REMOVAL POST-SI TESTS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Post-silicon tests to ensure removal of residual confidential information before parts leave one facility for another."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;BYPASS ACCESS CONTROL&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of an attacker attempting to bypass existing protection mechanisms by exploiting overlapping address ranges."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;STATE TRANSITION SENSITIVE INFO LEAKAGE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where sensitive information is not cleared during state transitions, potentially leading to exposure."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;PHYSICAL SIDE CHANNEL EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves exploiting physical side channels to expose sensitive information due to variations in power consumption, EM emissions, and acoustic emissions."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;MINIMAL TEST INTERFACE ACCESS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Ensuring that OSAT vendors only have access to the minimal necessary test interfaces and information during pre-production stages."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;ADDRESS RANGE CONFIGURATION MISTAKES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Incorrect configuration or intentional misconfiguration of address ranges by malicious software can create overlaps as prerequisites for the attack."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;CREDENTIAL SHARING RISK&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The risk associated with sharing unlock credentials among multiple parties involved in device manufacturing processes."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;PERSISTENT STORAGE VULNERABILITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A prerequisite vulnerability involving storage mechanisms used for saving states, which can be exploited if integrity checks are not in place."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability arises when there is an overlap between protected and unprotected address ranges in the on-chip fabric, allowing potential unauthorized access."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;TPM SPECIFICATION NON-COMPLIANCE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Failure to adhere to Trusted Platform Module (TPM) specifications during state transitions can lead to vulnerabilities like CVE-2020-12926."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;HARDWARE-ENFORCED ACCESS CONTROL POLICY&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The hardware-enforced access control policy that improperly accounts for privilege discrepancies between control and write policies."&lt;SEP&gt;"The software responsible for managing hardware-enforced access controls."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;COMPROMISE OF SYSTEM PROTECTIONS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploitation leads to a breach of system security, bypassing protection mechanisms for overlapping sections of memory or IO space.""</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;DEBUG CAPABILITY ACTIVATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Activating debug capabilities of a device that are normally locked in production can expose memory dump functionalities to unauthorized users."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;IMPROPER PRIVILEGE HANDLING IN HARDWARE POLICIES PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern involving improper handling of privileges leading to unauthorized access."&lt;SEP&gt;"An attack pattern where improper handling of privileges leads to unauthorized resource access by untrusted agents."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;IMMUTABLE CODE/DATA PROGRAMMING REQUIREMENT&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Requirement to program immutable code or data into ROM/write-once memory as a mitigation against modifiable attestation/measurement data."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;ON-CHIP FABRIC ADDRESS MAP&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The address map in the on-chip fabric of a hardware design is the target that could be affected by overlaps between protected and unprotected regions."</data>
  <data key="d2">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</node>
<node id="&quot;STATE TRANSITION SECURITY MEASURES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing security measures during state transitions to prevent the leakage of sensitive information."</data>
  <data key="d2">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</node>
<node id="&quot;UNINTENTIONAL POLICY INSERTION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique where an untrusted agent is inserted into the policy register due to hardware flaws."&lt;SEP&gt;"The technique whereby an untrusted agent is inserted into the write policy register due to a flaw in the hardware-enforced access control system."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;RUNTIME ACTIVATION OF TEST/DEBUG FEATURES&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Activating test or debug features at runtime can lead to unauthorized access and manipulation of system settings, including sensor data and fabric end-point capabilities."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;UNSPECIFIED ATTACKER GROUP&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unspecified attacker group can exploit vulnerabilities that allow unauthorized access to sensitive information during the manufacturing or assembly process."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;PUBLIC KEY REUSE VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The same public key is used to sign both debug and production code, allowing an attacker to use a debug firmware image on a production system if compromised."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;COMPREHENSIVE TESTING OF ACCESS-CONTROL POLICIES AND FLOWS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Testing during pre-silicon/post-silicon phases ensures proper implementation of access controls."&lt;SEP&gt;"Thorough testing during pre-silicon and post-silicon phases ensures proper implementation of access-control policies."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;IMPLEMENTING ACCESS CONTROLS FOR SENSOR BLOCKS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Access controls should be implemented to ensure that only trusted software is allowed to change threshold limits and sensor parametric data."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;DEBUG MESSAGE LEAKAGES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Various debug messages contain sensitive information such as memory addresses and cryptographic keys, which can be leaked under certain conditions."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;FIRMWARE DEBUGGING KEYS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Using the same debugging keys for production opens up vulnerabilities that can be exploited by attackers."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;MODIFICATION OF DEVICE CONFIGURATION TO GAIN UNAUTHORIZED CONTROL&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Malicious agents aim to modify device configurations for unauthorized control, compromising security."&lt;SEP&gt;"The tactic involves modifying device configurations for unauthorized control."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;IMPROPER FABRIC ATTRIBUTE TRANSLATION MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Correcting the translation of security attributes in bridges during design and implementation phases mitigates potential security breaches."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;SHARED MICROARCHITECTURAL RESOURCES VULNERABILITY (CWE-1189)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The main vulnerability described, involving shared hardware resources leading to information leakage."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;ASLR BYPASS EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attacker could exploit vulnerabilities in debug components to bypass Address Space Layout Randomization (ASLR) protections and gain unauthorized access to system resources."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;USE DIFFERENT PUBLIC KEYS FOR PRODUCTION AND DEBUGGING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"To mitigate this vulnerability, different public keys should be used for production and debugging phases."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;BLINDING OR MASKING TECHNIQUES, SHIELDING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Apply blinding or masking techniques to cryptographic algorithms and add shielding or tamper-resistant protections to the device to increase measurement difficulty."</data>
  <data key="d2">chunk-350f1de43053ea2973652d98a983f7fb</data>
</node>
<node id="&quot;INSECURE FABRIC BRIDGE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The integration of different fabric protocols in a system-on-chip (SoC) can introduce security vulnerabilities if improperly managed."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;DEBUG MODE EXPLOITATION PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Exploitation requires the existence of debug modes and their vulnerabilities as prerequisites."&lt;SEP&gt;"The existence of debug modes with override capabilities and additional vulnerabilities that can be exploited by attackers."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves exploiting weaknesses in the protection mechanisms of a chip or system, such as incorrect chaining or granularity of debug components."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TO SYSTEM CAPABILITIES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"If an attacker gains access to the debug firmware image using a compromised key, they can run it on a production machine with full capabilities."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;HARDWARE DEVICE (NOT NAMED)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A generic hardware device that is vulnerable due to improper protection of physical side channels."</data>
  <data key="d2">chunk-350f1de43053ea2973652d98a983f7fb</data>
</node>
<node id="&quot;PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where hardware policies improperly handle privilege discrepancies."&lt;SEP&gt;"A vulnerability where hardware-enforced access control policies improperly handle privilege discrepancies, leading to security compromises."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;ACCESS CONTROL MEASURES REVIEW&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Review and enhance access control measures to ensure that debug components are properly chained and accessible only at appropriate authorization levels."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;INSECURE CONVERSION OF SECURITY IDENTIFIERS VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Incorrect conversion mechanism implemented for mapping bus-transaction signals to security identifiers could allow untrusted agents unauthorized access to assets."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;IMPLEMENTING FIRMWARE UPDATE MECHANISMS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Security measures include designing and implementing mechanisms to update firmware, ensuring security updates can be applied."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;UNINTENTIONAL EXPOSURE AND COMPROMISE OF RESOURCES POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the flaw, resources can be unintentionally exposed or compromised, affecting system integrity."&lt;SEP&gt;"Exploitation leads to unintended exposure or compromise of resources, affecting system integrity."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;UNAUTHORIZED SYSTEM ACCESS TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves gaining unauthorized access to the system, possibly through exploitation of vulnerabilities in debug components or other security weaknesses."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;PROTOCOL CONVERSION BRIDGE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A bridge is needed between different protocols (AHB-to-OCP) and if its implementation is incorrect, it can lead to vulnerabilities."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;EXPLOITATION OF NON-UPDATEABLE FIRMWARE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves exploiting vulnerabilities in non-updatable firmware for unauthorized access or control."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;TRUSTED FIRMWARE AND SOFTWARE MODULES WITH ACCESS TO CRITICAL RESOURCES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Critical hardware and software components that are targets for exploitation due to improper access control policies."&lt;SEP&gt;"Critical hardware/software components targeted due to improper access control policies."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;INCORRECT DEBUG COMPONENT CHAINING AND GRANULARITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Debugging and testing a chip can lead to incorrect chaining or granularity issues among debug components if not properly managed."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;PROPER PROTOCOL TRANSLATION IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing proper protocol translation at bridges connecting different bus-transaction signal protocols helps mitigate unauthorized access risks."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;SOFTWARE UPDATE MECHANISM FAILURE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The software or mechanism responsible for updating the firmware is lacking, leading to an inability to patch security vulnerabilities."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;DEBUG HOOKS AND CAPABILITIES IN PRE-PRODUCTION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Tools/mechanisms allowing override of security checks during pre-production or manufacturing stages."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;OCP PROTOCOL SECURITY BREACH&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Incorrect translation of MReqInfo and SRespInfo signals in the OCP protocol can result in improper security handling.""</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;DISABLING HIGH-RESOLUTION PERFORMANCE COUNTERS AND TIMERS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Disabling high-resolution performance counters and timers can help mitigate microarchitectural side-channel attacks by reducing the precision of timing-based leakage."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;VULNERABILITY ID: HWPSIRT-2019-10114 &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Improper authorization vulnerability in smartphones allows attackers to switch to third desktop after a series of operations in ADB mode, leading to unauthorized access."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;DEBUG MODE FEATURES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"During development, debug modes provide extensive access to system capabilities that can be exploited if not secured properly."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;ALTERNATE HARDWARE INTERFACE ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"This pattern involves attacking through unprotected alternate hardware interfaces to access control-protected assets."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;PRODUCT RELEASED IN NON-RELEASE CONFIGURATION ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where products are released in insecure configurations intended for testing/debugging purposes."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;SENSITIVE INFORMATION EXPOSURE AND UNAUTHORIZED ACCESS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploitation of vulnerabilities could result in the exposure of sensitive information and unauthorized access to system resources."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;AHB PROTOCOL IMPLEMENTATION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A typical bus protocol used in System-On-Chip (SoC) for communication between components, leader agents may implement this protocol."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;GAINING UNAUTHORIZED ACCESS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves gaining unauthorized access or control over devices due to non-updatable firmware."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;PROTECTION MECHANISM IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing protection mechanisms on all paths to control-protected assets can mitigate the risk of attacks."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;AXPROT SIGNAL MISINTERPRETATION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The improper handling of AxPROT signals during protocol conversion may cause security attribute misinterpretations leading to vulnerabilities."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;SYSTEM COMPROMISE AND PRIVILEGE ESCALATION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The outcome where an attacker successfully alters hardware configurations to gain unauthorized access or escalate privileges."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;NON-UPGRADED FIRMWARE IN HARDWARE DEVICES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entity is non-upgraded firmware in hardware devices, which remain vulnerable due to lack of updates."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;CHIPS AND SMARTPHONES WITH DEBUG COMPONENTS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Devices such as chips, smartphones, and other hardware that include debug components are potential targets for exploitation due to improper design or security measures."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;VULNERABILITY DISCOVERY WITHOUT UPDATABILITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Devices lack the capability to update firmware, making them vulnerable even after discovery of security flaws."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;SOC INTERNAL REGISTERS ACCESS CONTROL&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entity includes SoC internal registers that are accessible through various interfaces such as UART, SMBUS, PCIe, USB, etc."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;FABRIC BRIDGE SECURITY ISSUE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A bridge between different fabric protocols may improperly translate security attributes, potentially leading to access-control bypass and privilege escalation."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;CVE-2021-25476&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability in Digital Rights Management (DRM) capability for mobile platforms that leaks pointer information, aiding in ASLR bypass."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;FIRMWARE UPDATE CAPABILITY ABSENCE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The absence of a mechanism to update or patch firmware is a vulnerability that can be exploited by attackers."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;INCORRECT SECURITY TOKENS GENERATION (CWE-1270)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability exists where Security Tokens generated in Systems-On-a-Chip (SoCs) are incorrect, leading to potential security breaches."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;FABRIC PROTOCOL INTEGRATION&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The integration of different fabric protocols in a system-on-chip (SoC) can introduce security vulnerabilities if improperly managed."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;PROTECTION THROUGH IC CAMOUFLAGING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"IC camouflaging and obfuscation are recommended security measures to make reverse engineering more difficult and costly for malicious actors."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;CVE-2020-24491&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Processor generates debug messages containing sensitive memory transaction addresses."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;PERSISTENT SECURITY RISK DUE TO FIRMWARE VULNERABILITIES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploitation leads to persistent security risks due to unpatched vulnerabilities in non-updatable firmware."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;ACTIVATION WINDOW FOR DEBUG FEATURES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition is having an activation window that allows the hardware's test or debug features during specific phases."</data>
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</node>
<node id="&quot;CONFIGURE HARDWARE FOR SAFE OPERATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Configuring hardware to only enter test or debug mode within a window of opportunity such as during boot or configuration stage."</data>
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</node>
<node id="&quot;CVE-2017-18326&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Modem debug messages include cryptographic keys, posing a risk to system security."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;ENCRYPTION HASH VERIFICATION PROCESS&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attacker uses the encryption hash verification process with a compromised public key to validate the integrity of firmware binaries."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;PRODUCTS WITH NON-UPDATABLE FIRMWARE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Devices or products that lack the ability to update their firmware are targets of such attacks."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;INADEQUATE DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability pertains to hardware components where data removal processes do not completely delete all data, leaving sensitive information retrievable due to residual physical characteristics of the media."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;BYPASSING FIREWALL PROTECTION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting the lack of protection for mirrored memory regions in on-chip fabric firewalls."</data>
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</node>
<node id="&quot;TAMPER-PROOF PACKAGING IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing tamper-proof packaging is recommended as a security measure against physical attacks such as decapsulation and invasive imaging."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;INCORRECT CHAINING OR GRANULARITY OF DEBUG COMPONENTS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Improperly chained or granular debug components can lead to vulnerabilities that attackers might exploit."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;BRIDGE FOR PROTOCOL CONVERSION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software bridge between different protocols (AHB and OCP) enabling seamless communication across them."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;PRODUCT MANUFACTURER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"The manufacturer or developer of products that do not allow users to update their firmware, potentially leaving these products vulnerable."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;ATTACKER WITH PHYSICAL ACCESS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker who has physical access to the device can exploit hardware vulnerabilities during manufacturing."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;SECURE PATCH SUPPORT IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Support for secure patches that can be applied during the next boot or programmed through hardware fuses after device shipping mitigates vulnerabilities in ROM code."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;ENSURING MANUFACTURING COMPLETE STAGE MARKERS ARE UPDATED&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Preventing products from being released in insecure configurations by ensuring proper manufacturing process completion."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;UNAUTHORIZED SYSTEM CONFIGURATION MODIFICATION POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploitation leads to unauthorized modifications of system configurations, affecting security and integrity."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;APPROPRIATE POST-SI TESTS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Carrying out appropriate post-manufacturing tests at various authorization levels ensures proper chaining of debug components and restricts access to unauthorized users."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;CVE-2020-9054&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A critical OS command injection vulnerability in a network-attached storage (NAS) device that is actively exploited by attackers. Some products are end-of-support and cannot be patched, making them susceptible to this attack."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;MANUFACTURING MODE EXPLOIT&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting a vulnerability in the Manufacturing Mode on Intel chipsets to gain unauthorized access."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"This attack technique involves exploiting the vulnerability of inadequate hardware-based data removal processes that leave residual sensitive information recoverable after supposedly secure deletions."&lt;SEP&gt;"This technique involves exploiting vulnerabilities in data erasure processes to retrieve sensitive information that should have been removed."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;DEBUG MODE EXPLOITATION TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of exploiting debug mode capabilities to gain unauthorized access during pre-production or manufacturing stages."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;SENSITIVE DEBUG INFORMATION EXPOSURE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploitation leads to the exposure of sensitive information through improperly managed debug components."</data>
  <data key="d2">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</node>
<node id="&quot;WEAK KEY GENERATION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This refers to a situation where hardware smart locks generate weak keys which can be stolen through BLE sniffing attacks. The device's firmware is non-updatable, leading to continued vulnerability."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;MANUFACTURING MODE PATCHING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Disallowing access to the Manufacturing Mode interface after reporting the vulnerability as a mitigation measure."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;CONFIGURATION STATE VERIFICATION DURING POWER SAVE/RESTORE OPERATIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The system must verify the integrity of configuration states during power save/restore operations to prevent unauthorized alterations that could compromise hardware security."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;INSECURE SECURITY IDENTIFIER MECHANISM&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The SoC implements a Security Identifier mechanism to differentiate allowed or disallowed actions but the identifiers are not correctly implemented."</data>
  <data key="d2">chunk-87fc8cd680673c7b0399cfaa4acf73d6</data>
</node>
<node id="&quot;FIRMWARE UPDATE MECHANISM ABSENCE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The lack of an update mechanism in devices leads to prerequisites for exploiting vulnerabilities that cannot be patched."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS DURING MANUFACTURING&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic is to gain unauthorized access to devices during manufacturing for malicious purposes."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;BLINDING/MASKING CRYPTOGRAPHIC ALGORITHM PROTECTION MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Applying blinding or masking techniques to cryptographic algorithms during implementation is recommended to mitigate certain types of attacks, such as side-channel attacks. Also includes altering erasure methods and protecting/removing media."&lt;SEP&gt;"Recommended mitigations include applying blinding or masking techniques during the implementation of cryptographic algorithms, altering erasure methods, and protecting/removing media."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;UNINITIALIZED FLIP-FLOPS USED FOR SECURITY-CRITICAL FUNCTIONS (CWE-1271)&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The presence of uninitialized flip-flops used for security-critical functions in devices is a prerequisite that can be exploited during attacks."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;INVASIVE IC LAYER REMOVAL AND IMAGING&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A technique involving physically removing layers from an integrated circuit to image each layer using a scanning electron microscope."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;DEBUG MESSAGES REVEALING UNNECESSARY INFORMATION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Product fails to prevent unnecessary and potentially sensitive system information from being revealed in debug messages, which could help attackers decipher vulnerabilities or understand the system better."&lt;SEP&gt;"The product fails to prevent unnecessary and potentially sensitive system information from being revealed in debug messages, which could help attackers decipher vulnerabilities or understand the system better."</data>
  <data key="d2">chunk-87fc8cd680673c7b0399cfaa4acf73d6</data>
</node>
<node id="&quot;EXPLOITATION THROUGH COMMAND INJECTION ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attacker uses command injection techniques to exploit the firmware's inability to receive updates and gain unauthorized control over the device."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;IC REVERSE ENGINEERING CAPABILITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Malicious actors must have the capability to capture and analyze images of ICs in order to exploit hardware vulnerabilities for secret extraction."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;SOC (SYSTEM-ON-CHIP)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A System-on-Chip (SoC) is a complex integrated circuit that integrates all components of a computer or other electronic system into a single chip. It serves as the target for security vulnerabilities related to Security Identifiers."</data>
  <data key="d2">chunk-87fc8cd680673c7b0399cfaa4acf73d6</data>
</node>
<node id="&quot;GAIN UNAUTHORIZED CONTROL OVER DEVICES&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of exploiting vulnerabilities in non-updatable firmware to achieve unauthorized access or control over devices."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;SECRET EXTRACTION AND COUNTERFEIT PRODUCTION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the vulnerability, malicious actors can extract secrets and produce counterfeit ICs."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;NO SPECIFIC SOFTWARE MENTIONED&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"There is no specific malicious software mentioned in this text, but it implies the presence of untrusted software that could manipulate parametric data values and fabric end-point capabilities."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;SECURITY IDENTIFIER MECHANISM IMPLEMENTATION FLAW&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A flaw in how the SoC implements its Security Identifier mechanism is a prerequisite for any attack exploiting this vulnerability."</data>
  <data key="d2">chunk-87fc8cd680673c7b0399cfaa4acf73d6</data>
</node>
<node id="&quot;DESIGN REQUIREMENTS IGNORING UPDATES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"During development phases, requirements may not consider the importance of updates over a product's lifetime due to cost constraints or other factors."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;FIRMWARE VULNERABILITY DUE TO NON-UPGRADE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The firmware's inability to be upgraded makes it remain vulnerable to reverse engineering attacks that aim to recover secrets from non-updated hardware."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;SOC SECURE BOOT/VERIFIED BOOT IMPLEMENTATION&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A System-on-Chip (SoC) implementing secure boot or verified boot is the target of this security risk."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;UNNECESSARY DEBUG INFORMATION DISCLOSURE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of vulnerabilities related to debug messages, unnecessary and sensitive information may be disclosed, potentially aiding attackers."</data>
  <data key="d2">chunk-87fc8cd680673c7b0399cfaa4acf73d6</data>
</node>
<node id="&quot;EXPLOITATION THROUGH WEAK KEY GENERATION ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attacker uses weak key generation vulnerabilities in non-updatable firmware to exploit hardware devices like smart locks."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;CHIPMAKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"The chipmaker is an organization that designs chips and outsources manufacturing to OSAT vendors, potentially exposing vulnerabilities."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;HIGH-RESOLUTION X-RAY MICROSCOPY TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique used by malicious actors for capturing detailed images of integrated circuits' internal structures."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;IMPROPER ACCESS CONTROL IN FABRIC BRIDGE ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker could exploit improper access control in fabric bridges to gain unauthorized access or perform malicious activities within the SoC."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;PERMANENT SECURITY RISK DUE TO NON-UPDATABLE FIRMWARE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Due to the inability of updating firmware, there is a persistent security risk over the lifetime of the device."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;OSAT VENDOR&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"An Outsourced Semiconductor Assembly and Test (OSAT) vendor responsible for assembling and testing chips designed by others."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;ACCESS CONTROL CHECK IMPLEMENTATION SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software solution that ensures proper access control checks are implemented in fabric bridges, preventing unauthorized transactions between IP blocks."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;DEVICES WITH NON-UPDATEABLE FIRMWARE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The devices or products that do not provide any means for their users to update firmware are targets of such attacks."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;MALICIOUS INSIDER AT OSAT FACILITY&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A malicious insider working within the OSAT facility who may exploit access to carry out an attack."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;QUALITY DEGRADATION AND STABILITY ISSUES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting improperly preserved hardware state, systems may suffer from quality degradation, instability issues, or reduced performance after restore operations."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;IMPROPER FABRIC BRIDGE ACCESS CONTROL PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The pattern of an attacker exploiting the lack of proper access controls in a fabric bridge to gain improper access or perform malicious activities within the SoC."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;NON-DISCLOSURE AGREEMENTS (NDAS)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Chipmakers require NDAs from OSAT partners as a security measure against information leaks and misuse."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;HIGH-RESOLUTION PERFORMANCE COUNTERS &amp; TIMERS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Tools that can be disabled to mitigate timing-based attacks on microarchitectural side-channels."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Executing unauthorized transactions through a fabric bridge that lacks proper security measures, potentially leading to data breaches or system compromises."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;LACK OF FIRMWARE UPDATABILITY PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where a product does not provide users with the ability to update or patch its firmware."</data>
  <data key="d2">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</node>
<node id="&quot;SECURITY VULNERABILITY IN IT SYSTEM OF OSAT FACILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A potential weakness within the OSAT facility's IT system that could be exploited for unauthorized access or data breaches."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;CONFIDENTIALITY VIOLATIONS THROUGH COVERT CHANNELS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploitation of shared microarchitectural resources can lead to confidentiality violations by leaking sensitive information such as cryptographic keys through covert channels."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;PROPER ACCESS CONTROL IN FABRIC BRIDGE MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing and enforcing proper access control checks in the fabric bridge to prevent unauthorized transactions between IP blocks."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;BUS TRANSACTION SIGNALS MAPPING&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Incorrect mapping of bus transaction signals to security identifiers, allowing unauthorized access to system assets."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;PHYSICAL ACCESS AND TECHNICAL SKILLS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Having physical access to the device and technical skills are prerequisites for exploiting hardware vulnerabilities."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"During pre-production stages, debug modes are accessible on chips before thorough security measures are applied."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;BYPASS SECURITY MECHANISM TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An attacker's tactic of bypassing security mechanisms by exploiting improper access controls in a fabric bridge to gain unauthorized access or perform malicious actions within the SoC."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;OCP PROTOCOL IMPLEMENTATION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"An alternative bus protocol to AHB, implemented by follower agents within a SoC system."</data>
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</node>
<node id="&quot;VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability exists where laptops with Intel chipsets can be exploited when running in Manufacturing Mode."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;ATTACKER ENTITY NOT EXPLICITLY MENTIONED&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"The text does not explicitly mention a specific attacker entity."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;DESIGN CONSISTENCY REVIEW AND WEAKNESS IDENTIFICATION IN ARCHITECTURE PHASE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Review of security identifiers for design consistency and common weaknesses is necessary to mitigate potential vulnerabilities."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;LACK OF ACCESS CONTROL CHECKS PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition for an attack is the lack of proper access control checks in the fabric bridge, allowing attackers to exploit this vulnerability."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;INSECURE STATE DUE TO UNINITIALIZED VALUES (CWE-1271)&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exploiting vulnerabilities such as uninitialized security settings can result in an insecure state of the device, making it vulnerable to further attacks."</data>
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</node>
<node id="&quot;SOFTWARE NOT EXPLICITLY MENTIONED&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"No specific software is mentioned in the provided text that can be categorized as per the given guidelines."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;LOGIC ERRORS DURING DESIGN&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Design flaws that misconfigure debug components, improperly authorizing access to sensitive data."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;INCOMPLETE MANUFACTURING PROCESS PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A precondition where products are released before completing manufacturing process steps."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where Advanced High-performance Bus (AHB) bridges do not require authentication for arbitrary read and write access to the BMC's physical address space, leading to potential security breaches."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;ADVERSARY (NOT NAMED)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An adversary could monitor and measure physical phenomena to detect patterns and make inferences, even if it is not possible to extract the information in the digital domain."</data>
  <data key="d2">chunk-350f1de43053ea2973652d98a983f7fb</data>
</node>
<node id="&quot;INTEGRITY CHECKING MECHANISM IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Incorporating integrity checking mechanisms such as cryptographic hashes inside and outside the IP ensures configuration state integrity during power cycles."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;REVIEW AND TESTING OF SECURITY IDENTIFIERS DURING IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Security identifier decoders should be reviewed for design consistency and tested during implementation phases."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS OR MALICIOUS ACTIVITY POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition of exploiting improper access control in fabric bridges is unauthorized access or malicious activities within the SoC."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;SCRUBBING CAPABILITY&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software capability provided by the product to remove sensitive data upon decommissioning, which might be inadequate or missing."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;MISSING PATCH ROM CODE VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The absence of a mechanism to patch code in Read-only-Memory (ROM) can leave systems or SoCs vulnerable to exploitation, reducing maintainability and reliability."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;BUS TRANSACTION SECURITY IDENTIFIERS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Transactions in a SoC with source and destination identities qualify with security identifiers for asset access control decisions."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where insufficient or incomplete data removal from hardware components leaves sensitive information retrievable due to remanence effects, like magnetic media residuals or screen burn-in. The impact involves unauthorized read memory and application data."</data>
  <data key="d2">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</node>
<node id="&quot;BRIDGE SECURITY CHECKER SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software tool designed to verify the security of transactions across fabric bridges, ensuring no unauthorized activities can occur."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;PRODUCTS IN PRE-PRODUCTION OR MANUFACTURING STATE (INSECURE CONFIGURATIONS)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The target entities include products in pre-production or manufacturing states with insecure configurations."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS VIA FABRIC BRIDGE ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern involving exploiting weaknesses in fabric bridge access controls for unauthorized system access."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Unauthorized exposure of confidential information through misuse or exploitation of accessible debugging and testing functionalities."</data>
  <data key="d2">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</node>
<node id="&quot;HPROT SIGNAL MISINTERPRETATION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The improper translation of HPROT signals can lead to access control bypass or privilege escalation."</data>
  <data key="d2">chunk-0337a559ab513922c912320a5f53afbf</data>
</node>
<node id="&quot;UNAUTHENTICATED TRANSACTION EXECUTION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of sending unverified transactions through a fabric bridge to gain unauthorized access or cause system compromise."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;RESTRICT TEST/DEBUG ACTIVATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Insert restrictions on when the hardware's test or debug features can be activated to prevent unauthorized access."</data>
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</node>
<node id="&quot;PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability occurs when products are released prematurely with insecure configurations enabled."</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;TRANSACTION AUTHENTICATION IN FABRIC BRIDGE MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation strategy involving the implementation of proper transaction authentication mechanisms within fabric bridges."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;ADVERSARY&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An adversary can induce unexpected physical or environmental conditions to undermine a product's security."&lt;SEP&gt;"An adversary induces unexpected physical conditions to exploit vulnerabilities."&lt;SEP&gt;"An adversary may exploit vulnerabilities such as missing patching mechanisms in ROM code to compromise a system-on-chip (SoC) and reduce its maintainability, reliability, and performance."&lt;SEP&gt;"An adversary modifies attestation or measurement reporting data in registers, potentially compromising system security."&lt;SEP&gt;"An adversary who can take advantage of vulnerabilities in on-chip fabric firewalls and hardware activation of test/debug logic to alter the intended behavior of the system."&lt;SEP&gt;"An entity that can exploit vulnerabilities to bypass secure boot mechanisms or execute untrusted code."</data>
  <data key="d2">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab&lt;SEP&gt;chunk-2a08effb4baf9d8f8c63cdfd2d107514&lt;SEP&gt;chunk-0337a559ab513922c912320a5f53afbf&lt;SEP&gt;chunk-44164e668381aa7c1f320b2f14a0925f&lt;SEP&gt;chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;LACK OF PROTECTION FOR MIRRORED MEMORY REGIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition is the lack of protection mechanisms applied to mirrored memory regions, allowing attackers to exploit them."</data>
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</node>
<node id="&quot;CRYPTO-HASH VERIFICATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A method to ensure data integrity by using cryptographic hashes before and after power states are saved/restored."</data>
  <data key="d2">chunk-d495a786a338efce093592daaa0f2478</data>
</node>
<node id="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where attackers use decapsulation and high-resolution imaging to recover secret keys, unique device identifiers, and proprietary code from hardware."</data>
  <data key="d2">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of gaining unauthorized access through exploiting vulnerabilities in SoC interconnect structures."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;UNAUTHORIZED MEMORY MODIFICATION AND DATA LEAKAGE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition is unauthorized modification of memory and leakage of sensitive data due to exploiting the lack of protection."</data>
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</node>
<node id="&quot;MUTABLE ATTESTATION MEASUREMENT DATA&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Vulnerability where the contents used for attestation/measurement reporting in registers are modifiable by an adversary, allowing spoofing of measurement results."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;RELEASE IN NON-RELEASE STATE TACTIC (GAINING UNAUTHORIZED ACCESS THROUGH NON-PRODUCTION CONFIGURATIONS)&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves gaining unauthorized access via the release of insecure pre-production versions.""</data>
  <data key="d2">chunk-5c85b903657707af65465947038efc98</data>
</node>
<node id="&quot;LACK OF TRANSACTION VERIFICATION PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A necessary condition for an attack is the lack of proper transaction verification mechanisms within fabric bridges."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;ADVERSARY EXPLOITING TEST/DEBUG FEATURES&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting hardware features that allow activation of test or debug logic at runtime."</data>
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</node>
<node id="&quot;LACK OF WRITE PROTECTION FOR PARAMETRIC DATA VALUES&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"A precondition that may contribute to this weakness is the lack of a requirement to protect parametric values and sensor settings against untrusted software."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;DATA SCRUBBING FAILURE PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where a failure in proper data scrubbing leaves decommissioned devices vulnerable to sensitive data acquisition."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;FABRIC BRIDGE AUTHENTICATION BYPASS VULNERABILITY (CVE-2019-6260)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The vulnerability allowing unauthorized transactions to bypass authentication checks, leading to potential security breaches in BMC devices."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;IMPLEMENT STRONG PHYSICAL SECURITY MEASURES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Strong physical security measures can prevent the exploitation of physical side channels by securing sensitive information against observable phenomena."</data>
  <data key="d2">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</node>
<node id="&quot;TEST OR DEBUG LOGIC ACTIVATION DURING RUNTIME PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The pattern involves activating test or debug logic during runtime, which can be exploited to escalate privileges or manipulate system operations."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;INADEQUATE DATA REMOVAL TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of failing to adequately remove or overwrite sensitive data during device decommissioning, leading to vulnerabilities."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;UNAUTHORIZED DATA ACCESS POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"A post-exploitation result where an attacker gains unauthorized access to data or resources within the SoC."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;SECURITY IDENTIFIER DECODER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A mechanism that decodes bus transactions to map security identifiers into necessary access-controls/protections."</data>
  <data key="d2">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</node>
<node id="&quot;POLICY IMPLEMENTATION AND REVIEW&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing strict policies for data removal upon decommissioning and regularly reviewing these policies to ensure compliance."</data>
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
</node>
<node id="&quot;AHB BRIDGES IN BMC DEVICE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Specific AHB bridges used in Baseboard Management Controllers (BMC) devices, targeted by attackers due to security weaknesses."</data>
  <data key="d2">chunk-af35a9635813405deb7665cfe32b1124</data>
</node>
<node id="&quot;ESCALATION OF PRIVILEGES AND INFORMATION DISCLOSURE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves using attack techniques to escalate privileges or disclose information, potentially leading to DoS conditions."</data>
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</node>
<node id="&quot;CVE-2017-8252 VULNERABILITY&quot;">
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
  <data key="d1">"The postcondition of sensor value manipulation leading to a Denial-of-Service condition is affecting the system due to exploitation of vulnerabilities."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;ERROR INJECTION TECHNIQUE&quot;">
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f&lt;SEP&gt;chunk-15c8c399ec268b8c32e12c790903a8f4</data>
  <data key="d1">"Adversaries use error injection as a technique on hardware with active debug/test features."&lt;SEP&gt;"The technique of injecting errors into redundant hardware to deprive the system of redundancy or degrade its performance and reliability."</data>
  <data key="d0">"ATTACK TECHNIQUE"</data>
</node>
<node id="&quot;TEST AND DEBUG FEATURES IN HARDWARE&quot;">
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
  <data key="d1">"Adversaries use error injection as a technique on hardware with active debug/test features."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;PUBLIC KEY CRYPTOGRAPHY USAGE&quot;">
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
  <data key="d1">"The attacker exploits public key cryptography usage to verify firmware binaries with compromised keys."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;INCORRECT SECURITY IDENTIFIER MAPPING VULNERABILITY&quot;">
  <data key="d2">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
  <data key="d1">"Improper mapping of bus transaction signals exploits the vulnerability by allowing unauthorized access."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;POLICY PRIVILEGES ARE NOT ASSIGNED CONSISTENTLY BETWEEN CONTROL AND DATA AGENTS&quot;">
  <data key="d2">chunk-0389a2e07ed94570629739162785392c</data>
  <data key="d1">"This technique exploits inconsistencies in policy privileges, directly implementing this vulnerability."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;FABRIC FIREWALL VULNERABILITY&quot;">
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
  <data key="d1">"Unauthorized memory modification and data leakage are consequences of exploiting the lack of protection in mirrored regions."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;TARGET ENTITY&quot;">
  <data key="d2">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
  <data key="d1">"Security Token generation issues impact the overall security of target entities like Intel chipsets and SIMATIC devices."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;EXTERNAL DEBUGGER&quot;">
  <data key="d2">chunk-44164e668381aa7c1f320b2f14a0925f</data>
  <data key="d1">"An adversary uses an external debugger to exploit the lack of protection in the firewall."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;CVE-1314 AND CVE-2017-8252 VULNERABILITIES&quot;">
  <data key="d2">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
  <data key="d1">"The lack of write protection is a precondition that contributes to the exploitation of vulnerabilities affecting parametric data values and fabric end-point capabilities."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;STATIC/DYNAMIC TAINT ANALYSIS METHODS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Analysis methods that label and track predictor entries to detect cross-context influence in microarchitectural predictors."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;PROCESSOR EVENT AND MISPREDICTION HANDLING&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Processors with hardware features allowing incorrect operations or data access during transient events are targeted by this vulnerability."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;HARDWARE SENSORS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Hardware sensors are used to detect whether a device is operating within design limits. The threshold values for these limits are set by hardware fuses or trusted software such as a BIOS."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;OVERVOLTAGE VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability refers to hardware's susceptibility to operating modes that cause overvoltage conditions, potentially leading to device failure or DoS."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;INSTRUCTION SET ARCHITECTURE (ISA)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The Instruction Set Architecture (ISA) provides architectural boundaries and protection features such as segmentation, virtual memory, privilege rings, trusted execution environments, and virtual machines."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;TAMPERING WITH ROT MEMORY PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The ability to tamper with immutable memory is a prerequisite condition enabling adversaries to modify root of trust and execute adversarial code."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;IMPROPER PROTECTION MECHANISM DETECTION AND CORRECTION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"Pattern involves exploiting improperly managed protection mechanisms leading to alert bypassing and control over system conditions."&lt;SEP&gt;"The attack pattern involves exploiting improperly managed protection mechanisms, leading to the bypassing of alerts and control over system conditions."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;LACK OF OVERVOLTAGE AND OVERCURRENT PROTECTION MECHANISMS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Devices lacking appropriate protections against voltage spikes and current surges are susceptible to such attacks."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;PREVENT ARCHITECTURALLY RESTRICTED DATA USAGE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves preventing architecturally restricted data from being used by operations that can execute transiently."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where network on chip (NoC) does not isolate resources, creating timing channels that can be exploited by attackers to infer data or degrade performance."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;ALERT SIGNAL MODIFICATION ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique involves untrusted agents disabling or manipulating alert signals for out-of-bound conditions."&lt;SEP&gt;"Untrusted agents use this technique to disable or manipulate alert signals that are supposed to trigger remedial actions for out-of-bound conditions."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;DENIAL OF SERVICE THROUGH HARDWARE EXPLOITATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves causing hardware failure or degradation by exploiting its thermal vulnerabilities, leading to denial of service conditions."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;TEMPERATURE SENSITIVE ENTROPY SOURCE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where hardware devices lack protection against cold temperatures, leading to data retention issues."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;PROPER ALERT SIGNAL MANAGEMENT MEASURES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Measures ensuring only hardware or trusted firmware can alter alert configurations to protect against improper management of sensitive data."&lt;SEP&gt;"Measures such as ensuring only hardware or trusted firmware can alter the alert configuration protect against improper management of sensitive trace data."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;THERMAL PROTECTION IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing temperature sensors and cooling solutions is recommended to prevent overheating attacks from being successful."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;HARDWARE DOCUMENTATION REVIEW AND DESIGN MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Reviewing hardware documentation for transient execution vulnerabilities and implementing design changes to mitigate such issues."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;DISABLE SECURITY ALERTS AND DEGRADED PERFORMANCE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Untrusted agents aim to disable security alerts and cause degraded performance or denial-of-service (DoS) conditions by manipulating alert signals."&lt;SEP&gt;"Untrusted agents aim to disable security alerts, causing degraded performance or denial-of-service conditions through manipulated signals."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;MODIFICATION OF ALERT THRESHOLDS AND MASKING SIGNALS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Prerequisites for attacks include modifying the thresholds set by hardware fuses or trusted software, as well as masking signals to avoid detection."&lt;SEP&gt;"Prerequisites include modifying thresholds set by hardware fuses/trusted software and masking signals to avoid detection."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;SOFTWARE FUZZING TOOLS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"These tools treat the underlying hardware as a black box and can detect this weakness in hardware."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;IMPROPER PROTECTION FOR OUTBOUND ERROR MESSAGES (CWE-1320) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Involves improper protection of outbound error messages and alert signals from untrusted agents."&lt;SEP&gt;"The vulnerability involves improper protection of outbound error messages and alert signals from untrusted agents."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;DEVICE SHUTDOWN OR THROTTLING&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting this vulnerability, the device may experience shutdowns or throttling due to improperly managed alerts."&lt;SEP&gt;"Results in shutdowns/throttling due to improperly managed alerts exploiting system vulnerabilities."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;MALICIOUS SOFTWARE COMPONENT&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A component designed for malicious purposes that exploits hardware vulnerabilities."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;INSUFFICIENTLY TRUSTWORTHY COMPONENT&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Using components that are not sufficiently trusted introduces risks such as vulnerabilities or hidden functionality."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;SYSTEM-ON-CHIP (SOC) HARDWARE COMPONENTS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Includes CPUs, crypto coprocessors, and on-chip fabrics, targeted by vulnerabilities like CWE-1320."&lt;SEP&gt;"The target entities are System-on-Chip hardware components that include CPUs, crypto coprocessors, and on-chip fabrics."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;UNAUTHORIZED DEBUG ACCESS ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where an adversary gains unauthorized access to debug traces on a System-on-Chip (SoC) and extracts confidential information from unsecured trace sinks."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;COLD BOOT ATTACKS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"A postcondition where an attacker cools down memory and extracts data from volatile storage that retains its state in cold conditions."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;ARCHITECTURE AND DESIGN PHASE VULNERABILITY INTRODUCTION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Vulnerabilities may be introduced during hardware architecture and design if predictor state isolation is not properly implemented."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;TRACING IP BLOCKS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"IP blocks that trace the SoC's internal signals in real-time, enabling observability and validation of its functional design."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;SENSITIVE INFORMATION INFERENCE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"Inferring sensitive information through microarchitectural side effects of transient operations as the main tactic."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;BRANCH HISTORY INJECTION (BHI) - SPECTRE-BHB&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique exploiting shared branch history states for influencing transient kernel execution from user mode, exposing data over covert channels."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;MODIFICATION OF ALERT THRESHOLDS AND MASKING SIGNALS PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"Pattern where thresholds are modified, and signals are masked to avoid detection or trigger malicious behavior."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;MALICIOUS SOFTWARE DEVELOPERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Developers of malicious software aim to exploit hardware vulnerabilities such as overheating issues in devices."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;HIGH-RESOLUTION TIMERS ACCESS CONTROL&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Access to high-resolution timers by unprivileged software can be used to monitor covert channels, making it a prerequisite for certain attacks."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;TAINT ANALYSIS TOOLS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"These tools can label data in one context (e.g., kernel data) and perform information flow analysis to determine whether tainted data can appear in another context (e.g., user mode)."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;DEGRADED PERFORMANCE AND DENIAL-OF-SERVICE CONDITIONS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Resulting from exploitation of improper protection for error messages, leading to unresponsive or slow systems."</data>
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</node>
<node id="&quot;HARDWARE DESIGNER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A hardware designer may inadvertently introduce vulnerabilities through architectural decisions that lead to exploitable conditions."</data>
  <data key="d2">chunk-140a05ee49c5f31da6d98039d787968f</data>
</node>
<node id="&quot;SYSTEM SOFTWARE IMPLEMENTATION VULNERABILITY INTRODUCTION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Vulnerabilities can arise from system software failing to invoke necessary sanitization operations when switching contexts.""</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;PROCESSOR DESIGNERS AND VENDORS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Processor designers and vendors are responsible for implementing mitigations against transient execution attacks, such as disabling specific predictors or exposing instructions to limit opportunities for data exposure."</data>
  <data key="d2">chunk-140a05ee49c5f31da6d98039d787968f</data>
</node>
<node id="&quot;BRANCH TARGET INJECTION (BTI) - SPECTRE V2&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where shared indirect branch predictor state is exploited, allowing code to influence transient execution across architectural boundaries."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;SYSTEM CONFIGURATION PHASE MITIGATION FAILURE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The failure to properly configure the system according to hardware vendor recommendations for mitigating vulnerabilities."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;SOFTWARE TECHNIQUES (SERIALIZATION INSTRUCTIONS)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Use of serialization instructions like LFENCE can prevent processor events or mispredictions from causing transient execution after the instruction is executed."</data>
  <data key="d2">chunk-140a05ee49c5f31da6d98039d787968f</data>
</node>
<node id="&quot;HARDWARE DEVICES WITH POWER MANAGEMENT ISSUES (VOLTAGE/CURRENT)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Any hardware device lacking adequate protections against overvoltage or overcurrent can be targeted by malicious software."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;ATTACKER (EM-FI EXPERT)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker with expertise in electromagnetic fault injection who seeks to compromise device internal information or bypass security mechanisms."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;ADDRESS MASKING AND DATA ISOLATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Techniques such as address masking and isolating sandboxes in separate address spaces can mitigate consequences of transient execution by preventing out-of-bounds reads."</data>
  <data key="d2">chunk-140a05ee49c5f31da6d98039d787968f</data>
</node>
<node id="&quot;MICROARCHITECTURAL INDIRECT BRANCH PREDICTOR WEAKNESS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where indirect branch predictor states can be exploited by attackers to manipulate transient instruction execution across architectural boundaries."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;USER MODE AND KERNEL MODE ISOLATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring predictor state isolation between user mode and kernel mode during context transitions."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;COVERT CHANNEL EXPOSURE THROUGH TRANSIENT EXECUTION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where incorrect or stale data is forwarded to dependent operations during transient execution, potentially exposing sensitive information over covert channels."</data>
  <data key="d2">chunk-140a05ee49c5f31da6d98039d787968f</data>
</node>
<node id="&quot;INDIRECT BRANCH PREDICTION BARRIER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Techniques like retpolines that prevent affected instructions from generating harmful code flows, specifically for mitigating Spectre-like attacks."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;SECURE BOOT MECHANISM&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A secure boot mechanism implemented on a System-on-Chip (SoC) that verifies and executes signed boot code, preventing unauthorized execution of untrusted or adversarial boot code."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;ELECTROMAGNETIC FAULT INJECTION (EMFI) SETUP&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A setup that includes a pulse injection circuit and an EMI coil used by attackers to induce current in the device wires, leading to faults within the integrated circuit."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;OVERCURRENT VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability refers to hardware's susceptibility to overcurrent situations causing instability or permanent damage."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;BOOT FIRMWARE DOWNGRADE EXPLOIT TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where an adversary exploits the security version number vulnerability to downgrade or rollback the firmware to a vulnerable state."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;RETURN STACK BUFFER UNDERFLOW (RSB UNDERFLOW)&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Exploiting shared return stack buffer state to influence transient execution before and after prediction barriers, potentially leaking data across boundaries."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;CROSS-CONTEXT TRAINING PREVENTION (E.G., KERNEL MODE TAGGING)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Prevention measures to stop malicious cross-context training by tagging predictor entries with a kernel-mode bit or similar tag."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;SHARED MICROARCHITECTURAL PREDICTOR STATE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Code in one software component can influence predictor behavior in another across a hardware boundary, creating a precondition for potential covert channel exposure."</data>
  <data key="d2">chunk-140a05ee49c5f31da6d98039d787968f</data>
</node>
<node id="&quot;DETECTION OF PRESENCE OF KNOWN WEAKNESSES&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"This pattern involves the detection of known hardware weaknesses post-discovery through software tools or hardware vendor checks."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;SHARED MICROARCHITECTURAL STATES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Shared microarchitectural states that allow data exposure through transient execution across architectural boundaries."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;SECURITY VERSION NUMBER ROLLBACK ATTACK POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Rolling back the security version number results in a vulnerable state allowing exploitation by adversaries, potentially leading to Denial-of-Service (DoS) on upgrades or execution of malicious firmware."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;SECURITY MECHANISM BYPASSING PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where EM-FI attacks are carried out to bypass security mechanisms such as secure JTAG or Secure Boot."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;SIMULTANEOUS MULTITHREADING (SMT)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Processors supporting SMT may share microarchitectural predictors between threads, making them susceptible to vulnerabilities related to transient execution and predictor state sharing."</data>
  <data key="d2">chunk-140a05ee49c5f31da6d98039d787968f</data>
</node>
<node id="&quot;FAULT INJECTION DETECTION MECHANISM&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Designing hardware with adequate sensors and circuitry to detect and mitigate conditions leading to instruction skips under fault injection attacks."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;PREDICTOR SHARING DISABLEMENT&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Configuration settings that allow disabling predictor sharing, such as BIOS configurations or model-specific registers (MSRs)."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;TRANSIENT EXECUTION EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique involves exploiting transient execution to cause observable discrepancies or data leaks through covert channels."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;FAULT INDUCTION IN DEVICE WIRES&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of inducing faults by creating a local and transient magnetic field near the device, causing current changes in internal signals."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;CWE-703 - DESIGN FLAWS IN PHYSICAL ATTACKS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Design flaws that do not account for physical attacks such as voltage manipulation, clock variance, or material degradation, leading to security weaknesses."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;ANTI-GLITCH PROTECTIONS BYPASSING ATTACK&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where an attacker bypasses secure boot mechanisms and reads protected eFuses by exploiting the lack of anti-glitch protections."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;PROCESSOR TRANSITION CONTEXT&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The process of transitioning between contexts (processes or privilege levels) can expose predictor states to indirect branch prediction vulnerabilities."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;SECURITY MECHANISM BYPASSING MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implement redundancy or use error detection and correction codes to detect and correct faults introduced during EM-FI attacks."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;INSTRUCTION SKIPS AND DATA INFERENCE ATTACKS&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"Pattern where attackers manipulate hardware faults to cause security-critical instructions to be skipped or resources not properly isolated, inferring sensitive data."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;COMPROMISE DEVICE INFORMATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of compromising device internal information by using electromagnetic fault injection attacks."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;LACK OF ANTI-GLITCH PROTECTIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The absence of proper anti-glitch protection measures serves as a prerequisite for physical attacks to succeed."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;CWE-1420 - TRANSIENT EXECUTION FLAW&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A weakness in processors where transient operations can expose sensitive information over covert channels due to mispredictions or processor events."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;SELF-MODIFYING CODE CLEAR TRIGGERING &quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Triggering a machine clear event through self-modifying code can lead to transient execution of incorrect operations."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;FAULT INJECTION EXPERTISE AND SETUP AVAILABILITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Attackers need expertise in performing EMFI attacks and access to the necessary setup for inducing faults in devices."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;TRANSIENT EXECUTION VULNERABILITIES (CVE-2017-5753, CVE-2021-0089, CVE-2022-0002)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"These vulnerabilities involve transient execution due to microarchitectural predictors and self-modifying code clear triggers."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;IMPROPER PROTECTION AGAINST ELECTROMAGNETIC FAULT INJECTION (CWE-1319)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The device's susceptibility to electromagnetic fault injection, allowing attackers to locally modify internal signals and cause security issues."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;COVERT CHANNEL EXPOSURE ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Techniques used by attackers to exploit transient execution weaknesses and expose data through covert channels like caches or timing discrepancies."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;VOLTAGE AND CURRENT OVERLOAD EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"This technique involves exploiting the lack of protections against overvoltage or overcurrent conditions to cause device damage or denial of service."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;ACCESS CONTROL CHECK RACE CONDITION AWARENESS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Awareness and prevention of race conditions in access control checks that occur out-of-order during implementation phase."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;SECURITY MECHANISM BYPASSING, DEVICE INFORMATION COMPROMISE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the vulnerability, attackers can bypass security mechanisms or gain access to sensitive information."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;CODE SEQUENCE CRAFTING FOR COVERT CHANNELS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Creating robust code sequences that prevent the exposure of sensitive information during transient execution, reducing the risk of attacks."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;LACK OF THERMAL PROTECTION MECHANISMS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Devices lacking appropriate thermal protection mechanisms are susceptible to overheating attacks."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;CONFIDENTIALITY IMPACT: READ MEMORY &quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition involves the attacker being able to read memory containing sensitive information due to transient execution vulnerabilities."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;INTEGRATED CIRCUIT (IC) HARDWARE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The integrated circuit hardware is targeted by EM-FI attacks, aiming at compromising its internal operations and integrity."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;DETECTION AND ANALYSIS VIA TIMING/POWER ANALYSIS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Techniques used by attackers to detect discrepancies in covert channels through timing or power analysis."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;DATA INFERENCE ATTACK TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of inferring confidential data from transient operations through covert channel exposure and timing/power analysis techniques."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;SECURE BOOT INTEGRITY CHECK TACTIC&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"A tactic employed by adversaries to bypass secure boot integrity checks through exploiting vulnerabilities such as missing immutable RoT protection or security version number rollback."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;ON-CHIP FABRIC OR BUS VULNERABILITY (CWE-1318)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"On-chip fabrics or buses lack support for privilege separation, access control, and other security features, making them susceptible to attacks that can lead to confidentiality and integrity breaches."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;HARDWARE ISOLATION MEASURES IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing hardware isolation measures to prevent unauthorized access between different processor contexts, mitigating the risk of exploiting architectural inaccessibilities."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;STALE OR INVALID DATA IN SHARED MICROARCHITECTURAL RESOURCES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Shared microarchitectural resources contain stale or invalid data which, when encountered, can lead to security issues."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;MISSING SUPPORT FOR SECURITY FEATURES (CWE-1318)&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting on-chip fabrics or buses that lack support for security features, leading to privilege escalation and unauthorized access."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Compromised secure boot mechanisms leading to unauthorized execution of adversarial or untrusted boot code."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;IMPROPER FABRIC CONFIGURATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Including signals is not mandatory when generating the RTL description of fabrics, leading to improper configurations that can be exploited by attackers."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;ENVIRONMENTAL CONDITIONS HANDLING WEAKNESSES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Weaknesses in handling extreme environmental conditions during product design and manufacturing phases that can lead to security issues."</data>
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</node>
<node id="&quot;THERMAL RUNAWAY VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability refers to hardware's susceptibility to operating modes that cause it to overheat, potentially leading to permanent damage or DoS conditions."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;SERIALIZATION INSTRUCTIONS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software techniques using serialization instructions intended to reduce transient execution windows after processor events or mispredictions."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;SECURE JTAG OR SECURE BOOT BYPASSING PATTERN (CWE-1319)&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where EM-FI attacks are carried out specifically to bypass security mechanisms such as secure JTAG or Secure Boot."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;UNAUTHORIZED AGENT&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unauthorized agent who injects errors into redundant hardware blocks, potentially putting systems into a degraded mode."</data>
  <data key="d2">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</node>
<node id="&quot;PERMANENT DAMAGE AND SERVICE DEGRADATION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition of thermal runaway attacks is the potential for permanent damage to devices or degradation of their service."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;CONTROL-FLOW INTEGRITY (CFI)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Techniques that constrain the behavior of instructions redirecting the instruction pointer to prevent control flow hijacking."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;TRANSIENT EXECUTION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability in processors that allows incorrect operations or data to be accessed transiently after a misprediction, potentially exposing sensitive information over covert channels."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;INTEGRATED CIRCUIT SECURITY ASSETS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Integrated circuits with security assets (such as hardware modules, random number generators) that can be compromised by EMFI attacks."</data>
  <data key="d2">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</node>
<node id="&quot;HARDWARE DEVICES WITH POWER MANAGEMENT ISSUES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Any hardware device lacking adequate protections against overheating can be targeted by malicious software."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;HARDWARE VENDOR TOOLS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software tools released by hardware vendors to detect the presence of known weaknesses on processors."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;SOFTWARE&quot;">
  <data key="d0">"MITIGATION SOFTWARE"</data>
  <data key="d1">"Software techniques such as memory safety properties of high-level programming languages or software sandboxes that prevent software from accessing another user's data."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;FAULT TOLERANCE DESIGN FLAWS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Design flaws that allow unauthorized error injection, making hardware blocks vulnerable to degradation through fault injection attacks."</data>
  <data key="d2">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</node>
<node id="&quot;MICROARCHITECTURAL VULNERABILITIES IN PROCESSORS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Processors are targeted entities where vulnerabilities such as transient execution flaws can be exploited."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;COMPILER/JIT CONFIGURATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Configuring the compiler or JIT to prevent generation of affected instructions that can lead to vulnerabilities."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;REDUNDANCY DEGRADATION IMPACT&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The impact of system being put into a degraded mode due to unauthorized error injection in redundant hardware blocks."</data>
  <data key="d2">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</node>
<node id="&quot;COVERT CHANNEL EXPOSURE VIA L1D CACHE FAULTS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Transient faults may allow access to sensitive data cached in the L1D cache, exposing it over covert channels."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;HARDWARE VENDOR PATCH&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Patches provided by hardware vendors to sanitize predictor state when the processor transitions contexts and prevent predictor entry sharing."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;CVE-2017-5715&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A fault may allow transient non-enclave operations to access SGX enclave data cached in the L1D, potentially exposing the data over a covert channel."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;HARDWARE REDUNDANCY BLOCK&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A hardware block designed for redundancy to ensure the performance and functional reliability of components."</data>
  <data key="d2">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</node>
<node id="&quot;VOLTAGE SPIKE EXPLOITATION MALWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"This is a type of malware that deliberately causes voltage spikes in the device, leading to potential damage or denial of service conditions."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;INCORRECT DATA FORWARDING DURING TRANSIENT EXECUTION TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Processor events or predictions that may cause incorrect or stale data forwarding to transient operations, leading to exposure of private data via side effects."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;MALICIOUS SOFTWARE AGENT&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A software agent that deliberately operates a device in modes leading to overheating or other thermal issues."</data>
  <data key="d2">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</node>
<node id="&quot;USER AWARENESS AND SYSTEM CONFIGURATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Users need to be aware of system configurations such as BIOS settings related to sharing microarchitectural resources."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;BOUNDS CHECKING AND MEMORY SAFETY&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Techniques used by high-level programming languages to prevent software from exposing private data through incorrect/stale data forwarding."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;NETWORK-ATTACHED STORAGE DEVICE SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The software for network-attached storage (NAS) devices that can be exploited via command injection."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;ACCESS CONTROL CHECK (E.G., PAGE PERMISSIONS CHECK)&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern that involves exploiting race conditions in access control checks between an operation and its check, leading to transient exposure of sensitive information."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;OVERCURRENT CONDITION ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves using malicious software to cause overcurrent situations in hardware devices, resulting in instability or failure."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;PROCESSOR CONTEXT AND SHARED ADDRESS SPACE&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The processor context, including shared address space and microarchitectural buffers, that are targets for exploiting incorrect/stale data forwarding behavior."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;COMMAND INJECTION ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where attackers exploit a command injection vulnerability to control the device and place it into a botnet."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;INTEL X86 PROCESSOR&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Intel x86 processors, which may be affected by Spectre-like vulnerabilities and require specific mitigations."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;SYSTEM SOFTWARE IMPLEMENTATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The lack of invoking predictor-state-sanitizing operations during system software implementation can lead to this vulnerability being exploited."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;COVERT CHANNEL EXPLOITATION FOR DATA INFERENCE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An attacker's tactic of inducing transient execution in a victim process to access and expose its private data via a covert channel."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;CWE-78 COMMAND INJECTION TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique used by attackers to inject commands into the NAS device software, allowing them to execute arbitrary code on the device."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;DEVICE OVERHEATING EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"This technique involves exploiting the lack of thermal protection mechanisms to cause devices to overheat, leading to DoS conditions."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;MICROARCHITECTURAL SIDE EFFECT OBSERVATION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Observing and inferring sensitive data based on the microarchitectural side effects of transient operations."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;SMT THREAD ISOLATION AND TAGGING&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring that predictor state created by one SMT thread cannot influence another, through isolation and tagging mechanisms."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;FIRMWARE UPDATE REQUIREMENTS SPECIFICATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A requirement for each component to be updatable, ensuring firmware updates can be applied even in cases of end-of-support products."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;THERMAL RUNAWAY ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves using malicious software to operate hardware in ways that result in overheating and subsequent failure or degradation of performance."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;INSTRUCTION SKIP ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique used by attackers to alter operating conditions to cause security-critical CPU instructions to be skipped more frequently."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;RESOURCE CONTENTION AND INTERFERENCE&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The condition in which internal NoC resources are shared between packets from different trust domains leading to contention and interference as prerequisites for attacks."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;CVE-2018-3615&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A TSX Asynchronous Abort may allow transient operations to access architecturally restricted data, potentially exposing the data over a covert channel."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;MAINTAINABILITY REQUIREMENT&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves specifying and implementing maintainability requirements to ensure that components like ROM and firmware are updateable, enhancing security through regular patching."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;OVERVOLTAGE AND OVERCURRENT PROTECTION IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing voltage regulators, current limiters, and surge protection devices is recommended to prevent overvoltage or overcurrent attacks from being successful."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;SPECTRE VARIANTS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Vulnerabilities such as Spectre variants can be exploited to leak sensitive data via covert channels."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;COVERT CHANNEL EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves exploiting transient execution vulnerabilities to infer sensitive information through microarchitectural side effects."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;TRANSIENT EXECUTION VULNERABILITY (CWE-1422) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability arising from incorrect or stale data being forwarded to transient operations, exposing private data over a covert channel."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;LACK OF PATCH CAPABILITY&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Products with no means for applying patches pose a risk as they remain vulnerable to known exploits indefinitely."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;PROCESSOR HARDWARE WITH SHARED PREDICTORS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Processors that share microarchitectural predictors between hardware threads, potentially allowing influence across thread boundaries."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;MICROARCHITECTURAL PREDICTORS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Microarchitectural predictors are hardware components that can allow incorrect operations or data to execute transiently after a misprediction."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;SANDBOX SOFTWARE AND MANAGED RUN-TIME ENVIRONMENTS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software used for isolating applications or code snippets, which may not be properly isolated due to lack of hardware-enforced boundaries."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;CVE-2020-9054 OS COMMAND INJECTION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A critical OS command injection vulnerability in network-attached storage (NAS) devices that allows attackers to place IoT devices into a botnet."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;INTERNAL RESOURCES SHARING&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Internal resources like buffers, crossbars and switches are shared between packets from different trust domains creating the prerequisites for timing channel attacks."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;SHARED MICROARCHITECTURAL STRUCTURES (E.G., CPU CACHE)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Shared microarchitectural structures like the CPU cache temporarily store data and may be accessed by different contexts leading to potential covert channel exposure."</data>
  <data key="d2">chunk-5b8399f81d264b899c6b1465888065e8</data>
</node>
<node id="&quot;SYSTEM CALL INVOKED SANITIZATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Sanitizing microarchitectural predictors when a system call is invoked to prevent malicious cross-thread training."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;DATA REMANENCE POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition of data remanence where confidential information remains readable after memory is cleared or erased, allowing unauthorized access to sensitive data."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;SYSTEM SOFTWARE VENDOR&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Vendor responsible for providing system software that may include mitigations against Spectre-like vulnerabilities."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;ROT DESIGNATION IN IMMUTABLE MEMORY ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern involving the designation of a root of trust in mutable memory locations, leading to potential tampering and execution of adversarial code."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;HARDWARE DESIGN FOR ISOLATION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Design choices not isolating microarchitectural state between execution contexts or hardware threads can lead to this vulnerability being present."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;DATA EXPOSURE THROUGH MICROARCHITECTURAL SIDE EFFECTS&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"Exposure of data over a covert channel resulting from the side effects of transient operations accessing and exposing private information."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;END-OF-SUPPORT NAS DEVICES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Network-attached storage (NAS) devices that are no longer supported with security patches and updates."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;ACADEMIC RESEARCHERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Academic researchers have demonstrated the capability to detect hardware weaknesses, indicating their potential role as attackers in probing and exploiting system vulnerabilities."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;VICTIM SOFTWARE COMPONENT&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software component targeted by a malicious sibling to exploit shared microarchitectural predictors in hardware threads."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;CVE-2019-1135&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A TSX Asynchronous Abort may allow transient operations to access architecturally restricted data, potentially exposing the data over a covert channel."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;IMPROPER ISOLATION OF SHARED RESOURCES IN NETWORK ON CHIP (NOC)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where shared resources within a network-on-chip are improperly isolated, potentially leading to unauthorized access or data breaches."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;NETWORK ON CHIP (NOC)&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"The Network On Chip (NoC) is a hardware interconnect fabric used in multicore Systems-on-Chip, where internal resources may be improperly isolated."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;INDIRECT BRANCH PREDICTION BARRIER (E.G., RETPOLINE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Techniques like retpolines that prevent affected instructions from generating harmful code flows, specifically for mitigating Spectre-like attacks."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;FAULT-INDUCED DATA EXPOSURE PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"A fault may allow transient non-enclave operations to access SGX enclave data cached in the L1D, potentially exposing the data over a covert channel."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;DATA REMANENCE PREVENTION MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing secure erase commands that ensure thorough deletion of memory contents to prevent residual data retention after erasing operations."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;SECURITY-SENSITIVE DECISION POINTS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Points within firmware or hardware where security-critical decisions occur, such as password verification or authentication checks, that can be manipulated by attackers."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;MICROARCHITECTURAL PREDICTOR STATE DISCLOSURE&quot;">
  <data key="d0">"DOCUMENTATION"</data>
  <data key="d1">"Disclosed in architecture documentation, informing users about shared microarchitectural predictor states and potential consequences."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;ATTACKERS (GENERIC)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Attackers exploit vulnerabilities in hardware or firmware to gain unauthorized access or manipulate data."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;DATA SPECULATION TECHNIQUES AND OUT-OF-ORDER EXECUTION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The ability of the processor to perform speculative execution and out-of-order operations as prerequisites for exploiting incorrect/stale data forwarding behavior."</data>
  <data key="d2">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</node>
<node id="&quot;CONFIDENTIAL DATA READABILITY&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition where confidential information stored in memory circuits remains readable or recoverable after being cleared or erased, compromising security."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;SHARED MICROARCHITECTURAL PREDICTORS BETWEEN HARDWARE THREADS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Condition where microarchitectural predictors shared between hardware threads can lead to vulnerabilities if not properly isolated."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;HIGH-RESOLUTION TIMER RESTRICTION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Restricting unprivileged software's access to high-resolution timers commonly used for monitoring covert channels."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;UNAUTHORIZED DEBUG ACCESS PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Adversaries need access to unsecured debug traces, which serves as a prerequisite for extracting confidential information from SoCs."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;TRANSIENT EXECUTION EXPLOITATION PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"Pattern where an attacker triggers processor events to cause transient execution and read data from another sandbox's private memory."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;EXTERNAL PHYSICAL TOOLS FOR ERASE OPERATIONS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Using external physical tools such as ultraviolet-rays-based erase techniques to securely delete data from EEPROM devices."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;TIMING CHANNEL ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique used by attackers to infer data that belongs to a trusted agent via improper isolation of NoC resources."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique involving the manipulation of hardware features such as microarchitectural predictors or access control checks to exploit transient execution vulnerabilities."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;MEMORY CLEAR AND ERASE OPERATION ANALYSIS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Conducting thorough analysis of memory clear and erase operations during architecture design and implementation phases to ensure proper functionality."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Weakness in processors that share microarchitectural predictors between hardware threads, potentially allowing influence across thread boundaries."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;IMPROPER ISOLATION MITIGATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Implementing priority-based arbitration and dedicated buffers or virtual channels within the NoC to ensure proper isolation of resources."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;HARDWARE AND SOFTWARE MITIGATION MEASURES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Measures recommended by researchers and vendors to mitigate the risks associated with transient execution vulnerabilities, including hardware design changes and software techniques."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;SELF-ENCRYPTING SECURE MEMORY DEVICES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Secure-memory devices that support cryptographic erase commands, ensuring only decryption keys are erased while data remains encrypted."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;PREDICTOR-STATE-SANITIZING OPERATIONS (E.G., INDIRECT BRANCH PREDICTION BARRIER)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Hardware features or operations recommended by vendors to sanitize predictor state when switching contexts."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;CONFIDENTIAL DATA ACCESS&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of accessing confidential data from other sandboxes through exploiting transient execution vulnerabilities."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;DYNAMIC ANALYSIS OF MEMORY CONTENTS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Performing dynamic analysis during device operation to detect and prevent unauthorized access to confidential assets stored in memory circuits."</data>
  <data key="d2">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</node>
<node id="&quot;MUTUAL DISTRUSTING SOFTWARE COMPONENTS EXECUTION CONTEXTS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Conditions under which software components hosted in different execution contexts, like user and kernel modes, become targets for attacks exploiting shared microarchitectural predictors."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;SANITIZING MICROARCHITECTURAL STATE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Hardware designers and system software can mitigate this weakness by sanitizing specific microarchitectural state, such as store buffers, when the processor transitions to a different context."</data>
  <data key="d2">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</node>
<node id="&quot;IMPROPER ISOLATION PRECONDITION&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Sandboxing or managed runtime environments that do not use hardware-enforced isolation, making them vulnerable to attacks via software techniques."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;ADVERSARY (UNSPECIFIED)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An unspecified adversary takes advantage of a component's lack of updatable capabilities to exploit vulnerabilities or cause critical operational failures."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;ARCHITECTURE AND DESIGN PHASE MITIGATION MEASURES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Design measures to prevent transient execution discrepancies and enforce predictor entry tagging based on execution context or SMT thread origin."</data>
  <data key="d2">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</node>
<node id="&quot;TRANSIENT EXECUTION VULNERABILITY IN PROCESSORS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability allowing an attacker to trigger transient execution and read data from another sandbox's memory due to improper isolation mechanisms."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;COMPONENT THAT IS NOT UPDATEABLE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A non-updatable component within a product that poses security risks due to its inability to receive updates for known vulnerabilities or bugs."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;SPECULATIVE EXECUTION ATTACKERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Attackers exploiting speculative execution vulnerabilities to enable information disclosure via a side-channel with local access."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;DATA LEAKAGE POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The consequence of successfully exploiting a transient execution vulnerability, leading to unauthorized access or leakage of confidential data."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;INABILITY TO PATCH EXPLOITABLE VULNERABILITIES&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"The attack pattern involves an adversary exploiting a non-updateable component's vulnerability, which cannot be patched due to design limitations."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;INFORMATION DISCLOSURE THROUGH SIDE-CHANNEL ATTACK&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic of obtaining unauthorized access to sensitive information by exploiting speculative execution vulnerabilities and side-channel attacks."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;SECURITY VERSION NUMBER ROLLBACK VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The ability for an adversary to rollback or downgrades the security version number in the SoC firmware, leading to vulnerabilities being exploitable again."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;SANDBOXED APPLICATIONS AND MANAGED RUN-TIMES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Applications or managed run-time environments that are targeted for exploitation through vulnerabilities in their isolation mechanisms."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;EXPLOIT OF NON-UPDATABLE COMPONENT&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Adversaries exploit the security weaknesses in non-updatable components that do not have patching capabilities."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;SECURITY PATCH FOR SPECULATIVE EXECUTION VULNERABILITY&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A security patch that fixes the vulnerability in processors, preventing attackers from using speculative execution for information disclosure attacks."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;PROCESSOR SPECIFICATION INSPECTION SOFTWARE TOOL&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software tool designed to manually inspect processor specifications for weaknesses such as microarchitectural predictors and out-of-order access control checks."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;UPDATE CAPABILITY INTEGRATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Ensuring components are designed with update capabilities to prevent exploitation from vulnerabilities and bugs."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;SPECULATIVE EXECUTION EXPLOITATION TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"The technique of exploiting speculative execution vulnerabilities to trigger load value injection and perform a side-channel attack."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;HARDWARE WEAKNESS EXHAUSTIVE ANALYSIS METHOD&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An academic research method involving the exhaustive analysis of a processor's machine clear (or nuke) conditions to discover hardware weaknesses."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;PROTECTION AGAINST EXPLOITATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic is to protect the system by ensuring all components can be updated or patched for security."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;DENIAL OF SERVICE THROUGH HARDWARE EXPLOITATION (VOLTAGE/CURRENT)&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves causing hardware failure or degradation by exploiting its overvoltage or overcurrent vulnerabilities, leading to denial of service conditions."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;LOAD VALUE INJECTION EXPLOITATION TOOL&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A tool or method used by attackers to exploit the load value injection vulnerability in processors for information disclosure."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;BLACK BOX FUZZING TOOL SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software tool that treats the underlying hardware as a black box and uses fuzzing techniques to detect hardware weaknesses."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;REQUIREMENTS PHASE OVERSIGHT&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"During the requirements phase, there may be oversight in considering update capabilities over a product's lifetime."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;SIDE-CHANNEL INFORMATION DISCLOSURE PATTERN&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where attackers use speculative execution vulnerabilities to enable side-channel attacks with local access, leading to unauthorized information disclosure."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;IMPROPER HANDLING OF FAULTS (CVE-2021-33096)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability in the hardware circuitry leading to unreliable handling of security-critical CPU instructions under fault conditions, enabling attackers to bypass critical security checks."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;AUTOMATED STATIC ANALYSIS TOOL FOR CODE SEQUENCES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"An automated static analysis tool that identifies potentially exploitable code sequences in software, performing analysis on source or binary code."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;VULNERABILITY IN NON-UPDATABLE COMPONENT&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability exists within components that lack updatable features, making them susceptible to exploitation by adversaries."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;AUTHENTICATED LOCAL ACCESS REQUIREMENT&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"Authenticated local access is required for attackers to exploit the load value injection vulnerability in processors using speculative execution."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;HARDWARE WEAKNESS DETECTION SOFTWARE TOOL&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A vendor-released software tool that attempts to transiently execute a vulnerable code sequence to detect hardware weaknesses."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;OPERATIONAL FAILURE AND EXPLOITATION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition is operational failure or exploitation resulting from an adversary's ability to leverage a non-updatable component's vulnerabilities."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;LOAD VALUE INJECTION VULNERABILITY (CVE-2020-0551) &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A processor vulnerability that allows information disclosure via a side-channel attack with local access, enabling unauthorized data leakage."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;TAMPERING WITH ROT MEMORY TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"A method used by adversaries to modify the root of trust memory, which is meant to be immutable, thus compromising secure boot mechanisms."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;SYSTEM ENUMERATION FOR HARDWARE WEAKNESSES SOFTWARE TOOL&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A system software or hardware vendor-provided enumeration bit checker that reports the presence of known hardware weaknesses (e.g., Linux /proc/cpuinfo)."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;PRODUCT WITH NON-UPDATABLE COMPONENT&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A product containing components that cannot be updated or patched, making it vulnerable to various types of attacks."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;SENSITIVE INFORMATION LEAKAGE POSTCONDITION&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition of exploiting the load value injection vulnerability is sensitive information leakage due to improper handling of speculative execution."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;HARDWARE DESIGN PREVENTING COVERT CHANNELS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation measure where hardware designers attempt to prevent transient execution from causing observable discrepancies in specific covert channels."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;SECURITY VERSION NUMBER ROLLBACK ATTACK&quot;">
  <data key="d0">"ATTACK PATTERN"</data>
  <data key="d1">"An attack pattern where adversaries manipulate or exploit vulnerabilities related to security version numbers for rollback or downgrade attacks."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;ATTACKER ENTITY (NOT EXPLICITLY NAMED)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker who exploits vulnerabilities to influence transient execution across architectural boundaries."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;SOME PROCESSORS UTILIZING SPECULATIVE EXECUTION&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Processors utilizing speculative execution are targeted by attackers for exploitation via the load value injection vulnerability."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;RESOURCE CONTENTION INTERFERENCE&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition of resource contention and interference leading to degraded network performance when exploiting vulnerabilities in NoC."</data>
  <data key="d2">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</node>
<node id="&quot;SOFTWARE MITIGATING EFFECTS OF TRANSIENT EXECUTION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software techniques that mitigate the effects of transient execution, such as serialization instructions and address masking."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;MANIPULATION OF SECURITY VERSION NUMBERS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Adversaries may modify stored security version numbers, allowing them to perform roll-back or downgrade attacks on systems."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;RETPOLINE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A compiler-level mitigation technique used to prevent indirect branch prediction from being generated, specifically designed against Spectre-like attacks."</data>
  <data key="d2">chunk-28e02dab88fa91661f517389729e7079</data>
</node>
<node id="&quot;PROCESSOR DESIGN INSTRUCTIONS FOR DATA ISOLATION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Processor designers expose instructions or architectural features to allow software to mitigate transient execution effects without disabling predictors."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;SECURE STORAGE PRACTICES&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Best practices for securely storing and persistently maintaining the integrity of security version numbers across power-on resets."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;PREVENT UNAUTHORIZED ACCESS AND MODIFICATION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The tactic involves ensuring that only authorized entities can modify critical security data such as the security version number."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;CONTROL REGISTERS FOR DISABLING PREDICTORS SOFTWARE FEATURE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A mitigation feature where processor designers provide registers (control, model-specific) that allow privileged and/or user software to disable specific hardware features causing data exposure during transient execution."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability arising from a lack of immutable root of trust hardware protection that allows adversaries to modify the RoT and execute adversarial boot code."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;SECURE BOOT VERIFICATION AND STORAGE MITIGATION TECHNIQUE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A mitigation measure that ensures the secure boot mechanism verifies signed boot code and stores the root of trust in an immutable memory location to prevent tampering or rollback attacks."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;HIGH-RESOLUTION TIMER ACCESS RESTRICTION&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Restricting the ability of unprivileged software to access high-resolution timers commonly used for monitoring covert channels as a defense-in-depth measure."</data>
  <data key="d2">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</node>
<node id="&quot;VULNERABILITY IN SECURITY VERSION NUMBER STORAGE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A weakness where the stored security version numbers are modifiable by unauthorized agents, leading to potential roll-back or downgrade attacks."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;COMPROMISED SYSTEM INTEGRITY AND FUNCTIONALITY&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of manipulation, systems may experience compromised integrity, functionality issues, or denial-of-service conditions."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;HARDWARE WEAKNESS ANALYSIS TEAM&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A team that analyzes and identifies weaknesses in hardware components, particularly focusing on transient execution."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;UNEXPECTED PHYSICAL OR ENVIRONMENTAL CONDITIONS&quot;">
  <data key="d0">"PRECONDITION"</data>
  <data key="d1">"The precondition for exploiting the improper handling of physical or environmental conditions involves inducing unexpected atmospheric characteristics, interference, light sources, power variances, clock variances, material manipulation, radiation exposure, etc."</data>
  <data key="d2">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</node>
<node id="&quot;DEBUG TRACER IP BLOCK SOFTWARE VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where security-sensitive traces collected by debug tracer IP blocks on an SoC are not protected against access from untrusted debuggers, potentially allowing extraction of secret information."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;IMPROPER HANDLING OF PHYSICAL OR ENVIRONMENTAL CONDITIONS VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A product's vulnerability lies in its inability to properly handle unexpected physical or environmental conditions that can be induced by an adversary."</data>
  <data key="d2">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</node>
<node id="&quot;SECURITY HARDWARE WITH FIRMWARE VULNERABILITIES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"A security hardware component within the system that includes firmware potentially vulnerable to roll-back attacks due to its design."</data>
  <data key="d2">chunk-892ec830b66f6437796b41d9204bf489</data>
</node>
<node id="&quot;TAGGING TRACES WITH SECURITY PRIVILEGES MITIGATION TECHNIQUE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A security measure where traces collected from various SoC components are tagged according to their security level, ensuring that only authorized debuggers can access sensitive trace information."</data>
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</node>
<node id="&quot;SECURITY UNDERMINING FLIP BIT AUTHENTICATION DECISION IMPACT&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"As a result of exploiting the improper handling of physical or environmental conditions, security may be undermined due to unexpected flipping of bits used in authentication decisions, leading to unauthorized access."</data>
  <data key="d2">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</node>
<node id="&quot;IMPROPER HANDLING OF COLD ENVIRONMENTS&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where a device or firmware is improperly designed for cold environments leading to security vulnerabilities."</data>
  <data key="d2">chunk-27764142320ab4a55340af1abbe3d713</data>
</node>
<node id="&quot;OS COMMAND INJECTION VULNERABILITY (CVE-2020-9054)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A critical OS command injection vulnerability that allows for the execution of unauthorized commands on a system."</data>
  <data key="d2">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</node>
<node id="&quot;THERMAL OVERHEATING MALWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"This is a type of malware that deliberately operates the device in modes leading to thermal runaway, causing permanent damage or denial of service."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;END-OF-SUPPORT PRODUCTS&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Products no longer supported by vendors, making them unpatchable and vulnerable to exploitation."</data>
  <data key="d2">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</node>
<node id="&quot;SBOM (SOFTWARE BILL OF MATERIALS)&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A tool used for tracking software components and dependencies in a product to prevent the inclusion of insecure or outdated libraries."</data>
  <data key="d2">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</node>
<node id="&quot;PERMANENT DAMAGE AND SERVICE DEGRADATION (VOLTAGE/CURRENT)&quot;">
  <data key="d0">"POSTCONDITION"</data>
  <data key="d1">"The postcondition of voltage spike or overcurrent attacks is the potential for permanent damage to devices or degradation of their service."</data>
  <data key="d2">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</node>
<node id="&quot;IMPROPER PROTECTION FOR OUTBOUND ERROR MESSAGES (CWE-1320)&quot;">
  <data key="d2">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
  <data key="d1">"Modifying thresholds and masking signals are prerequisites for exploiting the improper protection for outbound error messages vulnerability."&lt;SEP&gt;"Modifying thresholds and masking signals are prerequisites for exploiting the vulnerability in managing error messages."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;TRANSIENT EXECUTION FLAW (CWE-1420)&quot;">
  <data key="d2">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
  <data key="d1">"Attackers use covert channel exposure techniques to exploit transient execution weaknesses in processors."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;VULNERABLE STATE WITH DOS ON UPGRADES OR MALICIOUS EXECUTION&quot;">
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
  <data key="d1">"Rolling back the security version number results in a vulnerable state allowing exploitation by adversaries, potentially leading to Denial-of-Service (DoS) on upgrades or execution of malicious firmware."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;COMPROMISED SECURE BOOT MECHANISM&quot;">
  <data key="d2">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
  <data key="d1">"A compromised secure boot mechanism resulting from the missing immutable RoT vulnerability leads to unauthorized execution of adversarial or untrusted boot code."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;THERMAL EXPLOITATION&quot;">
  <data key="d2">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
  <data key="d1">"The malicious software agent uses the technique of thermal exploitation to target hardware vulnerabilities."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<edge source="&quot;HARDWARE DESIGN REVIEW FOR ZEROIZATION MITIGATION&quot;" target="&quot;UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Reviewing hardware design mitigates unauthorized access to sensitive information stored in registers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;CLEARING LOCK BITS AND EXPLOITING RACE CONDITIONS &quot;" target="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Adversaries clear lock bits or exploit race conditions as prerequisites for exploiting hardware lock bit vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;SECURITY TESTING AND COMPLIANCE REVIEW MITIGATION&quot;" target="&quot;MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Compliance reviews help mitigate risks associated with techniques that modify system configurations without proper authorization."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;SECURITY-SENSITIVE SETTINGS INITIALIZATION&quot;" target="&quot;SYSTEM CONFIGURATION CHANGES VIA FIRMWARE&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Firmware updates can impact security-sensitive settings, necessitating proper initialization during design review."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;SECURITY-SENSITIVE SETTINGS INITIALIZATION&quot;" target="&quot;LARGE ADDRESS REGION VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Ensuring proper initialization can help reduce risks associated with large address regions not being sufficiently granular."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;TRUSTED FIRMWARE/BOOTLOADER&quot;" target="&quot;SYSTEM CONFIGURATION INITIALIZATION PHASE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Firmware and bootloaders play a crucial role in initializing secure system configurations during hardware reset."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;MEMORY MANAGEMENT FAILURE&quot;" target="&quot;CWE-226:INCORRECT DEFAULT PERMISSIONS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Improperly clearing memory and file permission misconfiguration can both lead to sensitive data exposure."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;UNAUTHORIZED ACTORS&quot;" target="&quot;CLEARTEXT TRANSMISSION EXPLOITATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Unauthorized actors use the technique of exploiting cleartext transmissions to read sensitive information."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;BYPASSING SECURITY LOCK BITS ATTACK PATTERN&quot;" target="&quot;MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This technique is part of the attack pattern focused on bypassing security lock bit protections."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;TRUSTED FIRMWARE OR SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The adversary may exploit trusted firmware/software modules to clear or bypass lock bits."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;SOFTWARE EXPLOITING WEAKNESSES IN LOCK BITS &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The adversary uses software to exploit weaknesses in the lock bit mechanism of protected systems."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;CWE-226:INCORRECT DEFAULT PERMISSIONS&quot;" target="&quot;FILE PERMISSION MANAGEMENT FAILURE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Mismanagement of file permissions can lead to incorrect default settings, affecting security."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;MONITORING TOOLS (E.G., TRUSS, STRACE)&quot;" target="&quot;SNIFFING NETWORK TRAFFIC&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Monitoring tools can detect and analyze sniffing activities on network traffic."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;ACCESSING SENSITIVE INFORMATION VIA REGISTER BYPASS TACTIC&quot;" target="&quot;UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of accessing sensitive information is accomplished through the technique of bypassing zeroization procedures."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;UNAUTHORIZED DATA ACCESS THROUGH DEBUG INTERFACE EXPLOITATION&quot;" target="&quot;UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The unauthorized data access attack pattern involves using the technique of exploiting improper JTAG interface authorization."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;UNAUTHORIZED DATA ACCESS THROUGH DEBUG INTERFACE EXPLOITATION&quot;" target="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The unauthorized data access through debug interfaces exploits vulnerabilities present during the execution of ROM code."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;SNIFFING NETWORK TRAFFIC&quot;" target="&quot;CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Sniffing network traffic exploits vulnerabilities in file permissions and other insecure settings."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;SNIFFING NETWORK TRAFFIC&quot;" target="&quot;CLEARTEXT TRANSMISSION EXPLOITATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Cleartext transmission exploitation is a specific form of sniffing network traffic that targets unencrypted data."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;CLEARING SENSITIVE INFORMATION FROM REGISTERS SOFTWARE TOOL&quot;" target="&quot;IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACKERS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attackers use a software tool to clear sensitive information stored in hardware registers improperly."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;SYSTEM CONFIGURATION INITIALIZATION PHASE&quot;" target="&quot;LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"During system configuration initialization, if design flaws exist, they can lead to lock bit vulnerabilities post-reset."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;CLEARTEXT TRANSMISSION EXPLOITATION&quot;" target="&quot;USE ENCRYPTION FOR DATA TRANSMISSION&quot;">
  <data key="d3">24.0</data>
  <data key="d4">"Encryption mitigates the risk of cleartext transmission exploitation by securing data in transit."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;CLEARTEXT TRANSMISSION EXPLOITATION&quot;" target="&quot;MAINTAIN CONFIDENTIALITY AND INTEGRITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of maintaining confidentiality and integrity is accomplished through preventing cleartext transmission exploitation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;CLEARTEXT TRANSMISSION EXPLOITATION&quot;" target="&quot;USE LEAST PRIVILEGE PRINCIPLE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The mitigation of following the principle of least privilege helps prevent unauthorized access."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;CWE ID 284: IMPROPER LOCKING AFTER POWER TRANSITION&quot;" target="&quot;PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This vulnerability affects the ability to maintain lock bit protection across power state transitions, impacting protected registers."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;" target="&quot;SENSITIVE INFORMATION IN HARDWARE REGISTERS TARGET ENTITY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The target hardware registers have the vulnerability of improper zeroization which can lead to unauthorized access."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;" target="&quot;UNAUTHORIZED ACCESS AND DATA DISCLOSURE POSTCONDITION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Unintentional disclosure of sensitive information from improperly zeroized registers is a result of exploiting the vulnerability."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;" target="&quot;DETECTION OF PHYSICAL ATTACKS PRECONDITION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Detecting physical attacks or changes in operating mode are prerequisites for exploiting improper zeroization vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;" target="&quot;UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack technique exploits the vulnerability of not clearing sensitive information from hardware registers."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION EXPOSURE &quot;" target="&quot;REMOTE ATTACKER &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The remote attacker's goal is to expose sensitive information through various attack techniques and vulnerabilities."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;" target="&quot;UNAUTHORIZED MODIFICATION OF SYSTEM CONFIGURATION &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Unauthorized modification is a postcondition resulting from exploiting vulnerabilities in the lock bit mechanism."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;" target="&quot;PROTECTED REGISTERS/ADDRESS REGIONS &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Registers and address regions intended to be protected can become vulnerable if the lock bit mechanism is compromised."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;" target="&quot;RESETTING LOCK BIT AFTER POWER RESET &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This technique exploits the vulnerability in the hardware's security lock bit protection mechanisms by resetting it after power reset."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;" target="&quot;POWER STATE TRANSITIONS TESTING &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Testing across power state transitions is crucial for mitigating vulnerabilities in the lock bit mechanism."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;" target="&quot;BYPASSING SECURITY LOCK BIT PATTERN &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This attack pattern targets the vulnerability present in hardware's security lock bit protection mechanisms."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;VULNERABILITY IN HARDWARE LOCK BIT MECHANISM &quot;" target="&quot;PROTECTED HARDWARE SYSTEMS (E.G., SERVERS, IPS)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists in the hardware systems that use lock bits to protect their configurations from unauthorized changes."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;MAINTAIN CONFIDENTIALITY AND INTEGRITY&quot;" target="&quot;USE LEAST PRIVILEGE PRINCIPLE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Using least privilege is a tactic to maintain confidentiality and integrity by limiting access rights."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;BROWSER FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2005-0918) &quot;" target="&quot;FILE EXISTENCE DETERMINATION THROUGH BROWSER SCRIPTING (CVE-2005-0918) &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The vulnerability in browsers enables file existence determination through scripting."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;OWASP TOP TEN 2007 A8 INSECURE CRYPTOGRAPHIC STORAGE&quot;" target="&quot;INSECURE CRYPTOGRAPHIC STORAGE&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"This mitigation addresses the attack technique of storing sensitive data without proper encryption."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;CLEARING RESOURCES BEFORE REUSE &quot;" target="&quot;SENSITIVE INFORMATION DETERMINATION &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing clearing resources before reuse mitigates the tactic of sensitive information determination by attackers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;UNAUTHORIZED ACCESS TO CONFIGURATION INFORMATION TACTIC&quot;" target="&quot;MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of accessing unauthorized configuration information is accomplished through modifying system configurations via attack techniques."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;LACK OF ENCRYPTION OR INSECURE PERMISSIONS&quot;" target="&quot;CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Lack of encryption or insecure permissions are prerequisites for exploiting vulnerabilities in file systems."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;PRODUCT RESOURCE HANDLING ISSUES &quot;" target="&quot;BULLETIN BOARD USER EXISTENCE ERROR RESPONSE VULNERABILITY (CVE-2004-0294) &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The bulletin board user existence vulnerability is part of broader issues in product resource handling."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;PRODUCT RESOURCE HANDLING ISSUES &quot;" target="&quot;FTP SERVER USERNAME ENUMERATION VULNERABILITY (CVE-2004-1428) &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This FTP server username enumeration issue exists within the context of broader product resource management issues."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;PRODUCT RESOURCE HANDLING ISSUES &quot;" target="&quot;VIRTUAL MACHINE FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2000-1117) &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The virtual machine vulnerability is part of larger challenges in handling resources securely within products."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;HDL CODE (HARDWARE DESCRIPTION LANGUAGE)&quot;" target="&quot;PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The HDL code defines the hardware configurations and settings for protected registers and address regions."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426&quot;" target="&quot;COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;CVE-2005-1941, CVE-2002-1713, CVE-2001-1550, CVE-2002-1711, CVE-2002-1844, CVE-2001-0497, CVE-1999-0426&quot;" target="&quot;INFORMATION LOSS AND UNAUTHORIZED ACCESS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Unauthorized access and information loss are postconditions resulting from exploiting these vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;FILE EXISTENCE INFOLEAK THROUGH VIRTUAL MACHINE (CVE-2000-1117) &quot;" target="&quot;VIRTUAL MACHINE FILE EXISTENCE INFOLEAK VULNERABILITY (CVE-2000-1117) &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The virtual machine vulnerability allows for infoleaks through file existence determination."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES &quot;" target="&quot;IMPLEMENTING SECURITY LOCK BIT REVIEW PROCESS &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Mitigation processes aim to prevent unauthorized modification techniques such as exploiting debug modes."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES &quot;" target="&quot;BYPASSING SECURITY LOCK BIT PATTERN &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The technique of modifying system configurations through debug modes is part of the attack pattern for bypassing security locks."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;MODIFY SYSTEM CONFIGURATION THROUGH DEBUG MODES &quot;" target="&quot;MODIFICATION OF SYSTEM CONFIGURATION FOR UNAUTHORIZED ACCESS &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic to modify system configurations is accomplished through the attack technique involving debug mode exploitation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;BRUTE FORCE PASSWORD GUESSING ATTACK &quot;" target="&quot;INFOLEAK THROUGH ERROR RESPONSES &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The brute force password guessing technique is part of the infoleak through error responses attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;BRUTE FORCE PASSWORD GUESSING ATTACK &quot;" target="&quot;SENSITIVE INFORMATION DETERMINATION &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of determining sensitive info is accomplished through brute force password guessing attacks."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;SSL TIMING ATTACK VULNERABILITY (CVE-2003-0078) &quot;" target="&quot;PRODUCT SSL IMPLEMENTATION VULNERABILITY (CVE-2003-0078) &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability in the SSL implementation is a specific instance of broader timing attack issues."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)&quot;" target="&quot;WORLD-WRITABLE EXECUTABLES (CVE-2005-1941)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)&quot;" target="&quot;WORLD-WRITABLE LOG FILES (CVE-2001-1550)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;COMMUNICATION CHANNELS (E.G., NETWORK INTERFACES)&quot;" target="&quot;INSECURE PERMISSIONS FOR SHARED SECRET KEY FILES (CVE-2001-0497)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"These vulnerabilities exist within the communication channels and file systems that are targets of exploitation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;GRANULARITY ISSUE IN ADDRESS REGION PROTECTION&quot;" target="&quot;TRUSTED FIRMWARE OR BOOTLOADER&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"The conflict between functional requirements and security needs impacts the ability of trusted firmware to set configurations securely during boot process."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;GRANULARITY ISSUE IN ADDRESS REGION PROTECTION&quot;" target="&quot;IMPROPER RESTRICTION OF WRITE-ONCE BIT FIELDS VULNERABILITY (CVE)&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Design flaws leading to insufficient granularity can result in vulnerabilities where write-once bit fields are improperly restricted."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;IMPROPER PREVENTION OF LOCK BIT MODIFICATION SOFTWARE MODULE&quot;" target="&quot;ATTACKER&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers can exploit software modules that improperly prevent lock bits from being modified to unlock system configurations."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;IMPROPER PREVENTION OF LOCK BIT MODIFICATION SOFTWARE MODULE&quot;" target="&quot;LOCK BIT MODIFICATION ATTACK TECHNIQUE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The improper prevention module allows the execution of the attack technique by failing to enforce restrictions on modifying lock bits."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY&quot;" target="&quot;LACK OF AUTHENTICATION AND AUTHORIZATION FOR DEBUG PINS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The lack of proper authentication mechanisms is a prerequisite for exploiting vulnerabilities related to missing unique identifiers."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY&quot;" target="&quot;PROPER AUTHENTICATION AND AUTHORIZATION MECHANISMS FOR DEBUG INTERFACES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing proper authentication and authorization can mitigate the vulnerability caused by missing unique identifiers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;MISSING UNIQUE IDENTIFIERS IN SOC COMPONENTS VULNERABILITY&quot;" target="&quot;UNAUTHORIZED ACCESS AND DATA MODIFICATION THROUGH DEBUG INTERFACE EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting the vulnerability leads to unauthorized access and data modification affecting system integrity."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;REVIEWING DESIGN CONSISTENCY &quot;" target="&quot;PROTECTED REGISTERS/ADDRESS REGIONS &quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Ensuring design consistency prevents weaknesses that could compromise the protection of registers and address regions."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;CWE-573 MISSING CRYPTOGRAPHIC STEP&quot;" target="&quot;PLOVER MISSING REQUIRED CRYPTOGRAPHIC STEP ENTRY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The PLOVER entry describes the CWE-573 issue in the context of missing required cryptographic steps."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;CWE-573 MISSING CRYPTOGRAPHIC STEP&quot;" target="&quot;INSECURE CRYPTOGRAPHIC STORAGE&quot;">
  <data key="d3">4.0</data>
  <data key="d4">"Missing a step in cryptographic algorithms can lead to insecure storage practices."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;PORT FILTERING MECHANISM VULNERABILITY (CVE-2002-0514) &quot;" target="&quot;PRODUCT PORT FILTERING INFORMATION LEAKAGE VULNERABILITY (CVE-2002-0514) &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The port filtering mechanism vulnerability is a specific instance of broader information leakage issues."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;CHIP RESET CLEARING CRITICAL READ/WRITE PERMISSIONS FOR RSA FUNCTION&quot;" target="&quot;LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This specific vulnerability affects the integrity of system configurations after a chip reset, allowing unauthorized modifications."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;INSECURE COMMUNICATIONS&quot;" target="&quot;SECURE CODING PRACTICES (CERT ORACLE SECURE CODING STANDARD)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Insecure communications are mitigated by adhering to secure coding practices as defined by the CERT standard."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;PRODUCT DEVELOPERS&quot;" target="&quot;DIRECT MEMORY ACCESS (DMA) CAPABLE DEVICE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Developers create products where DMA capable devices are improperly enabled during boot phases, leading to potential security vulnerabilities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;INCONSISTENT ERROR MESSAGE HANDLING &quot;" target="&quot;DIFFERENT ERROR MESSAGES GENERATION &quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Understanding how error messages are handled helps attackers exploit inconsistencies in responses."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;UNINTENDED PROXY FUNCTIONALITY ('CONFUSED DEPUTY')&quot;" target="&quot;ATTACKER&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker uses the technique of unintended proxy functionality to bypass security measures."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;UNINTENDED PROXY FUNCTIONALITY ('CONFUSED DEPUTY')&quot;" target="&quot;ACCESS CONTROL BYPASS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An attacker bypasses access controls using the technique of unintended proxy functionality."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;INTERNAL REGISTERS AND TEST MODES ACCESS CONTROL MECHANISM&quot;" target="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists within the access control mechanisms of internal registers and test modes during ROM code execution."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACK PATTERN&quot;" target="&quot;UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This technique is part of the improper zeroization attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;MUTUAL AUTHENTICATION MECHANISM ENFORCEMENT&quot;" target="&quot;INSUFFICIENT AUTHENTICATION MECHANISMS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Enforcing mutual authentication can mitigate insufficient authentication mechanisms, reducing the risk of FTP bounce attacks."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;MUTUAL AUTHENTICATION MECHANISM ENFORCEMENT&quot;" target="&quot;PRESERVATION OF INITIATOR IDENTITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Enforcing mutual authentication can help in preserving the identity of transaction initiators."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;INFORMATION DISCLOSURE TACTIC&quot;" target="&quot;TIMING AND CONTROL FLOW DISCREPANCY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of information disclosure is accomplished through observing timing and control flow discrepancies."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;PRESERVATION OF INITIATOR IDENTITY&quot;" target="&quot;DATA FLOW ANALYSIS AND CONTROL FLOW ANALYSIS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Analyzing data and control flow helps in preserving the identity of transaction initiators."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;SECURE ERROR HANDLING IMPLEMENTATION&quot;" target="&quot;ERROR HANDLING MALPRACTICE SOFTWARE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Implementing secure error handling mitigates the risks associated with improper error handling practices."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;ACCESS CONTROL BYPASS&quot;" target="&quot;SHADOW REGISTERS EXPLOITATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of bypassing access control is accomplished through the attack technique of shadow register exploitation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;EXPLOITER&quot;" target="&quot;ROM CODE EXECUTION MANAGEMENT SOFTWARE MODULE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attacker exploits vulnerabilities in the ROM code execution management software module to gain unauthorized access."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;SIDE CHANNEL ATTACK PATTERN&quot;" target="&quot;TIMING AND CONTROL FLOW DISCREPANCY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The side channel attack pattern involves observing timing and control flow discrepancies as part of the attack."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;PROTECTED REGISTERS/ADDRESS REGIONS &quot;" target="&quot;CWE-362 (RACE CONDITION)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A race condition vulnerability can affect protected registers and address regions, leading to potential unauthorized modifications."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;SECURITY LOCK BIT BYPASS VULNERABILITY&quot;" target="&quot;HARDWARE SYSTEM CONFIGURATIONS TARGET ENTITY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The hardware's system configurations have the vulnerability that allows bypassing security lock bits, leading to unauthorized modifications."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;SECURITY LOCK BIT BYPASS VULNERABILITY&quot;" target="&quot;SYSTEM CONFIGURATION MODIFICATION AND ACCESS POSTCONDITION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Unauthorized access and modification of system configurations are postconditions resulting from exploiting security lock bit vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;SECURITY LOCK BIT BYPASS VULNERABILITY&quot;" target="&quot;MODIFICATION OF SYSTEM CONFIGURATION TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The technique exploits vulnerabilities in hardware's protection mechanisms such as security lock bits."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;SECURITY LOCK BIT BYPASS VULNERABILITY&quot;" target="&quot;LACK OF SECURITY LOCK BIT ENFORCEMENT PRECONDITION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Design flaws or lack of strict enforcement mechanisms are prerequisites for exploiting the security lock bit vulnerability."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-80f8e2a782d3784f549ab8a8418f64bd</data>
</edge>
<edge source="&quot;OBSERVABLE DISCREPANCY ATTACKERS&quot;" target="&quot;ERROR HANDLING MALPRACTICE SOFTWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers use error handling malpractices to gain unauthorized access and exploit observable discrepancies."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;UNINTENDED PROXY BEHAVIOR IN SOFTWARE APPLICATIONS&quot;" target="&quot;SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The precondition for this attack is that software applications have unintended proxy behavior."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL OF ON-CHIP DEBUG AND TEST INTERFACE SOFTWARE MODULE&quot;" target="&quot;ATTACKER&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker uses the software module's lack of proper access control to carry out attacks on SoCs."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL OF ON-CHIP DEBUG AND TEST INTERFACE SOFTWARE MODULE&quot;" target="&quot;UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The improper access control software module implements the attack technique of unauthorized JTAG interface exploitation."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;WRITE-ONCE REGISTER MODIFICATION&quot;" target="&quot;RACE CONDITION EXPLOITATION PATTERN&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The attack pattern involves exploiting the technique of modifying write-once registers to bypass security controls."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;ADVERSARY EXPLOITING RESERVED BITS&quot;" target="&quot;RESERVED BIT UTILIZATION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"An adversary exploits the fact that designers use reserved bits for debugging or future capabilities in production hardware."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY&quot;" target="&quot;SOFTWARE APPLICATION ACTING AS PROXY FOR TRANSACTIONS BETWEEN COMPONENTS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Such applications are at risk of acting as an unintended proxy, leading to security vulnerabilities."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;SOFTWARE APPLICATION WITH UNINTENDED PROXY FUNCTIONALITY&quot;" target="&quot;UNAUTHORIZED ACCESS AND BYPASS OF SECURITY MEASURES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting the vulnerability leads to unauthorized access and bypassing of security measures."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;PROPER AUTHENTICATION AND AUTHORIZATION MECHANISMS FOR DEBUG INTERFACES&quot;" target="&quot;UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing proper authentication mechanisms mitigates the unauthorized access through JTAG exploitation."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) &quot;" target="&quot;INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The attack technique exploits the improper isolation vulnerability to enable DMA devices early during boot phases, bypassing security controls."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) &quot;" target="&quot;IMPROPER SECURITY CONFIGURATION AND EARLY BOOT PHASE ENABLEMENT&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Enabling DMA devices too early in the boot phase without proper security configurations sets up a precondition for exploiting shared resource isolation vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) &quot;" target="&quot;SYSTEM-ON-A-CHIP (SOC)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists within System-on-Chip architecture, particularly in the improper isolation of shared resources between trusted and untrusted agents."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2019-6260) &quot;" target="&quot;DATA EXTRACTION AND PRIVILEGE ESCALATION THROUGH EARLY BOOT PHASE ATTACKS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Early boot phase DMA attacks can result in data extraction or privilege escalation due to improperly isolated shared resources."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;WRITE-ONCE REGISTER VULNERABILITY&quot;" target="&quot;UNTRUSTED SOFTWARE COMPONENT (MODULE B)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An untrusted software component can exploit the vulnerability of a race condition in hardware designs."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;EXPLOITATION THROUGH DEBUG/TEST INTERFACES WITHOUT PROPER AUTHORIZATION&quot;" target="&quot;UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Unauthorized access to JTAG interfaces aligns with exploiting improper debug/test interface authorization."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;EXPLOITATION THROUGH DEBUG/TEST INTERFACES WITHOUT PROPER AUTHORIZATION&quot;" target="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This attack pattern exploits the vulnerability present during ROM code execution where JTAG is not disabled."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;TIMED RESPONSES FOR USERNAME EXISTENCE &quot;" target="&quot;FTP SERVER USERNAME ENUMERATION VULNERABILITY (CVE-2004-1428) &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers exploit FTP server vulnerabilities to determine valid usernames based on response times."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;FTP BOUNCE ATTACK PATTERN&quot;" target="&quot;ATTACKER&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker uses the FTP bounce attack pattern to exploit vulnerabilities and bypass security measures."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;FTP BOUNCE ATTACK PATTERN&quot;" target="&quot;WEB SERVER WITH PROXY FUNCTIONALITY (EXAMPLE)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The web server with proxy functionality allows an attacker to use the FTP bounce attack pattern to exploit vulnerabilities in other systems."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;INCONSISTENT ERROR RESPONSES AND TIMING VARIATIONS&quot;" target="&quot;OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Observing inconsistent error responses and timing variations are prerequisites for exploiting the observable discrepancy vulnerability."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC ATTACK PATTERN&quot;" target="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The attack pattern exploits the vulnerability by failing to properly isolate shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC)."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC ATTACK PATTERN&quot;" target="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY (CVE-2020-8698) &quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The attack pattern exploits the vulnerability by failing to properly isolate shared resources between trusted and untrusted agents in a System-On-a-Chip (SoC)."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;VERSION CONTROL SYSTEM ALTERNATE HISTORY INFOLEAK VULNERABILITY (CVE-2004-0778) &quot;" target="&quot;PRODUCT VERSION CONTROL SYSTEM INFORMATION LEAKAGE VULNERABILITY (CVE-2004-0778) &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The vulnerability allows for infoleaks through alternate history files in version control systems."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;FTP PORT COMMAND VULNERABILITY&quot;" target="&quot;EXPLOIT PROXY SERVICES FOR ACCESS CONTROL BYPASS TACTIC&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of exploiting proxy services to bypass access controls is accomplished through the FTP bounce attack on vulnerable systems."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;FTP PORT COMMAND VULNERABILITY&quot;" target="&quot;INSUFFICIENT AUTHENTICATION MECHANISMS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Lack of sufficient authentication mechanisms is a prerequisite for exploiting the FTP PORT command vulnerability."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE&quot;" target="&quot;SECURITY CONFIGURATION SETUP AND IOMMU UTILIZATION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Setting up proper security configurations for DMA devices during the boot phase mitigates the risk of early enablement attacks by controlling hardware access."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE&quot;" target="&quot;INFORMATION DISCLOSURE AND PRIVILEGE ESCALATION&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"The tactic aims to achieve information disclosure or privilege escalation through exploiting insecure DMA device enablement during the boot phase."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;INSECURE DMA DEVICE ENABLEMENT IN EARLY BOOT PHASE&quot;" target="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The attack technique exploits the improper isolation vulnerability to enable DMA devices early during boot phases, bypassing security controls."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;IMPROPERLY CLEARED MEMORY&quot;" target="&quot;SENSITIVE INFORMATION EXPOSURE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exposure of sensitive information results from improperly cleared memory, affecting the security of stored data."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;SENSITIVE DATA EXPOSURE AND ATTACK SUCCESS&quot;" target="&quot;OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting the observable discrepancy vulnerability leads to sensitive data exposure as a postcondition of successful attacks."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;INFORMATION DISCLOSURE AND PRIVILEGE ESCALATION&quot;" target="&quot;ROWHAMMER ATTACK&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Rowhammer attacks can result in information disclosure and privilege escalation by exploiting inconsistencies in memory access control."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;SERVER BEHAVIOR ANALYSIS &quot;" target="&quot;PRODUCT ICMP RESPONSE ANOMALY VULNERABILITY (CVE-2002-0208) &quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Analyzing server behavior helps attackers exploit vulnerabilities in product's modified ICMP responses."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;CWE-203 VULNERABILITY IMPLEMENTATION ATTACKERS&quot;" target="&quot;DISCREPANCY DETECTION TOOLS SOFTWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers use discrepancy detection tools to identify and exploit observable discrepancies as per CWE-203."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;ATTACKER ENTITY PLACEHOLDER&quot;" target="&quot;POP3 PORT SCANNING SOFTWARE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The attacker likely uses software that scans networks using modified POP3 ports to exploit the network's vulnerabilities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;DISCREPANCY DETECTION TOOLS SOFTWARE&quot;" target="&quot;INCONSISTENT ERROR MESSAGE MITIGATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Implementing consistent and minimal error messages mitigates risks associated with discrepancy detection tools."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;POP3 PORT SCANNING SOFTWARE&quot;" target="&quot;NETWORK SCANNING USING MODIFIED POP3 PORTS&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The software implements the attack technique of scanning internal networks with modified POP3 port numbers."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;USER ENUMERATION VIA DISCREPANCIES ATTACK PATTERN&quot;" target="&quot;ERROR RESPONSE ANALYSIS TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The user enumeration attack pattern involves analyzing error responses for discrepancies that indicate successful operations."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;URL-DOWNLOADING LIBRARY EXPLOITATION PATTERN&quot;" target="&quot;CVE-2009-0037 VULNERABILITY&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"This exploitation pattern targets the vulnerability in a URL-downloading library that automatically follows file:// and scp:// URLs."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;URL-DOWNLOADING LIBRARY EXPLOITATION PATTERN&quot;" target="&quot;NETWORK SCANNING USING MODIFIED POP3 PORTS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The scanning technique complements the attack pattern of exploiting vulnerabilities in URL downloading libraries."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;ERROR RESPONSE ANALYSIS TECHNIQUE&quot;" target="&quot;USER ENUMERATION TACTIC&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of user enumeration is accomplished through analyzing discrepancies in error responses."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;NETWORK SCANNING USING MODIFIED POP3 PORTS&quot;" target="&quot;UNAUTHORIZED ACCESS TO NETWORK RESOURCES&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"The tactic of gaining unauthorized network resource access is accomplished through the attack technique of scanning using modified POP3 ports."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;FOLLOWS REDIRECTS TO FILE AND SCP URLS&quot;" target="&quot;PROPER DOCUMENTATION IMPLEMENTATION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Implementing proper documentation helps mitigate risks associated with following redirects that could lead to unauthorized access via file:// and scp:// protocols."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;TIMING ANALYSIS PRECONDITION&quot;" target="&quot;CWE-203 VULNERABILITY (CVE EXAMPLES)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Analyzing timing variations is a prerequisite for exploiting observable discrepancies as indicated by CVE examples."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;UNAUTHORIZED ACCESS TO NETWORK RESOURCES&quot;" target="&quot;CVE-2010-1637 VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Uncontrolled access to network resources may result from exploiting the vulnerability in web-based mail programs that allow internal scanning via modified POP3 ports."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;LARGE TIMEOUTS ON UNCONFIRMED CONNECTIONS (CWE-440)&quot;" target="&quot;BUFFER OVERFLOW DUE TO LIBRARY FUNCTION MISUSE (CVE-2005-3265)&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Both issues can arise from improper handling of library functions and connections."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;BOOT FIRMWARE COMPROMISE THROUGH UNTRUSTED IPS&quot;" target="&quot;UNTRUSTED COMPONENT MASTERING TRANSACTIONS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Enabling untrusted components before security features can lead to them mastering hardware transactions, compromising boot firmware."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;BOOT FIRMWARE COMPROMISE THROUGH UNTRUSTED IPS&quot;" target="&quot;DISABLING RESERVED BITS FEATURE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The mitigation of disabling reserved bits helps prevent unauthorized access that could otherwise compromise the boot sequence through untrusted components."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;LACK OF DOCUMENTATION&quot;" target="&quot;CVE-2010-1637 VULNERABILITY&quot;">
  <data key="d3">10.0</data>
  <data key="d4">"A lack of proper documentation can make it harder to identify and fix vulnerabilities like CVE-2010-1637, making the system more susceptible."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION DISCLOSURE POSTCONDITION&quot;" target="&quot;CWE-203 VULNERABILITY (CVE EXAMPLES)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting the vulnerability results in unauthorized access to sensitive information as a postcondition of successful attacks."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;CERT ORACLE SECURE CODING STANDARD FOR JAVA&quot;" target="&quot;ICS/OT SYSTEMS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The CERT Oracle Secure Coding Standard provides guidelines that help mitigate vulnerabilities in ICS/OT systems."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;BULLETIN BOARD USER EXISTENCE ERROR RESPONSE VULNERABILITY (CVE-2004-0294) &quot;" target="&quot;INFOLEAK THROUGH ERROR RESPONSES &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers exploit bulletin board vulnerabilities to identify users based on error messages."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;CVE-2010-1637 VULNERABILITY&quot;" target="&quot;INSUFFICIENT TECHNICAL DOCUMENTATION&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"A lack of proper technical documentation can make it easier for attackers to exploit vulnerabilities like CVE-2010-1637."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2010-1637 VULNERABILITY&quot;" target="&quot;NETWORK RESOURCES AND DEVICES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The vulnerability exists in network resources and devices that allow scanning via modified POP3 ports."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2010-1637 VULNERABILITY&quot;" target="&quot;UNAUTHORIZED ACCESS TO INTERNAL NETWORKS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Gaining unauthorized access to internal networks is a consequence of exploiting the CVE-2010-1637 vulnerability."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2010-1637 VULNERABILITY&quot;" target="&quot;INTERNAL NETWORK RESOURCES TARGETED BY VULNERABILITIES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The internal network resources are targeted due to the existence of CVE-2010-1637 vulnerability."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2010-1637 VULNERABILITY&quot;" target="&quot;WEB-BASED MAIL PROGRAM SOFTWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The web-based mail program software contains a vulnerability (CVE-2010-1637) that allows unauthorized scanning of internal networks."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2010-1637 VULNERABILITY&quot;" target="&quot;EXPLOITATION VIA MODIFIED POP3 PORTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The technique of exploiting modified POP3 ports is used to exploit the CVE-2010-1637 vulnerability."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;BYPASS PROTECTION MECHANISM THROUGH UNAUTHORIZED JTAG ACCESS&quot;" target="&quot;UNAUTHORIZED ACCESS VIA JTAG INTERFACE EXPLOITATION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of bypassing protection is accomplished by exploiting improper JTAG interface authorization."&lt;SEP&gt;"The tactic of bypassing protection mechanisms is accomplished by exploiting improper JTAG interface authorization."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;CVE-2009-0037 VULNERABILITY&quot;" target="&quot;URL-DOWNLOADING LIBRARY SOFTWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The URL-downloading library software is vulnerable to CVE-2009-0037, which allows following of file:// and scp:// URLs."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2009-0037 VULNERABILITY&quot;" target="&quot;AUTOMATED REDIRECT FOLLOWING EXPLOIT TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The technique of automated redirect following is used to exploit the CVE-2009-0037 vulnerability."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2009-0037 VULNERABILITY&quot;" target="&quot;UNAUTHORIZED ACCESS TO INTERNAL NETWORKS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Gaining unauthorized access to internal networks is also a consequence of exploiting the CVE-2009-0037 vulnerability."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2009-0037 VULNERABILITY&quot;" target="&quot;INTERNAL NETWORK RESOURCES TARGETED BY VULNERABILITIES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The internal network resources are also targeted due to the existence of CVE-2009-0037 vulnerability."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;NETWORK SNIFFER AND PROTOCOL ANALYZER USERS&quot;" target="&quot;STRACE (LINUX)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers can use Strace on Linux systems to monitor system calls for detecting plaintext transmission activities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;NETWORK SNIFFER AND PROTOCOL ANALYZER USERS&quot;" target="&quot;TRUSS (SOLARIS)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers can use Truss on Solaris systems to monitor processes and detect plaintext transmission of sensitive data."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;NETWORK SNIFFER AND PROTOCOL ANALYZER USERS&quot;" target="&quot;SYSINTERNALS UTILITIES (WINDOWS)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers may utilize Sysinternals tools like FileMon, RegMon, and Process Monitor on Windows to detect plaintext data transmissions."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;LACK OF AUTHENTICATION AND AUTHORIZATION FOR DEBUG PINS&quot;" target="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Lacking proper authentication mechanisms for debug pins is a prerequisite for exploiting the vulnerability during ROM execution."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;DATA EXTRACTION AND PRIVILEGE ESCALATION THROUGH EARLY BOOT PHASE ATTACKS&quot;" target="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Early boot phase DMA attacks can result in data extraction or privilege escalation due to improperly isolated shared resources."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;" target="&quot;UNAUTHORIZED ACCESS AND DATA MODIFICATION THROUGH DEBUG INTERFACE EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting the vulnerability leads to unauthorized access and data modification affecting system integrity and confidentiality."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;" target="&quot;ROM CODE EXECUTION MANAGEMENT SOFTWARE MODULE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The ROM code execution management software module implements vulnerabilities that can be exploited during the execution phase."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;VULNERABILITY IN JTAG INTERFACE DURING ROM CODE EXECUTION&quot;" target="&quot;SYSTEM-ON-CHIP (SOC) WITH MISSING OR INSUFFICIENT IP IDENTIFIERS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists within SoCs that do not have adequate identifiers for their components, leading to security weaknesses."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;TRUSS (SOLARIS)&quot;" target="&quot;CRYPTOGRAPHIC FUNCTION DETECTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Truss can be used by attackers to trace system calls related to cryptographic functions during plaintext transmission detection."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;STRACE (LINUX)&quot;" target="&quot;CRYPTOGRAPHIC FUNCTION DETECTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Strace helps in detecting the presence of cryptographic functions being invoked or omitted during data transmission processes."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;SYSINTERNALS UTILITIES (WINDOWS)&quot;" target="&quot;NETWORK TRAFFIC ANALYSIS FOR ENCRYPTION USAGE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Sysinternals utilities like FileMon and RegMon can be used to analyze network traffic patterns for encryption usage detection."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;ICS/OT SYSTEMS&quot;" target="&quot;EXPECTED BEHAVIOR VIOLATION (CWE-440)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Industries relying on ICS or OT systems are susceptible to expected behavior violations that may compromise security."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;DEBUG INTERFACE MISCONFIGURATION&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"An attacker can exploit a misconfigured debug interface as part of their attack strategy."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;SPOOFED UPDATE REQUEST&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attackers use spoofed update requests to manipulate shadow copies into adopting attacker-friendly values."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-6c031a7ff8a513b1dd7b59f833f1ac53</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"An attacker can exploit improper protection against voltage and clock glitches to compromise the device."&lt;SEP&gt;"An attacker can exploit the improper protection against voltage and clock glitches to compromise the system."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;FUSE VALUES CONFIGURATION SOFTWARE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An attacker uses specific software to incorrectly set fuse values, leading the system into an insecure state."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CHIPWHISPERER&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"An attacker can use ChipWhisperer as a specialized hardware tool during implementation phase to check for susceptibility of voltage and clock glitching attacks."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;PUBLIC KEY CRYPTOGRAPHY USAGE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attacker exploits public key cryptography usage to verify firmware binaries with compromised keys."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;EXPLOITATION OF NON-UPDATEABLE FIRMWARE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attacker uses techniques exploiting non-updatable firmware for unauthorized access and control."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;SHADOW REGISTERS EXPLOITATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attackers use the technique of exploiting shadow registers to bypass existing protections."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;MALICIOUS SOFTWARE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An attacker uses malicious software to misconfigure address ranges, creating overlaps for exploitation."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;INCORRECT DATA FORWARDING DURING TRANSIENT EXECUTION TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An attacker exploits the transient execution vulnerability to trigger transient operations and observe their side effects."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;MICROARCHITECTURAL SIDE EFFECT OBSERVATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attacker uses the technique of observing microarchitectural side effects to infer sensitive information."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CVE-2020-9054 OS COMMAND INJECTION VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attacker exploits the command injection vulnerability to place NAS devices into a botnet."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The attacker uses techniques to trigger processor events, leading to transient execution and data access."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;AUTOMATED STATIC ANALYSIS&quot;" target="&quot;CRYPTOGRAPHIC FUNCTION DETECTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Automated static analysis helps in identifying potential vulnerabilities related to cryptographic function omissions or misuses during development."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;" target="&quot;PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"The design flaws allow for the exploitation of vulnerabilities by attackers to modify lock bits."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;" target="&quot;PROTECTED REGISTERS AND ADDRESS REGIONS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The lock bit modification vulnerability exists within hardware IPs, affecting protected registers and address regions."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;" target="&quot;DESIGN FLAWS AND IMPLEMENTATION WEAKNESSES&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Implementation weaknesses serve as prerequisites for the vulnerability to be exploited by attackers."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT MODIFICATION VULNERABILITY IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;" target="&quot;SYSTEM CONFIGURATION CHANGES POST-POWER TRANSITION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Post-power transition changes result from the ability to modify lock bits, impacting system configurations."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LESS TRUSTWORTHY PARTIES&quot;" target="&quot;SENSITIVE INFORMATION READ FROM CLEARED MEMORY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attackers exploit uncleared resources to read sensitive information left behind."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;IMPROPER SECURITY CONFIGURATION AND EARLY BOOT PHASE ENABLEMENT&quot;" target="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Enabling DMA devices too early in the boot phase without proper security configurations sets up a precondition for exploiting shared resource isolation vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;RESOURCE RELEASE AND REUSE PROCESS&quot;" target="&quot;UNCLEARED RESOURCE EXPOSURE PATTERN&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The software process can be exploited through patterns that target uncleared resources."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;MANUAL PENETRATION TESTING AND THREAT MODELING&quot;" target="&quot;TRANSMITTING DATA IN PLAIN TEXT PRECONDITION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Penetration testing and threat modeling can help identify preconditions for plaintext transmission vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;UNCLEARED RESOURCE EXPOSURE PATTERN&quot;" target="&quot;SENSITIVE INFORMATION READ FROM CLEARED MEMORY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The technique is part of the uncleared resource exposure pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;UNCLEARED RESOURCE EXPOSURE PATTERN&quot;" target="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This attack pattern exploits the vulnerability in resource release processes."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION READ FROM CLEARED MEMORY&quot;" target="&quot;RESOURCE OVERWRITING RECOMMENDATIONS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Overwriting recommendations mitigate the risk of sensitive information being read by attackers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION READ FROM CLEARED MEMORY&quot;" target="&quot;PREVENT INFORMATION EXPOSURE TACTIC&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic prevents the exposure of information through proper clearing procedures."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;MAINTAINING SECURE SYSTEM CONFIGURATION POST-RESET&quot;" target="&quot;PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Ensuring secure configuration is a tactic that mitigates design flaws by preventing unauthorized changes post-reset."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;DISABLING RESERVED BITS FEATURE&quot;" target="&quot;RESERVED BITS MISUSE IN PRODUCTION HARDWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The mitigation of disabling reserved bits feature aims to prevent misuse by adversaries writing to these bits."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION EXPOSURE&quot;" target="&quot;PHYSICAL SIDE CHANNEL EXPLOITATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of exposing sensitive information is accomplished through the attack technique of physical side channel exploitation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;TRANSMITTING DATA IN PLAIN TEXT PRECONDITION&quot;" target="&quot;ENCRYPTED CHANNELS USAGE FOR COMMUNICATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Encrypting communication channels is a mitigation measure aimed at preventing plaintext transmission of sensitive information."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;AUTOMATED TESTING TOOLS FOR LOCK BIT PROTECTION REVIEWING DESIGN INCONSISTENCIES&quot;" target="&quot;PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"These tools help identify design inconsistencies and weaknesses that could lead to lock bit modification vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)&quot;" target="&quot;WEB APPLICATIONS WITH SSL USAGE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"These vulnerabilities affect systems transmitting sensitive information over insecure channels without proper encryption mechanisms in place."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)&quot;" target="&quot;UNAUTHORIZED ACCESS TO SENSITIVE INFORMATION POSTCONDITION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Unauthorized access to sensitive information is a postcondition of plaintext transmission vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;VULNERABILITY: PLAINTEXT TRANSMISSION OF SENSITIVE INFORMATION (CVE-2022-29519, CVE-2022-30312, CVE-2022-31204, CVE-2002-1949, CVE-2008-4122, CVE-2008-3289, CVE-2008-4390, CVE-2007-5626, CVE-2004-1852, CVE-2008-0374, CVE-2007-4961, CVE-2007-4786, CVE-2005-3140)&quot;" target="&quot;WEB APPLICATIONS WITH SSL USAGE IMPLEMENTATION PHASE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Ensuring SSL usage in web applications is critical to prevent vulnerabilities related to plaintext transmission."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;INSUFFICIENT DATA CLEARING PRECONDITION&quot;" target="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Lack of data clearing is a prerequisite for the vulnerability to be exploited."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;MEMORY MANAGEMENT SYSTEMS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists in memory management systems due to improper cleanup procedures."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;SENSITIVE DATA EXPOSURE AND UNAUTHORIZED ACCESS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Unauthorized access results from the exposure of sensitive data due to uncleared resources."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2019-3733&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to memory exposure in cryptography libraries."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2003-0001&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to frame infoleak in Ethernet NIC drivers."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2003-0291&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to DHCP packet infoleak in routers."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2005-1406&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to memory infoleak due to partial clearing in products."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2005-1858&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to memory infoleak due to partial clearing in products."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2005-3180&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to memory infoleak due to partial clearing in products."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2005-3276&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to data structure infoleak due to partial clearing in products."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;CWE-459: IMPROPER CLEANUP ON RESOURCE RELEASE VULNERABILITY&quot;" target="&quot;CVE-2002-2077&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This specific vulnerability is an instance where the general cleanup issue leads to improper memory clearing before reuse in software."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;LOCK BIT MODIFICATION ATTACK TECHNIQUE&quot;" target="&quot;PREVENTIVE SECURITY DESIGN FLAWS IN HARDWARE IP CORES AND INTEGRATED CIRCUITS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack technique is part of a broader pattern that exploits design flaws in hardware IPs."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT MODIFICATION ATTACK TECHNIQUE&quot;" target="&quot;PROPER LOCK BIT DESIGN IMPLEMENTATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Correct implementation mitigates the risk by preventing unauthorized modification of lock bits post-initialization."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT MODIFICATION ATTACK TECHNIQUE&quot;" target="&quot;SECURITY PROTECTION METHOD (WRITE-ONCE SETTING)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The security protection method mitigates the risk by preventing write-once settings from being modified post-initialization."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;SECURE TRANSMISSION DESIGN PHASE&quot;" target="&quot;SOFTWARE DEVELOPMENT LIFECYCLE SECURITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The secure design phase relies on thorough security measures throughout the SDLC to mitigate risks associated with plaintext transmission."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE USE&quot;" target="&quot;RESOURCE LIFECYCLE MANAGEMENT ISSUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Uncleared sensitive information is a result of improper handling in the resource lifecycle management process."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE USE&quot;" target="&quot;MEMORY ALLOCATION VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The memory allocation vulnerability is caused by uncleared sensitive data in reusable resources."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC VULNERABILITY&quot;" target="&quot;SYSTEM-ON-A-CHIP (SOC)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists within System-on-Chip architecture, particularly in the improper isolation of shared resources between trusted and untrusted agents."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;RESOURCE LIFECYCLE MANAGEMENT ISSUE&quot;" target="&quot;CWE-212:UNCLEARED SENSITIVE DATA&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The resource lifecycle management issue encompasses clearing sensitive data before reuse, directly relating to CWE-212."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;RESOURCE LIFECYCLE MANAGEMENT ISSUE&quot;" target="&quot;IMPROPER INITIALIZATION/SHUTDOWN&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Problems arise when resources are not properly initialized or shutdown, leading to vulnerabilities in the management process."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;UNTRUSTED AGENTS&quot;" target="&quot;CVE-2022-24985 &quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Untrusted agents can exploit CVE-2022-24985 by bypassing authentication checks in a form hosting website."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;UNTRUSTED AGENTS&quot;" target="&quot;CVE-2021-36934 &quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Untrusted agents can take advantage of overly permissive ACLs to gain unauthorized access to sensitive files as indicated by CVE-2021-36934."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;UNTRUSTED AGENTS&quot;" target="&quot;INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Untrusted agents can exploit the vulnerability due to incorrect hardware register defaults and module parameters, leading to insecure states at power reset."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;UNTRUSTED AGENTS&quot;" target="&quot;INSUFFICIENT GRANULARITY OF ADDRESS REGIONS PROTECTED BY REGISTER LOCKS&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Untrusted agents might leverage insufficient granularity in address region protection to exploit the system's weaknesses."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;UNTRUSTED AGENTS&quot;" target="&quot;ALERT SIGNAL MODIFICATION ATTACK TECHNIQUE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Untrusted agents use the attack technique of modifying alert signals to disable security alerts."&lt;SEP&gt;"Untrusted agents use the attack technique to disable security alerts."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;ACCESS CONTROL POLICY IMPLEMENTATION FAILURE&quot;" target="&quot;SECURITY-SENSITIVE ASSETS&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Insufficient granularity of access control policies can lead to unauthorized access to security-sensitive assets."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;CWE-212:UNCLEARED SENSITIVE DATA&quot;" target="&quot;NETWORK PACKET EXPOSURE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Network packet exposure can occur due to uncleared sensitive data within packets during transmission."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;NETWORK PACKET EXPOSURE&quot;" target="&quot;CONFIDENTIALITY BREACH&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A breach of confidentiality occurs as a result of sensitive information being exposed through network packets."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;CVE-2021-36934 &quot;" target="&quot;SECURITY-SENSITIVE ASSETS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The overly permissive ACL vulnerability can result in unauthorized access to security-sensitive assets due to insufficient controls on user-related files."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY&quot;" target="&quot;SECURITY-SENSITIVE ASSETS&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"At power reset, insecure defaults can expose security-sensitive asset accesses to untrusted software, making them targets of exploitation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY&quot;" target="&quot;INSECURE DEFAULT VALUES&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Incorrectly defined default values and module parameters are precursors to the vulnerability at power reset."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;INCORRECT REGISTER DEFAULTS OR MODULE PARAMETERS VULNERABILITY&quot;" target="&quot;HARDWARE DESIGN REVIEW PHASE REQUIREMENT&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Reviewing system parameters and register defaults is critical to mitigate the risk of insecure hardware at power reset."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;INSUFFICIENT GRANULARITY OF ADDRESS REGIONS PROTECTED BY REGISTER LOCKS&quot;" target="&quot;AUTOMATED TOOLS TESTING PHASE REQUIREMENT&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Testing phases must employ automated tools to ensure address regions are sufficiently granular and protected."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;INFOLEAK THROUGH ERROR RESPONSES &quot;" target="&quot;DIFFERENT ERROR MESSAGES GENERATION &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The generation of different error messages implements an infoleak through error responses attack pattern."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;CWE-203 VULNERABILITY (CVE EXAMPLES)&quot;" target="&quot;MULTIPLE OPERATING SYSTEMS (CWE-203)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerabilities exist in multiple operating systems, making them targets for exploitation based on observable discrepancies."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;DIFFERENT ERROR MESSAGES GENERATION &quot;" target="&quot;REMOTE ATTACKER &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The remote attacker uses different error messages generated by the software for information gathering."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;OBSERVABLE DISCREPANCY VULNERABILITY (CWE-203)&quot;" target="&quot;VARIOUS PLATFORMS (CWE-203)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The observable discrepancy vulnerability exists in various platforms, making them targets for such attacks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;COMPROMISE SECURE BOOT CHAIN&quot;" target="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Exploiting the improper protection leads to compromising the secure boot chain, affecting system security."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;DEVICE SUPPORTING SECURE BOOT FEATURES&quot;" target="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The vulnerability exists in devices lacking proper protection mechanisms."&lt;SEP&gt;"The vulnerability exists in devices that support secure boot features but lack proper protection mechanisms."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;PERSONAL KEY NETWORK TRANSMISSION VULNERABILITY (CVE-2021-34687)&quot;" target="&quot;DES ALGORITHM USE&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Using DES algorithms may indirectly contribute to vulnerabilities like CVE-2021-34687 due to outdated standards."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;SIMULATION / EMULATION&quot;" target="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Verification through functional simulation helps ensure proper adherence to memory map policy, reducing risk."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;FAULT ATTACKS USING VOLTAGE AND CLOCK GLITCHES&quot;" target="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The fault attack pattern exploits vulnerabilities related to improper protection against voltage and clock glitches."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;FAULT ATTACKS USING VOLTAGE AND CLOCK GLITCHES&quot;" target="&quot;VOLTAGE AND CLOCK GLITCH EXPLOITATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The technique of exploiting voltage and clock glitches is a part of the fault attacks pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;THOROUGH VERIFICATION OF DATA ROUTING LOGIC&quot;" target="&quot;HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Verifying data routing logic can help mitigate the hardware vulnerability that incorrectly forwards data before security checks are complete."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;FUZZING (PENETRATION TESTING)&quot;" target="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Tests access control mechanisms to ensure protection against unauthorized software access, mitigating risk."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;FAULTY FSM DESIGN&quot;" target="&quot;CWE-1191 AND CWE-1244&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Both vulnerabilities can arise from faulty FSM designs that do not account for all possible states or transitions."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;FAULTY FSM DESIGN&quot;" target="&quot;IMPROPER WRITE HANDLING IN NON-VOLATILE MEMORIES&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Faulty design of finite state machines can exacerbate issues with improper write handling in non-volatile memories."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;FAULTY FSM DESIGN&quot;" target="&quot;CWE-1244&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Both vulnerabilities can result from faulty state handling, creating an environment where unauthorized access is possible."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;FAULTY FSM DESIGN&quot;" target="&quot;BLINDING OR MASKING TECHNIQUES FOR INTERNAL ASSETS&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Protecting internal assets through blinding/masking techniques can reduce the impact of faulty FSM design vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;AUTOMATED ANALYSIS: INFORMATION FLOW TRACKING&quot;" target="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Detects violations of access policies by tracking sensitive data flow, reducing risk of unauthorized exposure."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;DES ALGORITHM USE&quot;" target="&quot;CUSTOM CRYPTOGRAPHIC ALGORITHMS DEVELOPMENT&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Developing custom cryptographic algorithms exposes systems to known weaknesses, including those related to using DES."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;VOLTAGE GLITCH ATTACK TECHNIQUE&quot;" target="&quot;BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Attackers can use voltage glitches to exploit vulnerabilities in IP communication firmware allowing unauthorized control through certain impulses."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;MANUAL ANALYSIS&quot;" target="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Correct implementation of access policies as verified by manual analysis mitigates the vulnerability."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;MD5 CONFIGURATION VULNERABILITY (CVE-2005-2946)&quot;" target="&quot;MD5 ALGORITHM USE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Using MD5 as a default configuration leads to the vulnerability described in CVE-2005-2946."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;VOLTAGE AND CLOCK GLITCH EXPLOITATION&quot;" target="&quot;SECURE DEBUG INTERFACE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attacks may exploit secure debug interfaces through improper protection against voltage and clock glitches."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;VOLTAGE AND CLOCK GLITCH EXPLOITATION&quot;" target="&quot;BYPASS ACCESS CONTROL MECHANISMS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Using voltage and clock glitch attacks to bypass access control mechanisms."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;VOLTAGE AND CLOCK GLITCH EXPLOITATION&quot;" target="&quot;EXECUTE UNAUTHORIZED CODE OR COMMANDS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"As a postcondition, attackers may execute unauthorized code or commands on the system after exploiting vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;VOLTAGE AND CLOCK GLITCH EXPLOITATION&quot;" target="&quot;COMPROMISE SYSTEM SECURITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of compromising system security is accomplished through exploiting voltage and clock glitches."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;VOLTAGE AND CLOCK GLITCH EXPLOITATION&quot;" target="&quot;READ MEMORY AND MODIFY MEMORY OPERATIONS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Executing unauthorized memory operations through voltage and clock glitch attacks."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;HIGH-PERFORMANCE ON-CHIP BUS PROTOCOLS AND PROCESSOR DATA-PATHS&quot;" target="&quot;MELTDOWN ATTACK&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The Meltdown attack technique specifically targets the architecture of high-performance on-chip bus protocols and processor data-paths."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;HIGH-PERFORMANCE ON-CHIP BUS PROTOCOLS AND PROCESSOR DATA-PATHS&quot;" target="&quot;INSECURE SECURITY CHECKS LOGIC IMPLEMENTATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"These protocols and data-paths are prone to insecure security checks logic implementation, making them targets for attacks."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;IDENTITY CARD HASH COLLISION VULNERABILITY (CVE-2019-3907)&quot;" target="&quot;MD5 ALGORITHM USE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Using MD5 for identity card hashing introduces a vulnerability as documented in CVE-2019-3907."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;MD5 ALGORITHM USE&quot;" target="&quot;MD5 VULNERABILITY (CVE-2020-4778)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Using MD5 algorithm as a precondition makes systems susceptible to vulnerability CVE-2020-4778."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;MD5 ALGORITHM USE&quot;" target="&quot;SHA-2 CHAINING FOR ENCRYPTION IDEA (DISCOURAGED)&quot;">
  <data key="d3">4.0</data>
  <data key="d4">"The idea of chaining SHA-2 can be misused to create insecure systems when MD5 is involved, reflecting poor cryptographic design."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;SHA-1 VULNERABILITY (CVE-2005-2946)&quot;" target="&quot;MD4 ALGORITHM USE&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Using MD4 can indirectly contribute to the vulnerability described in CVE-2005-2946 by similar weaknesses."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;UNPRIVILEGED SW INTERFACE CHECK&quot;" target="&quot;ANTI-GLITCH PROTECTIONS LACK&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Checking if power management interfaces are available from unprivileged software (SW), which could make attacks like CLKSCREW and Plundervolt easier due to lack of anti-glitch protections."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;INSUFFICIENT PHYSICAL PROTECTION DESIGN DECISIONS&quot;" target="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Design decisions that do not properly align with intended protection can lead to vulnerabilities in physical access control measures."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;CVE-2017-5754: SPECULATIVE EXECUTION VULNERABILITY&quot;" target="&quot;SPECULATIVE EXECUTION AND INDIRECT BRANCH PREDICTION EXPLOITATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This attack pattern exploits the speculative execution vulnerability identified in CVE-2017-5754."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;ENCRYPTION OF DEBUG COMMUNICATIONS&quot;" target="&quot;SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Encryption mitigates sensitive information exposure by preventing unauthorized access to debug interfaces."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;ENCRYPTION OF DEBUG COMMUNICATIONS&quot;" target="&quot;CWE-1244&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Encrypting debug communications mitigates the risk of CWE-1244 being exploited."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;ENCRYPTION OF DEBUG COMMUNICATIONS&quot;" target="&quot;JTAG ACCESS CONTROL MISMANAGEMENT&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Encrypting debug communications mitigates the risk of improper JTAG access control being exploited."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;SECURITY TOKENS IN SOC SYSTEMS&quot;" target="&quot;IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The improper handling of memory ranges affects the security tokens within SoC systems."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</edge>
<edge source="&quot;SECURE BOOT BYPASS AND EFUSE READING POSTCONDITION&quot;" target="&quot;ANTI-GLITCH PROTECTIONS LACK&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attacker exploiting the lack of anti-glitch protections can bypass secure boot mechanisms and read protected eFuses as a result."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;DEBUG INTERFACE MISCONFIGURATION&quot;" target="&quot;CWE-1244&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Improper configuration of debug interfaces can lead to a state where vulnerabilities like CWE-1244 exist."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;DETECTION OF VOLTAGE AND CLOCK GLITCHES&quot;" target="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Detection of improper protection against voltage and clock glitches is a prerequisite for launching an attack."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;UNTRUSTED AGENT&quot;" target="&quot;ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The untrusted agent uses an attack pattern exploiting inconsistencies in memory protection to bypass hardware-enforced restrictions."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;CWE-1244&quot;" target="&quot;SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Exploiting CWE-1244 results in the exposure of sensitive information to unauthorized entities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;SYSTEM ON CHIP (SOC)&quot;" target="&quot;IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The improper security vulnerability exists within System on Chips where fabric bridges lack proper access control checks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;SYSTEM SOFTWARE MEMORY MANAGEMENT EXPLOIT&quot;" target="&quot;PRIVILEGE ESCALATION VIA MEMORY OVERLAP EXPLOIT&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The system software memory management exploit and privilege escalation via overlapping memory are related attack techniques."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</edge>
<edge source="&quot;SYSTEM SOFTWARE MEMORY MANAGEMENT EXPLOIT&quot;" target="&quot;MEMORY REGION OVERLAP DENIAL OF SERVICE ATTACK&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A denial of service attack can result from exploiting system software’s flexibility in managing memory regions."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</edge>
<edge source="&quot;ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN&quot;" target="&quot;BYPASSING HARDWARE-ENFORCED ACCESS PROTECTION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This technique is part of the attack pattern involving inconsistent access protections."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;ALIASED MEMORY REGIONS ACCESS INCONSISTENCY EXPLOITATION PATTERN&quot;" target="&quot;MEMORY MAPPING CONFIGURATION ADJUSTMENT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attack technique that creates new aliases for unauthorized access by adjusting memory mappings."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;CLOCK GLITCH ATTACK PATTERN&quot;" target="&quot;ANTI-GLITCH PROTECTIONS LACK&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The attack pattern of clock glitch involves exploiting the lack of anti-glitch protections, which allows bypassing secure boot mechanisms and reading protected eFuses."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;MEMORY MAPPING CONFIGURATION ADJUSTMENT&quot;" target="&quot;SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Changing memory mapping configurations allows the untrusted agent to exploit vulnerabilities related to aliased memory regions."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;MEMORY REGION OVERLAP DENIAL OF SERVICE ATTACK&quot;" target="&quot;IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"A denial of service attack on high-privilege software memory regions is a postcondition resulting from exploiting the vulnerability."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;" target="&quot;PROPER IMPLEMENTATION OF SECURE BOOT AND PROTECTION LOGIC&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Robust implementation can mitigate risks associated with improper protection against voltage and clock glitches."&lt;SEP&gt;"Robust implementation can mitigate the risks associated with improper protection against voltage and clock glitches."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;" target="&quot;ACCESS CONTROL MECHANISMS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Lack of protection against voltage and clock glitches can lead to bypassing access control mechanisms."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION AGAINST VOLTAGE AND CLOCK GLITCHES VULNERABILITY&quot;" target="&quot;HARDWARE-BASED SECURITY FEATURES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Vulnerabilities exist in hardware-based security features due to improper protection."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;PROTECTION ROUTINE BYPASSING TACTIC&quot;" target="&quot;SECURITY REVIEW AGAINST TRANSFER OF ATTACK TARGET&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"A mitigation approach involves reviewing whether protections merely transfer the attack target, as bypassing protection routines is a tactic that attackers can use."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;RESTRICTED DEBUG MODE ENTRY CONTROLS&quot;" target="&quot;IMPROPERLY RESTRICTED SECURITY TOKEN ASSIGNMENT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Restricting control over memory aliasing features prevents improper assignment of mutable security tokens to malicious agents."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;RESTRICTED DEBUG MODE ENTRY CONTROLS&quot;" target="&quot;CRYPTOGRAPHY OPERATIONS SENSITIVE VALUES EXPOSURE IN HARDWARE DEBUG MODE &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Mitigation controls to restrict debug mode entry and ensure security-sensitive values are cleared, preventing exposure."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;IMPROPER SECURITY TOKEN ASSIGNMENT PROTECTION MECHANISM VULNERABILITY&quot;" target="&quot;SECURITY TOKEN IMPROPER ASSIGNMENT PROTECTION WEAKNESS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"This vulnerability underlies the improper protection mechanisms for security token assignments, leading to potential exploits."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</edge>
<edge source="&quot;HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS&quot;" target="&quot;MELTDOWN ATTACK&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The Meltdown attack technique exploits the de-synchronization weakness in hardware logic to forward unauthorized data."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;HARDWARE LOGIC WITH INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS&quot;" target="&quot;CWE-821: INSECURE DE-SYNCHRONIZATION BETWEEN CONTROL AND DATA CHANNELS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The precondition involves the same hardware logic weakness that incorrectly forwards data before security checks are complete."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;WEAK RANDOMNESS GENERATION&quot;" target="&quot;LINEAR FEEDBACK SHIFT REGISTER (LFSR)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Using LFSR can lead to weak randomness generation, which is a major security issue."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d7e3daa3b506ca99ea5b0a880cbb5093</data>
</edge>
<edge source="&quot;IMPROPERLY RESTRICTED SECURITY TOKEN ASSIGNMENT&quot;" target="&quot;SECURITY TOKEN MECHANISM IN SOCS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The improper protection of security tokens leads to vulnerabilities within the mechanism used by SoCs for action differentiation and identification."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;MELTDOWN ATTACK&quot;" target="&quot;UNAUTHORIZED ACCESS AND DATA EXPOSURE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"As a result of exploiting the hardware vulnerability, unauthorized access occurs leading to data exposure."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;MELTDOWN ATTACK&quot;" target="&quot;DATA CONFIDENTIALITY BREACH&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A postcondition resulting from an attacker exploiting the de-synchronization between control and data channels to gain unauthorized access to sensitive information."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;MELTDOWN ATTACK&quot;" target="&quot;ATTACKER (NOT EXPLICITLY NAMED)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker uses the Meltdown attack technique to exploit hardware vulnerabilities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;UNAUTHORIZED ACCESS TO SENSITIVE MEMORY REGIONS&quot;" target="&quot;SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"As a result, unauthorized access to sensitive regions is affected due to aliased memory region inconsistencies."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;UNAUTHORIZED ACCESS TO SENSITIVE MEMORY REGIONS&quot;" target="&quot;CRYPTOGRAPHY OPERATIONS SENSITIVE VALUES EXPOSURE IN HARDWARE DEBUG MODE &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"As a result, unauthorized access can lead to exposure of sensitive cryptographic values when entering debug mode."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;SPECULATIVE EXECUTION AND INDIRECT BRANCH PREDICTION EXPLOITATION&quot;" target="&quot;MICROARCHITECTURAL STATE EXPOSURE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Exploiting microarchitectural state exposure is a tactic achieved through the attack pattern of speculative execution and indirect branch prediction exploitation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-79d9c663f31b41f25e5f99c1f795c597</data>
</edge>
<edge source="&quot;ARCHITECTURE OR DESIGN REVIEW&quot;" target="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Ensures proper policy implementation through documentation review, mitigating the vulnerability."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;SYSTEM ADDRESS MAP WITH ALIASED MEMORY REGIONS VULNERABILITY&quot;" target="&quot;ACCESS CONTROL SYNCHRONIZATION BETWEEN MPU&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Mitigates inconsistencies in access protections by ensuring synchronization across MPUs protecting aliased regions."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2cef8319ae87f01f627389db9b2b7646</data>
</edge>
<edge source="&quot;MICROCONTROLLER HARDWARE AND PROCESSOR SYSTEMS&quot;" target="&quot;INCORRECT SELECTION OF FUSE VALUES VULNERABILITY&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The vulnerability exists in microcontroller hardware and processor systems due to incorrect fuse value settings."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;RAZOR FLIP-FLOPS&quot;" target="&quot;SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Special flip-flops designed to detect and prevent glitches in security-sensitive hardware modules, mitigating potential vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;SYSTEM-ON-CHIP (SOC)&quot;" target="&quot;MISSING SECURITY IDENTIFIER PRIVILEGE ESCALATION POSTCONDITION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"SoCs are targeted in scenarios where missing security identifiers lead to privilege escalation or unauthorized access postconditions."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;COMPARISON LOGIC GRANULARITY ISSUE&quot;" target="&quot;BYPASS PROTECTION MECHANISM AND GAIN PRIVILEGES TACTIC&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic is accomplished by exploiting comparison logic granularity issues to bypass protection mechanisms."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;COMPARISON LOGIC GRANULARITY ISSUE&quot;" target="&quot;INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"An attack pattern of incorrect comparison logic granularity exploits an issue where the product's comparison logic is performed step-by-step rather than in one operation."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;INCORRECT SELECTION OF FUSE VALUES VULNERABILITY&quot;" target="&quot;HARDWARE SECURITY MEASURES IMPLEMENTATION SOFTWARE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Software for implementing hardware security measures can prevent vulnerabilities related to incorrect fuse value settings."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;REDUNDANCY IMPLEMENTATION FOR SECURITY-SENSITIVE CODE&quot;" target="&quot;SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing redundancy in security-sensitive code helps mitigate glitches and unexpected faults in critical hardware modules."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;COMPARISON LOGIC TIMING ATTACK POSTCONDITION&quot;" target="&quot;INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The attack pattern of incorrect comparison logic granularity can lead to postconditions involving timing attacks."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;COMPARISON LOGIC TIMING ATTACK POSTCONDITION&quot;" target="&quot;INCORRECT COMPARISON LOGIC GRANULARITY ISSUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Postconditions involving timing attacks result from exploiting issues with comparison logic granularity."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;UNSPECIFIED ATTACKER&quot;" target="&quot;SOFTWARE-CONTROLLED POWER MANAGEMENT FEATURES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers use improperly secured software-controlled power management features to exploit vulnerabilities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;UNSPECIFIED ATTACKER&quot;" target="&quot;SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attacker can use specific instruction sequences as a technique for exploiting processor vulnerabilities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;UNSPECIFIED ATTACKER&quot;" target="&quot;RUNTIME ACTIVATION OF TEST/DEBUG FEATURES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attacker may use runtime activation of test/debug features to carry out their malicious activities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;UNAUTHORIZED CONTROL THROUGH IP COMMUNICATION FIRMWARE&quot;" target="&quot;BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Exploiting the vulnerability in IP communication firmware can lead to unauthorized control, allowing attackers to manipulate data or gain access."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;SECURE COMPARISON LOGIC DESIGN PATTERN&quot;" target="&quot;SECURE SYSTEM DESIGN IMPLEMENTATION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Implementation of secure system design includes adopting the secure comparison logic pattern to mitigate timing attacks."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;" target="&quot;PHYSICAL MANUFACTURING ERRORS&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Errors during manufacturing phase contribute to the vulnerability by introducing weaknesses into physical security mechanisms."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;" target="&quot;PHYSICAL ACCESS CONTROL MECHANISM&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Properly designed and implemented physical control mechanisms mitigate the vulnerability of improper physical access control."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;IMPROPER PHYSICAL ACCESS CONTROL VULNERABILITY&quot;" target="&quot;FORMAL VERIFICATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Assertions in formal verification capture and prevent illegal register access scenarios, mitigating the vulnerability."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;ANTI-GLITCH PROTECTIONS LACK&quot;" target="&quot;SECURE BOOT BYPASS VIA ANTI-GLITCH PROTECTIONS LACK&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Lack of anti-glitch protections leads to the postcondition where secure boot mechanisms can be bypassed by attackers."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION&quot;" target="&quot;CVE-2019-11157 (PLUNDERVOLT)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The fault injection technique exploits the improper conditions check in Intel processor voltage settings to escalate privileges."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION&quot;" target="&quot;PROPER ACCESS CONTROL FOR PHYSICAL CONDITIONS MANAGEMENT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Proper access control mitigates the risk of exploiting vulnerabilities through fault injection techniques."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;FAULT INJECTION VIA DEVICE CLOCK/VOLTAGE MANIPULATION&quot;" target="&quot;ROWHAMMER VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The fault injection technique may exploit the Rowhammer vulnerability to cause bit flips in memory."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;LEVEL SENSORS&quot;" target="&quot;SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Sensors at the SoC or platform level can detect anomalies caused by glitch attacks on security-sensitive hardware modules."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;COMPARISON LOGIC IMPLEMENTATION SOFTWARE&quot;" target="&quot;INCORRECT COMPARISON LOGIC GRANULARITY ATTACK PATTERN&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The software implements comparison logic in steps, which is exploited by attackers through incorrect comparison granularity."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;IMPROPER HANDLING OF OVERLAP BETWEEN PROTECTED MEMORY RANGES VULNERABILITY&quot;" target="&quot;SECURITY TOKEN IMPROPER ASSIGNMENT PROTECTION WEAKNESS&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"The vulnerability and protection weakness share a premise relationship, both being conditions for exploitation by attackers."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</edge>
<edge source="&quot;SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT&quot;" target="&quot;CVE-2019-11157 (PLUNDERVOLT)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The side channel analysis technique can exploit the improper conditions check for gathering information necessary to perform attacks."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT&quot;" target="&quot;IMPROPER SECURITY LOCK BYPASSING&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of bypassing security locks is accomplished through side channel analysis and measurement collection."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT&quot;" target="&quot;INTEL PROCESSORS, AMD EXTENSIONS FOR LINUX&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The target entity includes processors and extensions vulnerable to side channel analysis attacks through their hardware features."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT&quot;" target="&quot;INTEL RAPL INTERFACE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers use the Intel RAPL interface to gather measurement traces necessary for side-channel analysis."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;SIDE CHANNEL ANALYSIS VIA POWER CONSUMPTION MEASUREMENT&quot;" target="&quot;ACCESS CONTROL INADEQUACY IN LINUX KERNEL DRIVER&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Inadequate access control enables attackers to use side-channel analysis through Linux kernel driver vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;UNAUTHORIZED ACTOR&quot;" target="&quot;RESTRICTED INFORMATION EXPOSURE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An unauthorized actor can exploit insufficient protections to access restricted information."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-1a161ab7512e03998cff099072c50818</data>
</edge>
<edge source="&quot;UNAUTHORIZED ACCESS THROUGH IP COMMUNICATION FIRMWARE&quot;" target="&quot;BOOT SHELL ACCESS VIA IMPULSES VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting vulnerabilities in IP communication firmware allows unauthorized access and control through certain impulses as a postcondition."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;INCONSISTENT MEMORY ACCESS CONTROL&quot;" target="&quot;CVE-2019-11157 (PLUNDERVOLT)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Inconsistent memory access control is a prerequisite for exploiting vulnerabilities in power management interfaces."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;MANUFACTURING AND OPERATIONAL DEFECTS&quot;" target="&quot;SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Semiconductor defects occurring during manufacturing or operational use can compromise the security objectives of hardware modules containing such flaws."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;SECURITY-SENSITIVE HARDWARE MODULE WITH SEMICONDUCTOR DEFECTS&quot;" target="&quot;TUNABLE REPLICA CIRCUITS (TRCS)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"TRCs are used at the circuit level to mitigate glitch attacks on security-sensitive hardware modules containing semiconductor defects."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1ea2cd26ef91f5c526781b17429acd7f</data>
</edge>
<edge source="&quot;CLFLUSH INSTRUCTION EXPLOIT&quot;" target="&quot;ROWHAMMER VULNERABILITY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The CLFLUSH instruction exploit leverages the Rowhammer vulnerability to perform bit flips in memory."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;VIRTUALIZATION SOFTWARE&quot;" target="&quot;HPEG&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The HPEG group exploits vulnerabilities in virtualization software, such as the one documented in CVE-2008-7096."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;FAULTY FSM STATE HANDLING&quot;" target="&quot;SYSTEM INSTABILITY AND PRIVILEGE ESCALATION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Exploiting faulty FSM states can lead to system instability or gaining additional privileges."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;FAULTY FSM STATE HANDLING&quot;" target="&quot;UNAUTHORIZED DEBUG SESSIONS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Exploiting faulty state handling in FSMs can result in unauthorized debug sessions, compromising system security."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;ACCESS CONTROL INADEQUACY IN LINUX KERNEL DRIVER&quot;" target="&quot;INFORMATION DISCLOSURE THROUGH SIDE CHANNEL ATTACKS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of information disclosure is a result of exploiting inadequate access controls in the Linux kernel driver."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-494a02c2f9b114781552cc59c3c1dce1</data>
</edge>
<edge source="&quot;PROCESSOR DESIGN FLAW EXPLOITATION PATTERN&quot;" target="&quot;CVE-2008-7096: REMAPPING REGISTER VULNERABILITY&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"The processor design flaw exploitation pattern can utilize the vulnerability in remapping registers to achieve its objective."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;PROCESSOR DESIGN FLAW EXPLOITATION PATTERN&quot;" target="&quot;COMPROMISE HARDWARE PRODUCT SECURITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic to compromise hardware product security is accomplished through employing processor design flaw exploitation patterns."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;PROCESSOR DESIGN FLAW EXPLOITATION PATTERN&quot;" target="&quot;PROCESSOR DESIGN FLAW&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The processor design flaw enables the exploitation pattern where ring 0 code can access more privileged rings."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;REGISTER REMAPPING TECHNIQUE&quot;" target="&quot;MEMORY-ACCESS-CONTROL FILTER IMPLEMENTATION&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Implementing a memory-access-control filter mitigates the risk of register remapping technique being exploited."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;REGISTER REMAPPING TECHNIQUE&quot;" target="&quot;CVE-2008-7096: REMAPPING REGISTER VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The register remapping technique can exploit the vulnerability in remapping registers documented by CVE-2008-7096."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION&quot;" target="&quot;CRYPTOGRAPHIC PRIMITIVE&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"A risky implementation of a cryptographic primitive exposes the system to vulnerabilities due to weak or non-standard algorithms."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</edge>
<edge source="&quot;CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION&quot;" target="&quot;NON-STANDARD CRYPTOGRAPHY IMPLEMENTATION&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Using non-standard cryptography implementations is one of the main reasons for CWE-1240 vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</edge>
<edge source="&quot;CWE-1240 USER OF RISKY CRYPTOGRAPHIC IMPLEMENTATION&quot;" target="&quot;ATTACKER EXPLOITATION OF WEAK ALGORITHMS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers can exploit weaknesses in risky cryptographic implementations to gain unauthorized access to systems."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</edge>
<edge source="&quot;LIMITED-WRITE NON-VOLATILE MEMORIES MANAGEMENT FAILURE&quot;" target="&quot;IMPROPER WRITE HANDLING IN NON-VOLATILE MEMORIES&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Failure to manage limited-write non-volatile memories correctly leads directly to improper write handling issues."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;IMPROPER HANDLING OF OVERLAPPING MEMORY REGIONS AND REGISTER ACCESS CONTROL&quot;" target="&quot;CVE-2008-7096: REMAPPING REGISTER VULNERABILITY&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Lack of proper handling for overlapping memory regions and improper register access control are prerequisites for the vulnerability in remapping registers to be exploited."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;NON-STANDARD CRYPTOGRAPHY IMPLEMENTATION&quot;" target="&quot;CRYPTOGRAPHIC PRIMITIVE EVALUATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Ensuring cryptographic algorithms are properly evaluated helps mitigate risks associated with non-standard implementations."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</edge>
<edge source="&quot;JTAG ACCESS CONTROL MISMANAGEMENT&quot;" target="&quot;CVE-2019-18827&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Improper management of JTAG access control leads directly to the CVE-2019-18827 vulnerability."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;CVE-2008-7096: REMAPPING REGISTER VULNERABILITY&quot;" target="&quot;SECURITY-SENSITIVE MODULES IN HARDWARE PRODUCT&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability in remapping registers exists within security-sensitive modules of hardware products, making them targets for attacks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;CVE-2008-7096: REMAPPING REGISTER VULNERABILITY&quot;" target="&quot;PROCESSOR DESIGN FLAW ENABLING RING 0 ACCESS TO PRIVILEGED RANGES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of enabling ring 0 access to privileged ranges is an effect of exploiting the vulnerability in remapping registers."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;CVE-2008-7096: REMAPPING REGISTER VULNERABILITY&quot;" target="&quot;MEMORY-ACCESS-CONTROL CHECK FILTER&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The memory-access-control check filter mitigates the risk associated with exploiting remapping register vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;PROCESSOR DESIGN FLAW ENABLING RING 0 ACCESS TO PRIVILEGED RANGES&quot;" target="&quot;SINGLE-EVENT UPSET (SEU)&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Single-event upsets can cause temporary bit flips, enabling the processor design flaw exploitation pattern."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;ATTACKER EXPLOITATION OF WEAK ALGORITHMS&quot;" target="&quot;ADVERSARIAL ACCESS TO ENCRYPTED DATA&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The postcondition of gaining unauthorized access to encrypted data is a result of exploiting weak algorithms in the cryptographic system."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-a47308ac5873562af0ec6cecb9598b6d</data>
</edge>
<edge source="&quot;PROCESSOR DESIGN FLAW&quot;" target="&quot;SECURITY-SENSITIVE MODULE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The security-sensitive module in hardware products is susceptible to the processor design flaw, making it a target."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;PRIVILEGE ESCALATION VIA MEMORY OVERLAP EXPLOIT&quot;" target="&quot;MALICIOUS AGENT&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"A malicious agent uses the technique of exploiting overlapping memory regions to escalate privileges."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-c164a155c6861d928b9e41ab73c39e80</data>
</edge>
<edge source="&quot;SINGLE-EVENT UPSET (SEU)&quot;" target="&quot;TRIPLE MODULAR REDUNDANCY (TMR)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Triple modular redundancy mitigates the impact of single-event upsets on security-sensitive hardware modules."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;ERROR-CORRECTING CODES (ECC) AND ADDRESS INTERLEAVING&quot;" target="&quot;IMPROPER MEMORY-MAPPED I/O REGISTERS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing ECC and address interleaving mitigates the vulnerability of improperly accessed memory-mapped registers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-25f73985e28c5422bb14dc5727705f9e</data>
</edge>
<edge source="&quot;ATTACKER ENTITY (NOT NAMED)&quot;" target="&quot;SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attacker might exploit access to sensitive non-volatile information during debug operations for unauthorized entry."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;ATTACKER ENTITY (NOT NAMED)&quot;" target="&quot;UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker may use the technique of exploiting undocumented features/chicken bits on a device."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION&quot;" target="&quot;DEVICE WITH UNDOCUMENTED FEATURES/CHICKEN BITS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Exploiting undocumented features/chicken bits affects devices that contain them, providing unintended access points."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;UNDOCUMENTED FEATURES/CHICKEN BITS EXPLOITATION&quot;" target="&quot;DISABLING CHICKEN BITS IN PRODUCTION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Disabling chicken bits in production mitigates the technique of exploiting them for unauthorized access."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG&quot;" target="&quot;PROTECTING SENSITIVE INFORMATION DURING DEBUG OPERATIONS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Protecting sensitive information during debug operations mitigates the risk associated with accessing security-sensitive data during these times."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;SENSITIVE NON-VOLATILE INFORMATION ACCESS DURING DEBUG&quot;" target="&quot;SECURITY-SENSITIVE INFORMATION (STORED IN FUSES)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Access to security-sensitive information stored in fuses during debug operations is a direct exploitation of this vulnerability."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;SECURE BOOT PROCESS&quot;" target="&quot;PROPER IMPLEMENTATION OF SECURE BOOT AND PROTECTION LOGIC&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"A proper implementation ensures a trusted environment for boot processes."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-3d2fd26674527134e3c7fbd5cc806bf4</data>
</edge>
<edge source="&quot;CVE-2021-3692&quot;" target="&quot;MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The vulnerability is due to the usage of mt_rand() function for token generation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION EXPOSURE VIA DEBUG ACCESS LEVELS&quot;" target="&quot;SECURE BOOT BYPASSING ATTACK PATTERN&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The secure boot bypass attack pattern leads directly to sensitive information exposure through misconfigured debug access levels."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-a6dc7fbf8ba2eb5753ca8bd31a3928a8</data>
</edge>
<edge source="&quot;DESIGN CHANGE DURING IMPLEMENTATION PHASE&quot;" target="&quot;MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Changes made during implementation phase lead to the use of mt_rand() function, which can be exploited."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;MT_RAND FUNCTION USAGE IN PHP FRAMEWORKS&quot;" target="&quot;TRUE RANDOM NUMBER GENERATOR IMPLEMENTATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Implementing a true random number generator mitigates the risk associated with using mt_rand() function for token generation."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;SECURE SYSTEM DESIGN IMPLEMENTATION&quot;" target="&quot;INCORRECT FUSE VALUES SETTING TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Secure system design implementation mitigates the risk of incorrectly setting fuse values and driving systems into insecure states."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-eb3af9cc9df9726a2a72280178b25b2d</data>
</edge>
<edge source="&quot;MD5 HASH VULNERABILITY (CVE-2005-2946)&quot;" target="&quot;MD5 HASH ALGORITHM&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The MD5 hash vulnerability exploits the weaknesses in the MD5 algorithm."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-5d9aa46e1c0b88bd33dd6122a455f98b</data>
</edge>
<edge source="&quot;MALICIOUS AGENT&quot;" target="&quot;UNINTENTIONAL POLICY INSERTION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"A malicious agent uses the technique of unintentionally inserting itself into write policy registers to exploit vulnerabilities."&lt;SEP&gt;"A malicious agent uses the technique of unintentionally inserting itself into write policy registers."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;UNDOCUMENTED DEBUG INTERFACES EXPLOITATION&quot;" target="&quot;SECURITY-SENSITIVE INFORMATION STORED IN FUSES&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Exploiting undocumented debug interfaces can lead to unauthorized access to security-sensitive information stored in fuses."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;SECURITY-SENSITIVE INFORMATION STORED IN FUSES&quot;" target="&quot;SENSITIVE NON-VOLATILE INFORMATION PROTECTION DURING DEBUG MODE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Protecting sensitive information during debug operations mitigates potential exposure of security-sensitive data."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0204407c5971063b3d859036310a63a1</data>
</edge>
<edge source="&quot;CVE-2021-33150 AND CVE-2021-0146 VULNERABILITIES&quot;" target="&quot;HARDWARE-SENSOR BLOCKS AND FABRIC END-POINT DEVICES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"These vulnerabilities exist in hardware-sensor blocks and fabric end-point devices, making them susceptible to attacks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;CVE-2021-33150 AND CVE-2021-0146 VULNERABILITIES&quot;" target="&quot;TEST OR DEBUG LOGIC ACTIVATION DURING RUNTIME PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack pattern exploits vulnerabilities that allow test/debug logic to be activated during runtime."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;MODERN PROCESSORS WITH SHARED RESOURCES&quot;" target="&quot;IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE (CWE-1304)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The improperly preserved integrity vulnerability affects modern processors during power operations, compromising system security."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;MODERN PROCESSORS WITH SHARED RESOURCES&quot;" target="&quot;SHARED MICROARCHITECTURAL RESOURCES VULNERABILITY (CWE-1189)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This vulnerability exists in modern processors that share microarchitectural resources, violating isolation between contexts."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;PREVENT DATA LEAKAGE&quot;" target="&quot;INADEQUATE DATA REMOVAL TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of preventing data leakage is achieved through ensuring proper data removal, thus countering inadequate removal techniques."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;INSTRUCTION SEQUENCE EXPLOITATION PATTERN&quot;" target="&quot;PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The pattern of exploiting instruction sequences is used to exploit the processor vulnerability leading to CPU hang."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;INSTRUCTION SEQUENCE EXPLOITATION PATTERN&quot;" target="&quot;SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Exploiting specific sequences is part of the attack pattern involving dangerous instruction combinations."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;INTEL CHIPSETS AND SIMATIC DEVICES&quot;" target="&quot;VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) &quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The vulnerability exists on Intel chipsets and Siemens SIMATIC S7-1200/S7-200 SMART CPU families."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;INTEL CHIPSETS AND SIMATIC DEVICES&quot;" target="&quot;SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The vulnerability related to uncleared sensitive information exists on Intel chipsets and Siemens SIMATIC devices."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;SOC AND MICROCONTROLLER HARDWARE&quot;" target="&quot;IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Microcontroller hardware and SoCs are targets that can be affected by improper protection mechanisms on physical side channels."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;SENSOR VALUE MANIPULATION LEADING TO DOS OR HARDWARE DAMAGE&quot;" target="&quot;CVE-2017-8252 VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of sensor value manipulation leading to a Denial-of-Service condition is affecting the system due to exploitation of vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;INCOMPLETE REMOVAL PROCEDURES&quot;" target="&quot;SENSITIVE DATA VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Incomplete procedures for removing sensitive data are a prerequisite that leads to vulnerabilities in decommissioned devices."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION&quot;" target="&quot;RIGOROUS TESTING STRATEGY AND PATCHING&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Testing and patching strategies are aimed at mitigating the risk posed by exploiting specific sequences of instructions in processors."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION&quot;" target="&quot;LOSS OF DATA INTEGRITY AND AVAILABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of causing loss of data integrity and availability is achieved through exploiting dangerous instruction sequences."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;SPECIFIC INSTRUCTION SEQUENCES EXPLOITATION&quot;" target="&quot;PROCESSOR HARDWARE VULNERABILITIES&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The hardware vulnerabilities implement the attack techniques of exploiting dangerous instruction sequences in processors."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;SENSITIVE DATA VULNERABILITY&quot;" target="&quot;DATA SCRUBBING FAILURE PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The failure to properly implement a data scrubbing pattern leads to the existence of sensitive data vulnerabilities."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;SENSITIVE DATA VULNERABILITY&quot;" target="&quot;DECOMMISSIONED DEVICE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists due to sensitive data remaining on decommissioned devices, making them targets."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;SENSITIVE DATA VULNERABILITY&quot;" target="&quot;DATA ACQUISITION AND EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers exploiting the existence of sensitive data leads to further exploitation or data leakage as postconditions."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;ATTACKER (UNDISCLOSED)&quot;" target="&quot;IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attacker could exploit improperly preserved integrity during power save/restore operations to compromise hardware security."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;LOSS OF DATA INTEGRITY AND AVAILABILITY&quot;" target="&quot;PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-1999-1476)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This vulnerability can cause loss of data integrity and system availability when exploited by attackers."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION&quot;" target="&quot;CONFIGURATION STATE VERIFICATION DURING POWER SAVE/RESTORE OPERATIONS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Verifying configuration state integrity is a prerequisite to prevent hardware security breaches during power operations."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE DURING A POWER SAVE/RESTORE OPERATION&quot;" target="&quot;QUALITY DEGRADATION AND STABILITY ISSUES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of quality degradation and stability issues is a result of exploiting improperly preserved hardware state during power operations."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;IMPROPERLY PRESERVED INTEGRITY ATTACK PATTERN&quot;" target="&quot;GAIN PRIVILEGES THROUGH CONFIGURATION ALTERATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of gaining privileges is accomplished through the attack pattern of improperly preserved integrity."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;IMPROPERLY PRESERVED INTEGRITY ATTACK PATTERN&quot;" target="&quot;PERSISTENT STORAGE VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack pattern exploits the persistent storage vulnerability to gain unauthorized access or escalate privileges."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;INSTRUCTION SET ARCHITECTURE BUGS&quot;" target="&quot;PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Identifying ISA bugs is a prerequisite for exploiting the vulnerability in AMD CPUs."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION EXPOSURE THROUGH SIDE CHANNELS&quot;" target="&quot;TVLA LEAKAGE DETECTION TESTS AND PENETRATION TESTING&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"These tests and attacks mitigate the risk of sensitive information exposure."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-350f1de43053ea2973652d98a983f7fb</data>
</edge>
<edge source="&quot;NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES&quot;" target="&quot;PARTITIONED CACHES AND BARRIER/FLUSH INSTRUCTIONS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Partitioned caches and barrier/flush instructions are used to mitigate the vulnerability of non-transparent sharing of microarchitectural resources."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES&quot;" target="&quot;MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack pattern exploits shared hardware resources violating architectural isolation to leak information between execution contexts."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;NON-TRANSPARENT SHARING OF MICROARCHITECTURAL RESOURCES&quot;" target="&quot;CONFIDENTIALITY VIOLATIONS THROUGH COVERT CHANNELS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploitation leads to confidentiality violations through covert channels leaking sensitive information via shared microarchitecture."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;MALICIOUS ACTOR&quot;" target="&quot;INTEGRATED CIRCUIT (IC) IMAGING TECHNIQUES&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"A malicious actor uses IC imaging techniques as part of their attack strategy to reverse engineer integrated circuits."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;PROCESSOR INSTRUCTION SEQUENCE BUG (CVE-2021-26339)&quot;" target="&quot;PROCESSOR HARDWARE WITH VULNERABLE INSTRUCTIONS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The processor instruction sequence bug exists in the hardware of affected processors, leading to vulnerabilities."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;UART INTERFACE ACCESS DURING BOOT PROCESS&quot;" target="&quot;ATTACKER WITH PHYSICAL ACCESS&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An attacker can use the UART interface access technique to exploit vulnerabilities during the boot process."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;UART INTERFACE ACCESS DURING BOOT PROCESS&quot;" target="&quot;MANUFACTURING MODE EXPLOIT&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Accessing the UART interface during boot process is a specific technique used to carry out the manufacturing mode exploit attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;UART INTERFACE ACCESS DURING BOOT PROCESS&quot;" target="&quot;UNAUTHORIZED ACCESS DURING MANUFACTURING&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of gaining unauthorized access is accomplished through the attack technique of accessing UART interfaces during boot processes."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY&quot;" target="&quot;INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The inadequate data erasure implementation attack technique exploits the insufficient data removal pattern in hardware components."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT VULNERABILITY&quot;" target="&quot;HARDWARE REMANENCE PHENOMENON PRECONDITION VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Residual physical characteristics post data removal contribute to insufficient erasure processes leading to sensitive information retrieval vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;ACCESS CONTROL INCONSISTENCY TECHNIQUE&quot;" target="&quot;POLICY PRIVILEGES ARE NOT ASSIGNED CONSISTENTLY BETWEEN CONTROL AND DATA AGENTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"This technique exploits inconsistencies in policy privileges, directly implementing this vulnerability."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;SECURITY TOKEN DECODER REVIEW&quot;" target="&quot;ACCESS CONTROL POLICY WEAKNESS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Reviewing security token decoders aims to mitigate vulnerabilities arising from inconsistent privilege assignments."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;UNSPECIFIED ATTACKER 2&quot;" target="&quot;UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attacker can use unauthorized modification techniques against improperly stored critical security assets."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;INCORRECT SECURITY IDENTIFIER DECODING&quot;" target="&quot;DESIGN CONSISTENCY REVIEW AND WEAKNESS IDENTIFICATION IN ARCHITECTURE PHASE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Reviewing design consistency helps identify common weaknesses during architecture phase."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</edge>
<edge source="&quot;INCORRECT SECURITY IDENTIFIER DECODING&quot;" target="&quot;REVIEW AND TESTING OF SECURITY IDENTIFIERS DURING IMPLEMENTATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Testing and reviewing security identifier decoders mitigate incorrect decoding vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</edge>
<edge source="&quot;INCORRECT SECURITY IDENTIFIER DECODING&quot;" target="&quot;EXPLOIT OF ACCESS-CONTROL MISCONFIGURATION DURING IMPLEMENTATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An untrusted agent exploits misconfigured security identifiers to gain unauthorized access."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</edge>
<edge source="&quot;INCORRECT SECURITY IDENTIFIER DECODING&quot;" target="&quot;TESTING ACCESS AND PROGRAMMING FLOWS DURING PRE-SILICON AND POST-SILICON PHASES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Testing access and programming flows mitigates the risk of incorrect security identifier decoding."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</edge>
<edge source="&quot;COUNTERFEIT PRODUCTION&quot;" target="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of counterfeit production is accomplished through the secret key recovery technique."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;CONSISTENT POLICY IMPLEMENTATION&quot;" target="&quot;POLICY PRIVILEGES ARE NOT ASSIGNED CONSISTENTLY BETWEEN CONTROL AND DATA AGENTS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Ensuring consistent policy implementation is a tactic that directly counters the vulnerability of inconsistent privileges."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;WRITABLE MEMORY VULNERABILITIES&quot;" target="&quot;UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Vulnerabilities in writable memory implement the attack technique allowing for unauthorized modifications."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;MISSING SOURCE IDENTIFIER PRECONDITION VULNERABILITY&quot;" target="&quot;PRIVILEGE ESCALATION THROUGH MISSING SECURITY IDENTIFIER TACTIC&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Escalating privileges or providing unintended access through missing security identifiers is a tactic accomplished by exploiting the missing source identifier precondition vulnerability in SoCs."&lt;SEP&gt;"The tactic of escalating privileges through missing security identifiers is accomplished by exploiting the precondition vulnerability in SoC transactions."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;MISSING SOURCE IDENTIFIER PRECONDITION VULNERABILITY&quot;" target="&quot;INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Exploitation of missing source identifier precondition vulnerabilities can lead to scenarios where security identifiers are missing, allowing for inadequate data erasure implementations."&lt;SEP&gt;"The missing source identifier precondition vulnerability can be exploited through inadequate data erasure implementation attack techniques to escalate privileges or provide unintended access in a SoC."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;PRIVILEGE DISCREPANCY INCONSISTENCY&quot;" target="&quot;ACCESS CONTROL POLICY WEAKNESS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The inconsistency in privilege assignments is a prerequisite leading to vulnerabilities in hardware-enforced access control policies."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;STORING ASSETS IN WRITABLE MEMORY PATTERN&quot;" target="&quot;STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The pattern of improperly storing assets leads to vulnerabilities when attackers can modify immutable data."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;STORING ASSETS IN WRITABLE MEMORY PATTERN&quot;" target="&quot;UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Unmodified data stored insecurely is an attack technique that fits into the broader pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;ACCESS CONTROL POLICY WEAKNESS&quot;" target="&quot;TRUSTED FIRMWARE OR SOFTWARE MODULES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Vulnerabilities exist within the trusted firmware and software modules due to inconsistent policy privileges."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;ACCESS CONTROL POLICY WEAKNESS&quot;" target="&quot;UNAUTHORIZED ACCESS TO RESOURCES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting inconsistent access control policies leads to unauthorized resource access as postconditions."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA&quot;" target="&quot;IMMUTABLE CODE AND DATA PROTECTION STRATEGY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The protection strategy aims to mitigate risks associated with unauthorized modifications in writable memory."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;UNAUTHORIZED MODIFICATION OF IMMUTABLE DATA&quot;" target="&quot;COMPROMISED ROOT OF TRUST&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Compromising the root of trust is accomplished through unauthorized modification of immutable data."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;PHYSICAL TAMPERING DETECTION MECHANISM&quot;" target="&quot;INVASIVE IC LAYER REMOVAL AND IMAGING&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Detection mechanisms can identify invasive layer removal attacks, providing early warnings or triggering defensive actions."</data>
  <data key="d5">"Detect"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN&quot;" target="&quot;DISABLING HIGH-RESOLUTION PERFORMANCE COUNTERS AND TIMERS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Disabling high-resolution performance counters mitigates the attack pattern by reducing timing precision for leaking sensitive data."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL COVERT CHANNEL ATTACK PATTERN&quot;" target="&quot;HIGH-RESOLUTION PERFORMANCE COUNTERS &amp; TIMERS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Disabling these timers mitigates timing-based attacks on microarchitectural side-channels."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;MISSING PROTECTION MECHANISM FOR ALTERNATE HARDWARE INTERFACE&quot;" target="&quot;ALTERNATE HARDWARE INTERFACE ATTACK PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack pattern exploits the missing protection mechanism on alternate hardware interfaces."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;DECAPSULATION AND HIGH-RESOLUTION IMAGING PATTERN&quot;" target="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d3">34.0</data>
  <data key="d4">"The decapsulation and high-resolution imaging pattern is implemented through the secret key recovery technique."&lt;SEP&gt;"The secret key recovery technique is a part of the decapsulation and high-resolution imaging pattern."</data>
  <data key="d5">"Implement"&lt;SEP&gt;"Same_as"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;ADVERSARIES&quot;" target="&quot;VOLATILE MEMORY MANIPULATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Adversaries use the attack technique of volatile memory manipulation to exploit the lack of proper access controls."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</edge>
<edge source="&quot;LACK OF SECURE STORAGE PRACTICES&quot;" target="&quot;STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Poor storage practices are prerequisites for vulnerabilities associated with improper asset storage."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;STORING ASSETS IN WRITABLE MEMORY (CVE-XXXX)&quot;" target="&quot;PROCESSOR AND MEMORY SYSTEM&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The vulnerability exists within the processor hardware and memory system, affecting secure boot processes."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-31ce69f5b7b26b01bc270585046c09e7</data>
</edge>
<edge source="&quot;SECURE BOOT PROCESS BYPASS&quot;" target="&quot;IMPROPER VOLATILE MEMORY PROTECTION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The secure boot process bypass is an outcome of improper protections for volatile memory during transfer and execution."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</edge>
<edge source="&quot;SECURE BOOT PROCESS BYPASS&quot;" target="&quot;VOLATILE MEMORY MANIPULATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Manipulating volatile memory directly relates to the attack pattern of bypassing the secure-boot process."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</edge>
<edge source="&quot;MISSING SECURITY IDENTIFIER PRIVILEGE ESCALATION POSTCONDITION&quot;" target="&quot;INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Escalating privileges or providing unintended access through missing security identifiers is a postcondition resulting from exploiting inadequate data erasure implementation attack techniques."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;IMPROPERLY PRESERVED INTEGRITY OF HARDWARE CONFIGURATION STATE (CWE-1304)&quot;" target="&quot;PERSISTENT STORAGE VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"A persistent storage vulnerability is a prerequisite for exploiting improperly preserved hardware configuration state vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;UNKNOWN ATTACKER&quot;" target="&quot;POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"An attacker exploits the failure to manage power/debug state transitions, leading to sensitive information exposure."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;UNKNOWN ATTACKER&quot;" target="&quot;CREDENTIAL SHARING AMONG MULTIPLE PARTIES&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The attacker takes advantage of shared credentials among multiple parties to gain unauthorized access."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;SHADOW REGISTERS EXPLOITATION&quot;" target="&quot;ALTERNATE HARDWARE INTERFACE ATTACK PATTERN&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Exploiting shadow registers is a part of the alternate hardware interface attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;SHADOW REGISTERS EXPLOITATION&quot;" target="&quot;PROTECTION MECHANISM IMPLEMENTATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing protection mechanisms can mitigate the attack technique of exploiting unprotected shadow registers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;IMPROPER VOLATILE MEMORY PROTECTION&quot;" target="&quot;UNAUTHORIZED ACCESS CONTROL&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Proper access controls mitigate improper protection for volatile memory by preventing unauthorized modifications."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-283c54bf2a04113b4e93bd42620f4973</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE DEBUG/POWER STATE TRANSITION&quot;" target="&quot;POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Failure in state transition management results in the exposure of sensitive information during transitions."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE DEBUG/POWER STATE TRANSITION&quot;" target="&quot;CWE-200: EXPOSURE OF SENSITIVE INFORMATION TO AN UNAUTHORIZED ACTOR&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of exposing sensitive information is accomplished through vulnerabilities in state transition management."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;DEVICE UNLOCK CREDENTIAL SHARING&quot;" target="&quot;MEMORY DUMP CAPABILITY ACTIVATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Activation of debug capabilities through unlocked devices is facilitated by credential sharing among parties."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;DEFENSE IN DEPTH IMPLEMENTATION&quot;" target="&quot;ALTERNATE HARDWARE INTERFACE ATTACK PATTERN&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing defense in depth can mitigate the risk associated with the alternate hardware interface attack pattern."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;UNDISCLOSED ATTACKER&quot;" target="&quot;PERSISTENT STORAGE VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An attacker exploits the persistent storage vulnerability to alter configuration states during power save/restore operations."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;RACE CONDITION IN HARDWARE LOGIC&quot;" target="&quot;FINITE STATE MACHINES RACE CONDITIONS EXPLOITATION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"This attack pattern involves exploiting race conditions in hardware logic within finite state machines."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;SECURITY IDENTIFIER DECISION-MAKING PROCESS&quot;" target="&quot;BUS TRANSACTION SIGNALS MAPPING&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The security identifier decision-making process uses mapped signals incorrectly, leading to unauthorized access."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;CVE-2020-12926&quot;" target="&quot;TPM SPECIFICATION COMPLIANCE FAILURE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Failure to comply with TPM specifications leads to the vulnerability CVE-2020-12926."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;CVE-2020-12926&quot;" target="&quot;TPM SPECIFICATION NON-COMPLIANCE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Failure to comply with TPM specifications leads to the vulnerability CVE-2020-12926."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;ACCESS CONTROL LOGIC RACE CONDITION&quot;" target="&quot;FINITE STATE MACHINES RACE CONDITIONS EXPLOITATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The specific technique of exploiting access control logic race conditions falls under the broader pattern of finite state machine exploitation."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)&quot;" target="&quot;VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) &quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Exploiting vulnerabilities during manufacturing can further expose devices to issues related to uncleared sensitive information."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION NOT CLEARED BEFORE STATE TRANSITIONS (CWE-1272)&quot;" target="&quot;UNINITIALIZED FLIP-FLOPS USED FOR SECURITY-CRITICAL FUNCTIONS (CWE-1271)&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The presence of uninitialized flip-flops can lead to sensitive information not being cleared properly before state transitions."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;POWER AND DEBUG STATE TRANSITION MANAGEMENT FAILURE&quot;" target="&quot;INFORMATION LEAKAGE PREVENTION DURING STATE TRANSITIONS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Preventive measures against state transition failures can mitigate the risk of sensitive information leakage."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;PRODUCT ADMINISTRATOR&quot;" target="&quot;SCRUBBING CAPABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The Product Administrator uses the scrubbing capability to remove sensitive data from decommissioned devices."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;ADDRESS MAP OVERLAP EXPLOITATION PATTERN&quot;" target="&quot;TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The attack technique is part of the pattern involving exploiting overlapping protected and unprotected ranges."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;ADDRESS MAP OVERLAP EXPLOITATION PATTERN&quot;" target="&quot;OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The exploitation pattern targets this specific vulnerability in the system address map."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;ACTIVE SHIELDING AGAINST REVERSE ENGINEERING&quot;" target="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Active shielding defends against the secret key recovery technique by detecting and preventing reverse engineering attempts."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE&quot;" target="&quot;ISOLATION OF PROTECTED AND UNPROTECTED RANGES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Mitigation strategy to prevent misuse by isolating ranges from potential overlap exploitation."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;TRANSACTION MISCONFIGURATION ATTACK TECHNIQUE&quot;" target="&quot;BYPASS ACCESS CONTROL&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of bypassing access control is accomplished through the misconfiguration attack technique."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;SECURE COMMUNICATION BETWEEN OSAT AND CHIPMAKER&quot;" target="&quot;CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Mitigating the risk of exposure through secure communication helps protect against unauthorized access during pre-production stages."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;EXTERNAL INTEGRITY CHECK BY TRUSTED AGENT&quot;" target="&quot;MISSING PATCH ROM CODE VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An external trusted agent's integrity check ensures configuration state integrity, thereby mitigating the risk of vulnerabilities due to unpatchable ROM code."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS&quot;" target="&quot;ADVERSARY (NOT NAMED)&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The adversary exploits the vulnerability by monitoring and measuring physical phenomena."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-350f1de43053ea2973652d98a983f7fb</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS&quot;" target="&quot;PHYSICAL SIDE CHANNEL EXPLOITATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Exploiting improper protection mechanisms on physical side channels can lead to sensitive information exposure."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION OF PHYSICAL SIDE CHANNELS&quot;" target="&quot;BLINDING OR MASKING TECHNIQUES, SHIELDING&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Techniques like blinding/masking and shielding are intended to prevent physical side channels from exposing sensitive data."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-350f1de43053ea2973652d98a983f7fb</data>
</edge>
<edge source="&quot;INTEGRITY CHECK INSIDE IP&quot;" target="&quot;MISSING PATCH ROM CODE VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing an integrity check mechanism inside the IP mitigates potential vulnerabilities arising from unpatchable ROM code."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;RESIDUAL CONFIDENTIAL INFORMATION REMOVAL POST-SI TESTS&quot;" target="&quot;CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Removing residual confidential information post-silicon mitigates the risk of exposure through debug and test modes."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;STATE TRANSITION SENSITIVE INFO LEAKAGE&quot;" target="&quot;CREDENTIAL SHARING RISK&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Credential sharing among multiple parties increases the likelihood of sensitive information leakage during state transitions."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;STATE TRANSITION SENSITIVE INFO LEAKAGE&quot;" target="&quot;STATE TRANSITION SECURITY MEASURES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Implementing security measures can prevent the leakage of sensitive information during state transitions."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;PHYSICAL SIDE CHANNEL EXPLOITATION&quot;" target="&quot;IMPLEMENT STRONG PHYSICAL SECURITY MEASURES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Strong physical security measures mitigate the attack technique of exploiting physical side channels."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-9196c23d4d59b9afbe77c085c568d16b</data>
</edge>
<edge source="&quot;MINIMAL TEST INTERFACE ACCESS&quot;" target="&quot;DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Ensuring minimal access aligns with reducing vulnerabilities associated with accessible debug modes during pre-production stages."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;ADDRESS RANGE CONFIGURATION MISTAKES&quot;" target="&quot;OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Incorrect configuration or intentional mistakes by malicious actors can set up conditions for exploiting overlaps in address ranges."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;CREDENTIAL SHARING RISK&quot;" target="&quot;DEBUG CAPABILITY ACTIVATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Shared credentials facilitate unauthorized activation of debug capabilities, exposing memory dump functionalities."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-48f47fa4c06f4f21169acdc6421f3964</data>
</edge>
<edge source="&quot;PERSISTENT STORAGE VULNERABILITY&quot;" target="&quot;CRYPTO-HASH VERIFICATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Crypto-hash verification mitigates the persistent storage vulnerability by ensuring data integrity during power operations."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-d495a786a338efce093592daaa0f2478</data>
</edge>
<edge source="&quot;OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY&quot;" target="&quot;ON-CHIP FABRIC ADDRESS MAP&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The vulnerability exists within the structure of overlapping regions on the system's fabric address map."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;OVERLAPPING PROTECTED AND UNPROTECTED RANGES VULNERABILITY&quot;" target="&quot;COMPROMISE OF SYSTEM PROTECTIONS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"System protections are compromised when the vulnerability is exploited through misconfigured overlaps."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-022b88d5b18c3c7a7589c9de7a7a5d1c</data>
</edge>
<edge source="&quot;HARDWARE-ENFORCED ACCESS CONTROL POLICY&quot;" target="&quot;IMPROPER PRIVILEGE HANDLING IN HARDWARE POLICIES PATTERN&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The hardware-enforced access control policy is exploited by an improper handling of privileges as part of the attack pattern."&lt;SEP&gt;"The hardware-enforced access control policy is exploited by improper privilege handling as part of an attack pattern."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;IMPROPER PRIVILEGE HANDLING IN HARDWARE POLICIES PATTERN&quot;" target="&quot;UNINTENTIONAL POLICY INSERTION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The technique of unintentional policy insertion is a specific action within the attack pattern of improper privilege handling."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;IMMUTABLE CODE/DATA PROGRAMMING REQUIREMENT&quot;" target="&quot;MUTABLE ATTESTATION MEASUREMENT DATA&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Programming immutable code/data into ROM/write-once memory mitigates the vulnerability of mutable attestation/measurement data."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</edge>
<edge source="&quot;UNINTENTIONAL POLICY INSERTION&quot;" target="&quot;COMPREHENSIVE TESTING OF ACCESS-CONTROL POLICIES AND FLOWS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Thorough testing mitigates the risk of unintended policy insertion occurring due to hardware flaws."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;UNINTENTIONAL POLICY INSERTION&quot;" target="&quot;MODIFICATION OF DEVICE CONFIGURATION TO GAIN UNAUTHORIZED CONTROL&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of modifying device configurations for unauthorized control is accomplished through unintentional policy insertion."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;RUNTIME ACTIVATION OF TEST/DEBUG FEATURES&quot;" target="&quot;TEST OR DEBUG LOGIC ACTIVATION DURING RUNTIME PATTERN&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Activating test/debug features at runtime is the same as following the attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;RUNTIME ACTIVATION OF TEST/DEBUG FEATURES&quot;" target="&quot;IMPLEMENTING ACCESS CONTROLS FOR SENSOR BLOCKS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Access control measures are intended to mitigate the risks associated with activating test/debug features during normal operations."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;RUNTIME ACTIVATION OF TEST/DEBUG FEATURES&quot;" target="&quot;NO SPECIFIC SOFTWARE MENTIONED&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Untrusted software may implement or trigger the attack technique of runtime activation of test/debug features."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;RUNTIME ACTIVATION OF TEST/DEBUG FEATURES&quot;" target="&quot;ESCALATION OF PRIVILEGES AND INFORMATION DISCLOSURE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of privilege escalation or information disclosure can be accomplished through runtime activation of test/debug features."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;UNSPECIFIED ATTACKER GROUP&quot;" target="&quot;DEBUG MESSAGE LEAKAGES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attackers could exploit the leakage of sensitive information from debug messages to further their attacks."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;PUBLIC KEY REUSE VULNERABILITY&quot;" target="&quot;ENCRYPTION HASH VERIFICATION PROCESS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The encryption hash verification process is exploited due to public key reuse, leading to system compromise."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;PUBLIC KEY REUSE VULNERABILITY&quot;" target="&quot;DEBUG MODE FEATURES&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Using the same public key for debug and production modes exposes the debug features to exploitation."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;DEBUG MESSAGE LEAKAGES&quot;" target="&quot;ASLR BYPASS EXPLOITATION PATTERN&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Leaked pointer information can be used in ASLR bypass exploitation patterns to simplify protection mechanism bypassing."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;IMPROPER FABRIC ATTRIBUTE TRANSLATION MITIGATION&quot;" target="&quot;FABRIC BRIDGE SECURITY ISSUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Correcting improper attribute translation mitigates the risk of exploitation leading to privilege escalation or denial of service."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;ASLR BYPASS EXPLOITATION PATTERN&quot;" target="&quot;CVE-2021-25476&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The vulnerability can be exploited as part of an ASLR bypass attack pattern."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;ASLR BYPASS EXPLOITATION PATTERN&quot;" target="&quot;BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Bypassing protection mechanisms includes using the same techniques as those in ASLR bypass patterns."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;USE DIFFERENT PUBLIC KEYS FOR PRODUCTION AND DEBUGGING&quot;" target="&quot;ENCRYPTION HASH VERIFICATION PROCESS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Using different keys mitigates the risk of an attacker compromising the verification process."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;DEBUG MODE EXPLOITATION PRECONDITION&quot;" target="&quot;PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Exploitation requires the existence of debug modes and their vulnerabilities as prerequisites."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE&quot;" target="&quot;VULNERABILITY ID: HWPSIRT-2019-10114 &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack technique can be used to exploit vulnerabilities leading to unauthorized access and sensitive information exposure."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE&quot;" target="&quot;UNAUTHORIZED SYSTEM ACCESS TACTIC&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Gaining unauthorized system access is accomplished through the execution of an attack technique that bypasses existing protections."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;BYPASS PROTECTION MECHANISM ATTACK TECHNIQUE&quot;" target="&quot;ACCESS CONTROL MEASURES REVIEW&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Enhancing access control measures can mitigate the risk of attackers successfully executing the attack technique to bypass protection mechanisms."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY&quot;" target="&quot;UNINTENTIONAL EXPOSURE AND COMPROMISE OF RESOURCES POSTCONDITION&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Exploitation leads to unintended exposure or compromise of resources, affecting system integrity."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;PRIVILEGE DISCREPANCY IN ACCESS CONTROL POLICIES VULNERABILITY&quot;" target="&quot;TRUSTED FIRMWARE AND SOFTWARE MODULES WITH ACCESS TO CRITICAL RESOURCES&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The vulnerability exists within access control policies governing critical resources, making them susceptible to exploitation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;IMPLEMENTING FIRMWARE UPDATE MECHANISMS&quot;" target="&quot;EXPLOITATION OF NON-UPDATEABLE FIRMWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Updating the firmware can mitigate the attack technique by addressing its exploit.</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;PROTOCOL CONVERSION BRIDGE&quot;" target="&quot;BUS TRANSACTION SIGNALS MAPPING&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Improper protocol conversion can lead to incorrect signal mapping and unauthorized access."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;EXPLOITATION OF NON-UPDATEABLE FIRMWARE&quot;" target="&quot;FIRMWARE UPDATE CAPABILITY ABSENCE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack technique exploits the absence of firmware update capability as a vulnerability."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;EXPLOITATION OF NON-UPDATEABLE FIRMWARE&quot;" target="&quot;GAINING UNAUTHORIZED ACCESS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Unauthorized access is gained through exploiting non-updatable firmware vulnerabilities."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;EXPLOITATION OF NON-UPDATEABLE FIRMWARE&quot;" target="&quot;PERSISTENT SECURITY RISK DUE TO FIRMWARE VULNERABILITIES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Postconditions include persistent security risks due to non-updatable firmware vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;INCORRECT DEBUG COMPONENT CHAINING AND GRANULARITY&quot;" target="&quot;VULNERABILITY ID: HWPSIRT-2019-10114 &quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Improper chaining or granularity of debug components can lead to vulnerabilities that attackers might exploit."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;PROPER PROTOCOL TRANSLATION IMPLEMENTATION&quot;" target="&quot;BUS TRANSACTION SIGNALS MAPPING&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Correctly implementing protocol translation helps prevent the misuse of bus transaction signals."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;SOFTWARE UPDATE MECHANISM FAILURE&quot;" target="&quot;LACK OF FIRMWARE UPDATABILITY PATTERN&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A failure in the software update mechanism can lead to a lack of firmware upgradability pattern."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;OCP PROTOCOL SECURITY BREACH&quot;" target="&quot;ADVERSARY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An adversary can exploit improperly translated MReqInfo and SRespInfo signals to bypass access control mechanisms and escalate privileges."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;VULNERABILITY ID: HWPSIRT-2019-10114 &quot;" target="&quot;CHIPS AND SMARTPHONES WITH DEBUG COMPONENTS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists in devices containing debug components due to improper design or security practices."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;VULNERABILITY ID: HWPSIRT-2019-10114 &quot;" target="&quot;SENSITIVE INFORMATION EXPOSURE AND UNAUTHORIZED ACCESS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploitation of the vulnerability results in unauthorized access and exposure of sensitive information, affecting device security."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;PRODUCT RELEASED IN NON-RELEASE CONFIGURATION ATTACK PATTERN&quot;" target="&quot;DEBUG MODE EXPLOITATION TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The technique involves exploiting debug mode capabilities during the release of insecure pre-production versions."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;AHB PROTOCOL IMPLEMENTATION&quot;" target="&quot;BRIDGE FOR PROTOCOL CONVERSION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"A bridge between AHB and OCP protocols is implemented to facilitate protocol conversion."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;AXPROT SIGNAL MISINTERPRETATION&quot;" target="&quot;ADVERSARY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An adversary can exploit improperly translated AxPROT signals to bypass access control mechanisms and escalate privileges."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;NON-UPGRADED FIRMWARE IN HARDWARE DEVICES&quot;" target="&quot;FIRMWARE VULNERABILITY DUE TO NON-UPGRADE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The firmware vulnerability due to non-upgrade exists within non-updated firmware in hardware devices."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;VULNERABILITY DISCOVERY WITHOUT UPDATABILITY&quot;" target="&quot;FIRMWARE UPDATE CAPABILITY ABSENCE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The inability to update firmware makes devices vulnerable even after discovery of flaws."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;FABRIC BRIDGE SECURITY ISSUE&quot;" target="&quot;ADVERSARY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"An adversary can exploit improperly translated security attributes to bypass access control and escalate privileges in a SoC."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;CVE-2021-25476&quot;" target="&quot;INCORRECT CHAINING OR GRANULARITY OF DEBUG COMPONENTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Improperly chained debug components contribute to vulnerabilities like CVE-2021-25476."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;INCORRECT SECURITY TOKENS GENERATION (CWE-1270)&quot;" target="&quot;INSECURE STATE DUE TO UNINITIALIZED VALUES (CWE-1271)&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Exploiting vulnerabilities like incorrect token generation can exacerbate issues caused by uninitialized values."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;INCORRECT SECURITY TOKENS GENERATION (CWE-1270)&quot;" target="&quot;TARGET ENTITY&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Security Token generation issues impact the overall security of target entities like Intel chipsets and SIMATIC devices."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;PROTECTION THROUGH IC CAMOUFLAGING&quot;" target="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"IC camouflaging mitigates against the secret key recovery technique by making reverse engineering more challenging."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;CVE-2020-24491&quot;" target="&quot;SENSITIVE DEBUG INFORMATION EXPOSURE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Exploiting this vulnerability leads to exposure of sensitive debug information, affecting system security."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;ACTIVATION WINDOW FOR DEBUG FEATURES&quot;" target="&quot;ADVERSARY EXPLOITING TEST/DEBUG FEATURES&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The attack pattern involves exploiting an activation window to activate test/debug features unauthorized."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</edge>
<edge source="&quot;CONFIGURE HARDWARE FOR SAFE OPERATION&quot;" target="&quot;TEST AND DEBUG FEATURES IN HARDWARE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Mitigating risk by configuring hardware to only allow debug/test modes during safe phases."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</edge>
<edge source="&quot;CVE-2017-18326&quot;" target="&quot;SENSITIVE DEBUG INFORMATION EXPOSURE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"This vulnerability can lead to the leakage of cryptographic keys during debugging, compromising system integrity."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;TAMPER-PROOF PACKAGING IMPLEMENTATION&quot;" target="&quot;HIGH-RESOLUTION X-RAY MICROSCOPY TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Tamper-proof packaging mitigates against high-resolution x-ray microscopy attacks by obstructing detailed imaging."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;INCORRECT CHAINING OR GRANULARITY OF DEBUG COMPONENTS&quot;" target="&quot;APPROPRIATE POST-SI TESTS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Post-manufacturing tests can mitigate the risk of improperly chained debug components leading to vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-f6f4c668b2aeaa26c41427011a11b6d8</data>
</edge>
<edge source="&quot;BRIDGE FOR PROTOCOL CONVERSION&quot;" target="&quot;OCP PROTOCOL IMPLEMENTATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The bridge implements the necessary conversions from OCP to AHB as part of its operation."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;SECURE PATCH SUPPORT IMPLEMENTATION&quot;" target="&quot;MISSING PATCH ROM CODE VULNERABILITY&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Implementing secure patch support mitigates the risk of exploiting missing ROM code patching mechanisms."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;ENSURING MANUFACTURING COMPLETE STAGE MARKERS ARE UPDATED&quot;" target="&quot;PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Preventing products from being released prematurely by ensuring proper manufacturing process completion mitigates this vulnerability."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;UNAUTHORIZED SYSTEM CONFIGURATION MODIFICATION POSTCONDITION&quot;" target="&quot;PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploitation leads to unauthorized modifications of system configurations affecting security and integrity."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;CVE-2020-9054&quot;" target="&quot;EXPLOITATION THROUGH COMMAND INJECTION ATTACK&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The command injection vulnerability is exploited through the attack technique of injecting unauthorized commands into a non-updatable firmware system."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;MANUFACTURING MODE EXPLOIT&quot;" target="&quot;VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) &quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The attack pattern exploits the vulnerability present in devices running in manufacturing mode."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE&quot;" target="&quot;INSUFFICIENT DATA REMOVAL WITHIN HARDWARE COMPONENT ATTACK PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The inadequate data erasure implementation attack technique is used to carry out attacks exploiting the insufficient data removal pattern, targeting hardware components."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;INADEQUATE DATA ERASURE IMPLEMENTATION ATTACK TECHNIQUE&quot;" target="&quot;BLINDING/MASKING CRYPTOGRAPHIC ALGORITHM PROTECTION MITIGATION&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Blinding or masking cryptographic algorithm protection mitigations are intended to mitigate the risk of inadequate data erasure implementation attack techniques targeting hardware components."&lt;SEP&gt;"Recommendations such as blinding/masking cryptographic algorithms help mitigate risks associated with inadequate data erasure implementations."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-8912ca8aa61aec55c4d1970fc938d6b9</data>
</edge>
<edge source="&quot;WEAK KEY GENERATION VULNERABILITY&quot;" target="&quot;EXPLOITATION THROUGH WEAK KEY GENERATION ATTACK&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This vulnerability can be targeted via an attack that leverages weak keys for gaining unauthorized access to devices with unpatchable firmware."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;MANUFACTURING MODE PATCHING&quot;" target="&quot;VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) &quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Patching the vulnerability mitigates the risk of unauthorized access during manufacturing mode exploitation."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;INSECURE SECURITY IDENTIFIER MECHANISM&quot;" target="&quot;SOC (SYSTEM-ON-CHIP)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"This vulnerability exists in the SoC's implementation of its security identifier mechanism."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-87fc8cd680673c7b0399cfaa4acf73d6</data>
</edge>
<edge source="&quot;FIRMWARE UPDATE MECHANISM ABSENCE&quot;" target="&quot;GAIN UNAUTHORIZED CONTROL OVER DEVICES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The inability to update firmware leads directly to a tactic of attackers attempting to gain unauthorized control over these devices."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;FIRMWARE UPDATE MECHANISM ABSENCE&quot;" target="&quot;DESIGN REQUIREMENTS IGNORING UPDATES&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Omitting requirements for update mechanisms during product design leads to the absence of these capabilities in devices."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;UNINITIALIZED FLIP-FLOPS USED FOR SECURITY-CRITICAL FUNCTIONS (CWE-1271)&quot;" target="&quot;PHYSICAL ACCESS AND TECHNICAL SKILLS&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Having physical access and technical skills can allow attackers to exploit the presence of uninitialized flip-flops."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;INVASIVE IC LAYER REMOVAL AND IMAGING&quot;" target="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Invasive layer removal and imaging are part of the secret key recovery technique used to access hardware secrets."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;DEBUG MESSAGES REVEALING UNNECESSARY INFORMATION&quot;" target="&quot;UNNECESSARY DEBUG INFORMATION DISCLOSURE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The postcondition where unnecessary information is disclosed due to vulnerabilities in debug messages."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-87fc8cd680673c7b0399cfaa4acf73d6</data>
</edge>
<edge source="&quot;EXPLOITATION THROUGH COMMAND INJECTION ATTACK&quot;" target="&quot;PERMANENT SECURITY RISK DUE TO NON-UPDATABLE FIRMWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"This attack technique results in long-term security risks because affected firmware cannot be updated or patched."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;IC REVERSE ENGINEERING CAPABILITY&quot;" target="&quot;FIRMWARE VULNERABILITY DUE TO NON-UPGRADE&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Having the capability for IC reverse engineering is a prerequisite for exploiting firmware vulnerabilities in non-upgraded hardware devices."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;SECRET EXTRACTION AND COUNTERFEIT PRODUCTION&quot;" target="&quot;FIRMWARE VULNERABILITY DUE TO NON-UPGRADE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The postcondition of secret extraction and counterfeit production is a result of exploiting the firmware vulnerability due to non-upgrade."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;FIRMWARE VULNERABILITY DUE TO NON-UPGRADE&quot;" target="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The secret key recovery technique exploits the firmware vulnerability due to non-upgrade in hardware devices."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;EXPLOITATION THROUGH WEAK KEY GENERATION ATTACK&quot;" target="&quot;PERMANENT SECURITY RISK DUE TO NON-UPDATABLE FIRMWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"This attack on weak key generation results in persistent security risks due to non-updatable firmware."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-bc102d9f54bb50e60fe4796c747399e3</data>
</edge>
<edge source="&quot;CHIPMAKER&quot;" target="&quot;MALICIOUS INSIDER AT OSAT FACILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The chipmaker faces risk from malicious insiders within OSAT facilities who could exploit vulnerabilities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;HIGH-RESOLUTION X-RAY MICROSCOPY TECHNIQUE&quot;" target="&quot;SECRET KEY RECOVERY TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The high-resolution x-ray microscopy technique is an attack method that supports the secret key recovery technique."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-1fafa91fe4e5dff2ece171cb782b7c74</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL IN FABRIC BRIDGE ATTACKER&quot;" target="&quot;UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attacker uses the technique of executing unauthorized transactions to exploit improper access control in the fabric bridge."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;ACCESS CONTROL CHECK IMPLEMENTATION SOFTWARE&quot;" target="&quot;PROPER ACCESS CONTROL IN FABRIC BRIDGE MITIGATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"This software solution is used as part of mitigation efforts to properly implement and enforce access control checks in the fabric bridge."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;IMPROPER FABRIC BRIDGE ACCESS CONTROL PATTERN&quot;" target="&quot;IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The improper fabric bridge access control pattern exploits a vulnerability where AHB bridges do not require authentication for arbitrary read and write access."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;IMPROPER FABRIC BRIDGE ACCESS CONTROL PATTERN&quot;" target="&quot;UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Executing unauthorized transactions is the same as exploiting improper fabric bridge access controls in this context."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;NON-DISCLOSURE AGREEMENTS (NDAS)&quot;" target="&quot;SECURITY VULNERABILITY IN IT SYSTEM OF OSAT FACILITY&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"NDAs aim to mitigate the risks associated with security vulnerabilities in OSAT vendors' IT systems."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE&quot;" target="&quot;PROPER ACCESS CONTROL IN FABRIC BRIDGE MITIGATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Mitigations against executing unauthorized transactions involve implementing proper access control checks in the fabric bridge."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;UNAUTHORIZED TRANSACTION EXECUTION TECHNIQUE&quot;" target="&quot;BYPASS SECURITY MECHANISM TACTIC&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of bypassing security mechanisms is accomplished through the attack technique of unauthorized transaction execution."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;SECURITY VULNERABILITY IN IT SYSTEM OF OSAT FACILITY&quot;" target="&quot;DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Accessible debug modes create a precondition for exploiting system vulnerabilities during pre-production stages."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;BUS TRANSACTION SIGNALS MAPPING&quot;" target="&quot;INCORRECT SECURITY IDENTIFIER MAPPING VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Improper mapping of bus transaction signals exploits the vulnerability by allowing unauthorized access."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-7acaf7b7bfc562c3e9176c41d3a30307</data>
</edge>
<edge source="&quot;PHYSICAL ACCESS AND TECHNICAL SKILLS&quot;" target="&quot;VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) &quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Having physical access to the device and technical skills are prerequisites for exploiting vulnerabilities during manufacturing mode."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;DEBUG MODES ACCESSIBLE IN PRE-PRODUCTION STAGE&quot;" target="&quot;CONFIDENTIAL INFORMATION EXPOSURE VIA DEBUG AND TEST MODES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The unauthorized exposure of confidential information is an outcome when debug modes are not properly secured during early production stages."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-c69cdc2b358db3947b3aef626dc12322</data>
</edge>
<edge source="&quot;VULNERABILITY IN MANUFACTURING MODE (CVE-2018-4251) &quot;" target="&quot;INSECURE STATE DUE TO UNINITIALIZED VALUES (CWE-1271)&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Exploiting vulnerabilities during manufacturing mode can result in an insecure state due to uninitialized values."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-413f231b6fa3e23dd4a25e4c2ca5b59e</data>
</edge>
<edge source="&quot;LACK OF ACCESS CONTROL CHECKS PRECONDITION&quot;" target="&quot;IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The lack of proper access control checks is a prerequisite for exploiting the vulnerability in AHB bridges."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;INCOMPLETE MANUFACTURING PROCESS PRECONDITION&quot;" target="&quot;PRODUCT RELEASED IN NON-RELEASE CONFIGURATION VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The existence of an incomplete manufacturing process is a prerequisite for the vulnerability to occur."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-5c85b903657707af65465947038efc98</data>
</edge>
<edge source="&quot;IMPROPER FABRIC BRIDGE SECURITY VULNERABILITY (CVE-2019-6260)&quot;" target="&quot;UNAUTHORIZED ACCESS OR MALICIOUS ACTIVITY POSTCONDITION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting the improper security vulnerability leads to unauthorized access or malicious activities within the SoC."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-af35a9635813405deb7665cfe32b1124</data>
</edge>
<edge source="&quot;MISSING PATCH ROM CODE VULNERABILITY&quot;" target="&quot;ADVERSARY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"An adversary exploits the lack of patching mechanisms in ROM code to reduce maintainability and reliability, compromising the target SoC."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;BUS TRANSACTION SECURITY IDENTIFIERS&quot;" target="&quot;SECURITY IDENTIFIER DECODER&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The security identifier decoder is used to decode bus transactions for asset access control decisions."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</edge>
<edge source="&quot;HPROT SIGNAL MISINTERPRETATION&quot;" target="&quot;ADVERSARY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An adversary can exploit improperly translated HPROT signals to bypass access control mechanisms and escalate privileges."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-0337a559ab513922c912320a5f53afbf</data>
</edge>
<edge source="&quot;ADVERSARY&quot;" target="&quot;MUTABLE ATTESTATION MEASUREMENT DATA&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The adversary exploits mutable attestation/measurement data to spoof measurement results."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2a08effb4baf9d8f8c63cdfd2d107514</data>
</edge>
<edge source="&quot;ADVERSARY&quot;" target="&quot;EXTERNAL DEBUGGER&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An adversary uses an external debugger to exploit the lack of protection in the firewall."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</edge>
<edge source="&quot;ADVERSARY&quot;" target="&quot;TAMPERING WITH ROT MEMORY TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"An adversary employs tampering techniques to modify root of trust memory, compromising the integrity of secure boot mechanisms."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;ADVERSARY&quot;" target="&quot;UNEXPECTED PHYSICAL OR ENVIRONMENTAL CONDITIONS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"An adversary induces unexpected physical or environmental conditions as prerequisites for exploiting vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</edge>
<edge source="&quot;ADVERSARY&quot;" target="&quot;OS COMMAND INJECTION VULNERABILITY (CVE-2020-9054)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An adversary exploits the OS command injection vulnerability by inducing unexpected physical conditions."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</edge>
<edge source="&quot;ADVERSARY&quot;" target="&quot;BOOT FIRMWARE DOWNGRADE EXPLOIT TECHNIQUE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An adversary uses the boot firmware downgrade exploit technique to roll back firmware versions and execute attacks on a System-on-Chip."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;LACK OF PROTECTION FOR MIRRORED MEMORY REGIONS&quot;" target="&quot;FABRIC FIREWALL VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The lack of protection is a prerequisite for exploiting the fabric firewall vulnerability."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</edge>
<edge source="&quot;UNAUTHORIZED MEMORY MODIFICATION AND DATA LEAKAGE&quot;" target="&quot;FABRIC FIREWALL VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Unauthorized memory modification and data leakage are consequences of exploiting the lack of protection in mirrored regions."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</edge>
<edge source="&quot;LACK OF WRITE PROTECTION FOR PARAMETRIC DATA VALUES&quot;" target="&quot;CVE-1314 AND CVE-2017-8252 VULNERABILITIES&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The lack of write protection is a precondition that contributes to the exploitation of vulnerabilities affecting parametric data values and fabric end-point capabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-3fe4ba5efb195ee3e2e5da2589957c0b</data>
</edge>
<edge source="&quot;DATA SCRUBBING FAILURE PATTERN&quot;" target="&quot;INADEQUATE DATA REMOVAL TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An inadequate removal technique is part of the broader data scrubbing failure pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;INADEQUATE DATA REMOVAL TECHNIQUE&quot;" target="&quot;POLICY IMPLEMENTATION AND REVIEW&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Regular policy reviews and implementation aim to mitigate the risk posed by inadequate data removal techniques."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-0389a2e07ed94570629739162785392c</data>
</edge>
<edge source="&quot;ERROR INJECTION TECHNIQUE&quot;" target="&quot;TEST AND DEBUG FEATURES IN HARDWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Adversaries use error injection as a technique on hardware with active debug/test features."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-44164e668381aa7c1f320b2f14a0925f</data>
</edge>
<edge source="&quot;ERROR INJECTION TECHNIQUE&quot;" target="&quot;UNAUTHORIZED AGENT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An unauthorized agent uses the technique of error injection to degrade system functionality."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</edge>
<edge source="&quot;ERROR INJECTION TECHNIQUE&quot;" target="&quot;FAULT TOLERANCE DESIGN FLAWS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack technique exploits design flaws in fault tolerance mechanisms that allow for error injection."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</edge>
<edge source="&quot;STATIC/DYNAMIC TAINT ANALYSIS METHODS&quot;" target="&quot;MUTUAL DISTRUSTING SOFTWARE COMPONENTS EXECUTION CONTEXTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Taint analysis methods can detect and mitigate cross-context influence by properly tagging predictor entries."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;HARDWARE SENSORS&quot;" target="&quot;IMPROPER PROTECTION MECHANISM DETECTION AND CORRECTION PATTERN&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Hardware sensors can be exploited through this pattern when improperly managed."&lt;SEP&gt;"Hardware sensors, when improperly managed, can be exploited through this pattern."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;OVERVOLTAGE VULNERABILITY&quot;" target="&quot;PERMANENT DAMAGE AND SERVICE DEGRADATION (VOLTAGE/CURRENT)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of permanent damage and service degradation is a result of exploiting the overvoltage vulnerability."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;OVERVOLTAGE VULNERABILITY&quot;" target="&quot;OVERCURRENT CONDITION ATTACK PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The overcurrent condition attack pattern exploits the overvoltage vulnerability in hardware devices."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;OVERVOLTAGE VULNERABILITY&quot;" target="&quot;HARDWARE DEVICES WITH POWER MANAGEMENT ISSUES (VOLTAGE/CURRENT)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The overvoltage vulnerability exists in hardware devices with power management issues that lack proper protections against voltage conditions."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;OVERVOLTAGE VULNERABILITY&quot;" target="&quot;LACK OF OVERVOLTAGE AND OVERCURRENT PROTECTION MECHANISMS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Devices lacking overvoltage protection mechanisms are prerequisites for exploiting the overvoltage vulnerability."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;INSTRUCTION SET ARCHITECTURE (ISA)&quot;" target="&quot;SHARED MICROARCHITECTURAL STRUCTURES (E.G., CPU CACHE)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The ISA provides security boundaries but shared microarchitectural structures like the CPU cache can be a source of vulnerabilities."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;INSTRUCTION SET ARCHITECTURE (ISA)&quot;" target="&quot;HARDWARE DOCUMENTATION REVIEW AND DESIGN MITIGATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Reviewing hardware documentation for ISA features helps mitigate potential security weaknesses in shared microarchitectural structures."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;TAMPERING WITH ROT MEMORY PRECONDITION&quot;" target="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The ability to tamper with immutable memory is a prerequisite condition enabling adversaries to modify root of trust and execute adversarial code."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;PREVENT ARCHITECTURALLY RESTRICTED DATA USAGE&quot;" target="&quot;TRANSIENT EXECUTION EXPLOITATION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic aims to prevent transient operations from accessing restricted data, which is a core aspect of the attack technique."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;" target="&quot;INSTRUCTION SKIPS AND DATA INFERENCE ATTACKS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Attackers use improper isolation vulnerabilities to conduct attacks that manipulate timing channels for data inference."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;" target="&quot;IMPROPER ISOLATION MITIGATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Mitigations aim to prevent attackers from exploiting the improper isolation by ensuring proper resource management in NoC."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;" target="&quot;TIMING CHANNEL ATTACK TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers use the timing channel attack technique to exploit improper isolation and infer data from trusted agents."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;" target="&quot;NETWORK ON CHIP (NOC)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Improper isolation vulnerabilities exist within the Network On Chip (NoC), affecting its internal resources."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;" target="&quot;RESOURCE CONTENTION INTERFERENCE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The postcondition of resource contention and interference is a result of exploiting improper isolation vulnerabilities in NoC."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;" target="&quot;ATTACKERS (GENERIC)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers exploit the improper isolation of shared resources to infer sensitive data from trusted agents and create timing channels."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES (CVE-2019-8575)&quot;" target="&quot;RESOURCE CONTENTION AND INTERFERENCE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Resource contention and interference are prerequisites enabling attackers to exploit improper isolation vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;ALERT SIGNAL MODIFICATION ATTACK TECHNIQUE&quot;" target="&quot;DISABLE SECURITY ALERTS AND DEGRADED PERFORMANCE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Disabling security alerts and causing degraded performance are tactics accomplished through manipulating alert signals."&lt;SEP&gt;"Disabling security alerts and causing degraded performance are tactics that can be accomplished through modifying alert signals."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;ALERT SIGNAL MODIFICATION ATTACK TECHNIQUE&quot;" target="&quot;PROPER ALERT SIGNAL MANAGEMENT MEASURES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Measures protect against disabling alerts through proper management techniques."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;ALERT SIGNAL MODIFICATION ATTACK TECHNIQUE&quot;" target="&quot;IMPROPER PROTECTION FOR OUTBOUND ERROR MESSAGES (CWE-1320)&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"This attack technique exploits the vulnerability of improper protection for outbound error messages and alert signals."&lt;SEP&gt;"This technique exploits the vulnerability in managing outbound error messages and alert signals."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;DENIAL OF SERVICE THROUGH HARDWARE EXPLOITATION&quot;" target="&quot;DEVICE OVERHEATING EXPLOITATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of denial of service is accomplished through the attack technique of device overheating exploitation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;TEMPERATURE SENSITIVE ENTROPY SOURCE&quot;" target="&quot;IMPROPER HANDLING OF COLD ENVIRONMENTS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An attack technique exploiting the vulnerability in entropy sources due to improper handling under cold conditions."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;TEMPERATURE SENSITIVE ENTROPY SOURCE&quot;" target="&quot;INSUFFICIENTLY TRUSTWORTHY COMPONENT&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Using insufficiently trustworthy components introduces vulnerabilities related to entropy sources under cold conditions."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;TEMPERATURE SENSITIVE ENTROPY SOURCE&quot;" target="&quot;COLD BOOT ATTACKS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Cold boot attacks exploit the data retention issues in temperature-sensitive entropy sources."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;THERMAL PROTECTION IMPLEMENTATION&quot;" target="&quot;DEVICE OVERHEATING EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing thermal protection measures mitigates the device overheating exploitation technique."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;HARDWARE DOCUMENTATION REVIEW AND DESIGN MITIGATION&quot;" target="&quot;TRANSIENT EXECUTION VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Reviewing hardware documentation and implementing mitigations target transient execution vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;MODIFICATION OF ALERT THRESHOLDS AND MASKING SIGNALS&quot;" target="&quot;IMPROPER PROTECTION FOR OUTBOUND ERROR MESSAGES (CWE-1320)&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Modifying thresholds and masking signals are prerequisites for exploiting the improper protection for outbound error messages vulnerability."&lt;SEP&gt;"Modifying thresholds and masking signals are prerequisites for exploiting the vulnerability in managing error messages."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;SOFTWARE FUZZING TOOLS&quot;" target="&quot;ACADEMIC RESEARCHERS&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Academic researchers use software fuzzing tools to detect hardware weaknesses and potential covert channels."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;DEVICE SHUTDOWN OR THROTTLING&quot;" target="&quot;IMPROPER PROTECTION FOR OUTBOUND ERROR MESSAGES (CWE-1320)&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Shutdowns or throttling are postconditions resulting from exploiting the improper protection of error messages and alerts."&lt;SEP&gt;"Shutdowns/throttling result from improperly managed alerts exploiting system vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;MALICIOUS SOFTWARE COMPONENT&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"A malicious software component exploits the weakness in processors with shared microarchitectural predictors."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;INSUFFICIENTLY TRUSTWORTHY COMPONENT&quot;" target="&quot;COLD BOOT ATTACKS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Cold boot attacks result from improperly trusted components that do not handle cold environments correctly."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;SYSTEM-ON-CHIP (SOC) HARDWARE COMPONENTS&quot;" target="&quot;IMPROPER PROTECTION FOR OUTBOUND ERROR MESSAGES (CWE-1320)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The improper protection exists in SoC hardware components leading to vulnerabilities."&lt;SEP&gt;"The improper protection of error messages and alerts exists in System-on-Chip hardware components."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;UNAUTHORIZED DEBUG ACCESS ATTACK PATTERN&quot;" target="&quot;DEBUG TRACER IP BLOCK SOFTWARE VULNERABILITY&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"The unauthorized debug access attack pattern exploits the vulnerability in unprotected debug tracer IP blocks to gain unauthorized access and extract secret information."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;ARCHITECTURE AND DESIGN PHASE VULNERABILITY INTRODUCTION&quot;" target="&quot;COMPILER/JIT CONFIGURATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Configuring compilers to prevent affected instructions mitigates design-phase vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;TRACING IP BLOCKS&quot;" target="&quot;MODIFICATION OF ALERT THRESHOLDS AND MASKING SIGNALS PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Tracing blocks can exploit this pattern if alerts are not properly secured."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-ad4951d6ca9a7d70179fc77a5b4c7b84</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION INFERENCE&quot;" target="&quot;MICROARCHITECTURAL SIDE EFFECT OBSERVATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of inferring sensitive information is accomplished through observing microarchitectural side effects."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;BRANCH HISTORY INJECTION (BHI) - SPECTRE-BHB&quot;" target="&quot;CONTROL-FLOW INTEGRITY (CFI)&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Uses CFI to constrain branch redirection instructions, mitigating potential exposure of kernel data."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;BRANCH HISTORY INJECTION (BHI) - SPECTRE-BHB&quot;" target="&quot;SHARED MICROARCHITECTURAL STATES&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"BHI uses shared states to influence transient kernel execution, exposing data over covert channels."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;MALICIOUS SOFTWARE DEVELOPERS&quot;" target="&quot;THERMAL OVERHEATING MALWARE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Developers use thermal overheating malware to target hardware devices for denial of service or permanent damage."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;HIGH-RESOLUTION TIMERS ACCESS CONTROL&quot;" target="&quot;HIGH-RESOLUTION TIMER RESTRICTION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Restricts high-resolution timers to mitigate covert channel monitoring by unprivileged software."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;TAINT ANALYSIS TOOLS&quot;" target="&quot;DETECTION OF PRESENCE OF KNOWN WEAKNESSES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The taint analysis methods implemented by these tools are used in the detection pattern for known hardware weaknesses."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;SYSTEM SOFTWARE IMPLEMENTATION VULNERABILITY INTRODUCTION&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Failure to invoke necessary sanitization operations exacerbates the vulnerability during implementation."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;PROCESSOR DESIGNERS AND VENDORS&quot;" target="&quot;SOFTWARE TECHNIQUES (SERIALIZATION INSTRUCTIONS)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Vendor recommendations include the use of serialization instructions like LFENCE to mitigate transient execution issues."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-140a05ee49c5f31da6d98039d787968f</data>
</edge>
<edge source="&quot;BRANCH TARGET INJECTION (BTI) - SPECTRE V2&quot;" target="&quot;MICROARCHITECTURAL INDIRECT BRANCH PREDICTOR WEAKNESS&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"BTI exploits the indirect branch predictor weakness across architectural boundaries."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;BRANCH TARGET INJECTION (BTI) - SPECTRE V2&quot;" target="&quot;RETPOLINE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Mitigates against BTI by preventing harmful instruction generation in compilers and JITs."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;BRANCH TARGET INJECTION (BTI) - SPECTRE V2&quot;" target="&quot;HARDWARE VENDOR PATCH&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Sanitizes predictor state transitions to mitigate BTI and similar attacks."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;SYSTEM CONFIGURATION PHASE MITIGATION FAILURE&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Improper system configuration can lead to a failure in mitigating the shared predictor weakness."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;ATTACKER (EM-FI EXPERT)&quot;" target="&quot;ELECTROMAGNETIC FAULT INJECTION (EMFI) SETUP&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Attackers use the EMFI setup to carry out electromagnetic fault injection attacks on target devices."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;ADDRESS MASKING AND DATA ISOLATION&quot;" target="&quot;COVERT CHANNEL EXPOSURE THROUGH TRANSIENT EXECUTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"These techniques are intended to mitigate the consequences of transient execution by preventing out-of-bounds reads or data exposure."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-140a05ee49c5f31da6d98039d787968f</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL INDIRECT BRANCH PREDICTOR WEAKNESS&quot;" target="&quot;PREDICTOR SHARING DISABLEMENT&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Disabling predictor sharing is an effective mitigation against indirect branch predictor weaknesses across contexts."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL INDIRECT BRANCH PREDICTOR WEAKNESS&quot;" target="&quot;ATTACKER ENTITY (NOT EXPLICITLY NAMED)&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The attacker exploits the indirect branch predictor weakness across architectural boundaries."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL INDIRECT BRANCH PREDICTOR WEAKNESS&quot;" target="&quot;INTEL X86 PROCESSOR&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The indirect branch predictor weakness exists in Intel x86 processors, making them susceptible to attacks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;USER MODE AND KERNEL MODE ISOLATION&quot;" target="&quot;MUTUAL DISTRUSTING SOFTWARE COMPONENTS EXECUTION CONTEXTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Ensuring predictor state isolation mitigates the risk of cross-context influence."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;USER MODE AND KERNEL MODE ISOLATION&quot;" target="&quot;CROSS-CONTEXT TRAINING PREVENTION (E.G., KERNEL MODE TAGGING)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Prevention measures enhance user mode/kernel mode separation to mitigate vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;COVERT CHANNEL EXPOSURE THROUGH TRANSIENT EXECUTION&quot;" target="&quot;SHARED MICROARCHITECTURAL PREDICTOR STATE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The vulnerability of shared predictor state exposes a condition where incorrect data can be forwarded during transient execution, affecting the integrity of operations."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-140a05ee49c5f31da6d98039d787968f</data>
</edge>
<edge source="&quot;INDIRECT BRANCH PREDICTION BARRIER&quot;" target="&quot;RETURN STACK BUFFER UNDERFLOW (RSB UNDERFLOW)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"RSB underflows are mitigated by the implementation of indirect branch prediction barriers like retpolines."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;SECURE BOOT MECHANISM&quot;" target="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE VULNERABILITY&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"A secure boot mechanism is compromised when there's a missing immutable root of trust hardware protection, leading to unauthorized code execution and security breaches."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;BOOT FIRMWARE DOWNGRADE EXPLOIT TECHNIQUE&quot;" target="&quot;SECURITY VERSION NUMBER ROLLBACK VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The boot firmware downgrade exploit technique exploits the security version number rollback vulnerability to execute attacks on SoCs."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;BOOT FIRMWARE DOWNGRADE EXPLOIT TECHNIQUE&quot;" target="&quot;SECURE BOOT INTEGRITY CHECK TACTIC&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The secure boot integrity check tactic is employed to bypass checks through exploiting vulnerabilities such as security version number rollback."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;RETURN STACK BUFFER UNDERFLOW (RSB UNDERFLOW)&quot;" target="&quot;SERIALIZATION INSTRUCTIONS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Reduces transient execution windows around prediction barriers to mitigate RSB underflow attacks."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;RETURN STACK BUFFER UNDERFLOW (RSB UNDERFLOW)&quot;" target="&quot;INDIRECT BRANCH PREDICTION BARRIER (E.G., RETPOLINE)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"RSB underflows are mitigated by the implementation of indirect branch prediction barriers like retpolines."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;SHARED MICROARCHITECTURAL PREDICTOR STATE&quot;" target="&quot;SIMULTANEOUS MULTITHREADING (SMT)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Processors with SMT may share predictor states between threads, creating conditions for shared microarchitectural vulnerabilities."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-140a05ee49c5f31da6d98039d787968f</data>
</edge>
<edge source="&quot;DETECTION OF PRESENCE OF KNOWN WEAKNESSES&quot;" target="&quot;HARDWARE VENDOR TOOLS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"These software tools are used to detect the presence of hardware weaknesses on processors."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;SHARED MICROARCHITECTURAL STATES&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR STATE DISCLOSURE&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Discloses shared states in documentation, informing users about the risks of data exposure through transient execution."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;SECURITY VERSION NUMBER ROLLBACK ATTACK POSTCONDITION&quot;" target="&quot;VULNERABLE STATE WITH DOS ON UPGRADES OR MALICIOUS EXECUTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Rolling back the security version number results in a vulnerable state allowing exploitation by adversaries, potentially leading to Denial-of-Service (DoS) on upgrades or execution of malicious firmware."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;SECURITY MECHANISM BYPASSING PATTERN&quot;" target="&quot;FAULT INDUCTION IN DEVICE WIRES&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Inducing faults in device wires is a specific attack technique used within the security mechanism bypassing pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;SECURITY MECHANISM BYPASSING PATTERN&quot;" target="&quot;IMPROPER PROTECTION AGAINST ELECTROMAGNETIC FAULT INJECTION (CWE-1319)&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The security mechanism bypassing pattern exploits the improper protection vulnerability to perform EM-FI attacks."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;FAULT INJECTION DETECTION MECHANISM&quot;" target="&quot;IMPROPER HANDLING OF FAULTS (CVE-2021-33096)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Detection mechanisms aim to prevent attackers from exploiting hardware faults that cause security-critical CPU instructions to be skipped."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;PREDICTOR SHARING DISABLEMENT&quot;" target="&quot;INDIRECT BRANCH PREDICTION BARRIER (E.G., RETPOLINE)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Disabling predictor sharing is related to the use of indirect branch prediction barriers like retpolines."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-28e02dab88fa91661f517389729e7079</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION EXPLOITATION&quot;" target="&quot;SANITIZING MICROARCHITECTURAL STATE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Mitigation strategies involve sanitizing the state of microarchitectural components to prevent transient execution from leading to unauthorized access."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION EXPLOITATION&quot;" target="&quot;STALE OR INVALID DATA IN SHARED MICROARCHITECTURAL RESOURCES&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"This attack technique exploits vulnerabilities in shared microarchitectural resources to cause unintended data exposure."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;FAULT INDUCTION IN DEVICE WIRES&quot;" target="&quot;COMPROMISE DEVICE INFORMATION&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tactic of compromising device information is achieved through the attack technique of inducing faults in device wires."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;FAULT INDUCTION IN DEVICE WIRES&quot;" target="&quot;SECURITY MECHANISM BYPASSING MITIGATION&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Implementing redundancy or error detection/correction codes mitigates the fault induction technique used by attackers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;CWE-703 - DESIGN FLAWS IN PHYSICAL ATTACKS&quot;" target="&quot;LACK OF ANTI-GLITCH PROTECTIONS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The lack of anti-glitch protections is a precondition for the design flaws to be exploited by physical attacks."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</edge>
<edge source="&quot;SELF-MODIFYING CODE CLEAR TRIGGERING &quot;" target="&quot;TRANSIENT EXECUTION VULNERABILITIES (CVE-2017-5753, CVE-2021-0089, CVE-2022-0002)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Triggers for transient execution vulnerabilities involve clearing events from self-modifying code."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;FAULT INJECTION EXPERTISE AND SETUP AVAILABILITY&quot;" target="&quot;IMPROPER PROTECTION AGAINST ELECTROMAGNETIC FAULT INJECTION (CWE-1319)&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Expertise and setup availability are prerequisites for exploiting the EM-FI vulnerability in devices."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITIES (CVE-2017-5753, CVE-2021-0089, CVE-2022-0002)&quot;" target="&quot;MICROARCHITECTURAL PREDICTORS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"These vulnerabilities are caused by incorrect operation execution transiently due to microarchitectural predictors."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION AGAINST ELECTROMAGNETIC FAULT INJECTION (CWE-1319)&quot;" target="&quot;INTEGRATED CIRCUIT (IC) HARDWARE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The improper protection vulnerability exists in integrated circuit hardware, making them susceptible to EM-FI attacks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION AGAINST ELECTROMAGNETIC FAULT INJECTION (CWE-1319)&quot;" target="&quot;SECURITY MECHANISM BYPASSING, DEVICE INFORMATION COMPROMISE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The postcondition of security mechanism bypassing and device information compromise is a result of exploiting the EM-FI vulnerability."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION AGAINST ELECTROMAGNETIC FAULT INJECTION (CWE-1319)&quot;" target="&quot;SECURE JTAG OR SECURE BOOT BYPASSING PATTERN (CWE-1319)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The pattern exploits the EM-FI vulnerability to bypass security mechanisms."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;IMPROPER PROTECTION AGAINST ELECTROMAGNETIC FAULT INJECTION (CWE-1319)&quot;" target="&quot;INTEGRATED CIRCUIT SECURITY ASSETS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability affects the security features of integrated circuits."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;COVERT CHANNEL EXPOSURE ATTACK TECHNIQUE&quot;" target="&quot;TRANSIENT EXECUTION FLAW (CWE-1420)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers use covert channel exposure techniques to exploit transient execution weaknesses in processors."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</edge>
<edge source="&quot;COVERT CHANNEL EXPOSURE ATTACK TECHNIQUE&quot;" target="&quot;DATA INFERENCE ATTACK TACTIC&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The tactic of inferring confidential data is accomplished through the attack technique of exposing sensitive information via covert channels."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</edge>
<edge source="&quot;VOLTAGE AND CURRENT OVERLOAD EXPLOITATION&quot;" target="&quot;DENIAL OF SERVICE THROUGH HARDWARE EXPLOITATION (VOLTAGE/CURRENT)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of denial of service is accomplished through the attack technique of voltage and current overload exploitation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;VOLTAGE AND CURRENT OVERLOAD EXPLOITATION&quot;" target="&quot;VOLTAGE SPIKE EXPLOITATION MALWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Malware implements the attack technique of voltage and current overload exploitation to cause denial of service conditions."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;VOLTAGE AND CURRENT OVERLOAD EXPLOITATION&quot;" target="&quot;OVERVOLTAGE AND OVERCURRENT PROTECTION IMPLEMENTATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing overvoltage and overcurrent protection measures mitigates the voltage and current overload exploitation technique."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;VOLTAGE AND CURRENT OVERLOAD EXPLOITATION&quot;" target="&quot;OVERCURRENT CONDITION ATTACK PATTERN&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Voltage and current overload exploitation is a part of the overcurrent condition attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;ACCESS CONTROL CHECK RACE CONDITION AWARENESS&quot;" target="&quot;TRANSIENT EXECUTION VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Awareness and prevention of race conditions are prerequisites for mitigating transient execution vulnerabilities."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;ACCESS CONTROL CHECK RACE CONDITION AWARENESS&quot;" target="&quot;ACCESS CONTROL CHECK (E.G., PAGE PERMISSIONS CHECK)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Awareness and prevention of race conditions are prerequisites for mitigating vulnerabilities involving access control checks."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;LACK OF THERMAL PROTECTION MECHANISMS&quot;" target="&quot;THERMAL RUNAWAY VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Devices lacking thermal protection mechanisms are prerequisites for exploiting the thermal runaway vulnerability."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;CONFIDENTIALITY IMPACT: READ MEMORY &quot;" target="&quot;TRANSIENT EXECUTION VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition involves reading sensitive memory due to the vulnerability in transient execution."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;DETECTION AND ANALYSIS VIA TIMING/POWER ANALYSIS&quot;" target="&quot;DATA INFERENCE ATTACK TACTIC&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers use timing or power analysis to detect discrepancies that help infer confidential data."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</edge>
<edge source="&quot;DATA INFERENCE ATTACK TACTIC&quot;" target="&quot;HARDWARE ISOLATION MEASURES IMPLEMENTATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Implementing hardware isolation measures mitigates the tactic of inferring confidential data through covert channel exposure."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</edge>
<edge source="&quot;ON-CHIP FABRIC OR BUS VULNERABILITY (CWE-1318)&quot;" target="&quot;INTEGRATED CIRCUIT SECURITY ASSETS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability affects the security features of integrated circuits."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;ON-CHIP FABRIC OR BUS VULNERABILITY (CWE-1318)&quot;" target="&quot;MISSING SUPPORT FOR SECURITY FEATURES (CWE-1318)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attack pattern exploits the vulnerability in on-chip fabrics and buses that do not support security features."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;ON-CHIP FABRIC OR BUS VULNERABILITY (CWE-1318)&quot;" target="&quot;IMPROPER FABRIC CONFIGURATION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The improper configuration of fabrics is a prerequisite for the vulnerability to be exploitable."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-f6c74e67f17b8af08b42ae24be006e39</data>
</edge>
<edge source="&quot;STALE OR INVALID DATA IN SHARED MICROARCHITECTURAL RESOURCES&quot;" target="&quot;SPECTRE VARIANTS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The vulnerabilities of Spectre variants can be attributed to flaws in handling stale data within microarchitectural components."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;STALE OR INVALID DATA IN SHARED MICROARCHITECTURAL RESOURCES&quot;" target="&quot;COVERT CHANNEL EXPOSURE VIA L1D CACHE FAULTS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The postcondition of covert channel exposure is a result of transient faults and invalid data states in shared microarchitectural resources."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;STALE OR INVALID DATA IN SHARED MICROARCHITECTURAL RESOURCES&quot;" target="&quot;MICROARCHITECTURAL VULNERABILITIES IN PROCESSORS&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Shared microarchitectural resources in processors are prone to vulnerabilities that can lead to unauthorized data access."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE POSTCONDITION&quot;" target="&quot;COMPROMISED SECURE BOOT MECHANISM&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A compromised secure boot mechanism resulting from the missing immutable RoT vulnerability leads to unauthorized execution of adversarial or untrusted boot code."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;ENVIRONMENTAL CONDITIONS HANDLING WEAKNESSES&quot;" target="&quot;TRANSIENT EXECUTION FLAW (CWE-1420)&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Weakness in handling extreme environmental conditions is a potential precondition for transient execution flaws to be exploited."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-7cc46f06a193cf4755fa7fcda9c4b0c5</data>
</edge>
<edge source="&quot;THERMAL RUNAWAY VULNERABILITY&quot;" target="&quot;THERMAL RUNAWAY ATTACK PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The thermal runaway attack pattern exploits the thermal runaway vulnerability in hardware devices."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;THERMAL RUNAWAY VULNERABILITY&quot;" target="&quot;PERMANENT DAMAGE AND SERVICE DEGRADATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of permanent damage and service degradation is a result of exploiting the thermal runaway vulnerability."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;THERMAL RUNAWAY VULNERABILITY&quot;" target="&quot;HARDWARE DEVICES WITH POWER MANAGEMENT ISSUES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The thermal runaway vulnerability exists in hardware devices with power management issues that lack proper protections."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY&quot;" target="&quot;COVERT CHANNEL EXPLOITATION PATTERN&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The covert channel exploitation pattern exploits transient execution vulnerabilities to infer sensitive data."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;FAULT TOLERANCE DESIGN FLAWS&quot;" target="&quot;REDUNDANCY DEGRADATION IMPACT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Degradation of redundancy due to faults is a result of vulnerabilities in the system's design."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</edge>
<edge source="&quot;CVE-2017-5715&quot;" target="&quot;FAULT-INDUCED DATA EXPOSURE PATTERN&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The fault-induced data exposure pattern exploits the specific vulnerability identified as CVE-2017-5715."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;INCORRECT DATA FORWARDING DURING TRANSIENT EXECUTION TECHNIQUE&quot;" target="&quot;BOUNDS CHECKING AND MEMORY SAFETY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Software mitigations prevent software from exposing private data through incorrect/stale data forwarding behavior."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;INCORRECT DATA FORWARDING DURING TRANSIENT EXECUTION TECHNIQUE&quot;" target="&quot;CVE-2019-1135&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The incorrect data forwarding technique can exploit the specific vulnerability identified as CVE-2019-1135."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;INCORRECT DATA FORWARDING DURING TRANSIENT EXECUTION TECHNIQUE&quot;" target="&quot;COVERT CHANNEL EXPLOITATION FOR DATA INFERENCE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of exploiting a covert channel is achieved by triggering transient operations that expose private data via side effects."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;INCORRECT DATA FORWARDING DURING TRANSIENT EXECUTION TECHNIQUE&quot;" target="&quot;CVE-2018-3615&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The incorrect data forwarding technique can exploit the specific vulnerability identified as CVE-2018-3615."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;MALICIOUS SOFTWARE AGENT&quot;" target="&quot;THERMAL EXPLOITATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The malicious software agent uses the technique of thermal exploitation to target hardware vulnerabilities."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-15c8c399ec268b8c32e12c790903a8f4</data>
</edge>
<edge source="&quot;USER AWARENESS AND SYSTEM CONFIGURATION&quot;" target="&quot;SANITIZING MICROARCHITECTURAL STATE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Users should be aware of system configurations related to microarchitectural state sanitization."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-4b4769576f3d49059f5913c5015f2b57</data>
</edge>
<edge source="&quot;ACCESS CONTROL CHECK (E.G., PAGE PERMISSIONS CHECK)&quot;" target="&quot;MICROARCHITECTURAL PREDICTORS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Microarchitectural predictors can cause race conditions in access control checks leading to transient execution vulnerabilities."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;PROCESSOR CONTEXT AND SHARED ADDRESS SPACE&quot;" target="&quot;TRANSIENT EXECUTION VULNERABILITY (CWE-1422) &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This vulnerability exists in the processor context that includes shared address space, making it susceptible to attacks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;COMMAND INJECTION ATTACK PATTERN&quot;" target="&quot;CWE-78 COMMAND INJECTION TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attack pattern and technique are closely related, with CWE-78 being the specific technique used in this context."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;SYSTEM SOFTWARE IMPLEMENTATION&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Failure to implement predictor-state-sanitizing operations exacerbates the risk of this vulnerability being exploited."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;DEVICE OVERHEATING EXPLOITATION&quot;" target="&quot;THERMAL OVERHEATING MALWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Malware implements the attack technique of device overheating exploitation to cause denial of service conditions."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;DEVICE OVERHEATING EXPLOITATION&quot;" target="&quot;THERMAL RUNAWAY ATTACK PATTERN&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Device overheating exploitation is a part of the thermal runaway attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-39463d74b58144a60cc5b1e541b1fd64</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL SIDE EFFECT OBSERVATION&quot;" target="&quot;COVERT CHANNEL EXPLOITATION PATTERN&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Observing microarchitectural side effects is part of the covert channel exploitation pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-5b8399f81d264b899c6b1465888065e8</data>
</edge>
<edge source="&quot;SMT THREAD ISOLATION AND TAGGING&quot;" target="&quot;MUTUAL DISTRUSTING SOFTWARE COMPONENTS EXECUTION CONTEXTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Isolating predictor state between SMT threads mitigates the risk of cross-thread influence."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;FIRMWARE UPDATE REQUIREMENTS SPECIFICATION&quot;" target="&quot;CVE-2020-9054 OS COMMAND INJECTION VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Ensuring firmware update capability mitigates risks associated with vulnerabilities like CVE-2020-9054."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;FIRMWARE UPDATE REQUIREMENTS SPECIFICATION&quot;" target="&quot;MAINTAINABILITY REQUIREMENT&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The maintainability requirement supports the specification for updateable components, enhancing security through regular patching."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;INSTRUCTION SKIP ATTACK TECHNIQUE&quot;" target="&quot;IMPROPER HANDLING OF FAULTS (CVE-2021-33096)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers use instruction skip techniques to exploit vulnerabilities leading to unreliable handling of security-critical CPU instructions."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY (CWE-1422) &quot;" target="&quot;DATA SPECULATION TECHNIQUES AND OUT-OF-ORDER EXECUTION&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The ability to perform speculative execution is a prerequisite for exploiting incorrect/stale data forwarding behavior."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY (CWE-1422) &quot;" target="&quot;DATA EXPOSURE THROUGH MICROARCHITECTURAL SIDE EFFECTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exposure of data over a covert channel is an effect resulting from the vulnerability's exploitation."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-2dabf9c98bc69986dc24d5e304324dc0</data>
</edge>
<edge source="&quot;LACK OF PATCH CAPABILITY&quot;" target="&quot;CVE-2020-9054 OS COMMAND INJECTION VULNERABILITY&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Products lacking a means to apply patches are at risk due to the persistence of known vulnerabilities like CVE-2020-9054."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;SANDBOX SOFTWARE AND MANAGED RUN-TIME ENVIRONMENTS&quot;" target="&quot;IMPROPER ISOLATION PRECONDITION&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"The software does not use hardware-enforced isolation boundaries as a prerequisite for the attack."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;CVE-2020-9054 OS COMMAND INJECTION VULNERABILITY&quot;" target="&quot;END-OF-SUPPORT NAS DEVICES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability affects end-of-support devices that cannot be patched, making them susceptible to exploitation."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;CVE-2020-9054 OS COMMAND INJECTION VULNERABILITY&quot;" target="&quot;DATA REMANENCE POSTCONDITION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploitation of the vulnerability may result in postconditions where sensitive data remains accessible, compromising confidentiality."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;INTERNAL RESOURCES SHARING&quot;" target="&quot;NETWORK ON CHIP (NOC)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The sharing of internal resources between different trust domains is a prerequisite for exploiting vulnerabilities in NoC."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;SYSTEM CALL INVOKED SANITIZATION&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Sanitizing predictors on system calls reduces the likelihood of malicious cross-context training."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;ROT DESIGNATION IN IMMUTABLE MEMORY ATTACK PATTERN&quot;" target="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The RoT designation attack pattern exploits the vulnerability by designating roots of trust in mutable memory, leading to potential tampering and execution of adversarial code."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;HARDWARE DESIGN FOR ISOLATION&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Design choices that do not isolate microarchitectural state create the vulnerability in processors with shared predictors."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;VICTIM SOFTWARE COMPONENT&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The victim software component is targeted because of the vulnerability present in the processor architecture."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES IN NETWORK ON CHIP (NOC)&quot;" target="&quot;DATA REMANENCE PREVENTION MITIGATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Analyzing the isolation of shared resources within a NoC is crucial for mitigating data remanence issues."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES IN NETWORK ON CHIP (NOC)&quot;" target="&quot;CONFIDENTIAL DATA READABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"A lack of proper isolation can lead to conditions where confidential information remains accessible, impacting security."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;DATA REMANENCE PREVENTION MITIGATION&quot;" target="&quot;MEMORY CLEAR AND ERASE OPERATION ANALYSIS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementations of secure erase commands must be preceded by detailed analysis during the design phase for effective mitigation."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;DATA REMANENCE PREVENTION MITIGATION&quot;" target="&quot;SELF-ENCRYPTING SECURE MEMORY DEVICES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Use of self-encrypting devices supports cryptographic erase, enhancing security measures against data remanence."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;SECURITY-SENSITIVE DECISION POINTS&quot;" target="&quot;IMPROPER HANDLING OF FAULTS (CVE-2021-33096)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Target entities where security checks can be bypassed through fault injection leading to unreliable instruction handling, affecting critical decision points."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;ATTACKERS (GENERIC)&quot;" target="&quot;IMPROPER HANDLING OF FAULTS (CVE-2021-33096)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers exploit hardware faults leading to unreliable handling of security-critical instructions, causing critical checks to fail."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-ae5449d3f107a69d5a261a02a07bc486</data>
</edge>
<edge source="&quot;SHARED MICROARCHITECTURAL PREDICTORS BETWEEN HARDWARE THREADS&quot;" target="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The weakness is due to predictors being shared between threads without proper isolation."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;UNAUTHORIZED DEBUG ACCESS PRECONDITION&quot;" target="&quot;DEBUG TRACER IP BLOCK SOFTWARE VULNERABILITY&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Unsecured debug traces serve as a precondition for unauthorized access and extraction of confidential information from SoCs."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION EXPLOITATION PATTERN&quot;" target="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The exploitation pattern involves triggering processor events to read confidential data from other sandboxes."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;PROCESSOR SPECIFICATION INSPECTION SOFTWARE TOOL&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Software tools inspect processor specifications to detect hardware weaknesses that enable triggering processor events during attacks."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;BLACK BOX FUZZING TOOL SOFTWARE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Fuzzing tools are used to detect hardware weaknesses that allow attackers to trigger processor events during attacks."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;HARDWARE AND SOFTWARE MITIGATION MEASURES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Mitigations are designed to reduce the risk of attackers using these techniques to exploit transient execution vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;AUTOMATED STATIC ANALYSIS TOOL FOR CODE SEQUENCES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Static analysis tools identify code sequences vulnerable to transient execution and related attack techniques."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;HARDWARE DESIGN PREVENTING COVERT CHANNELS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Hardware designs aiming to prevent covert channels mitigate the effectiveness of attack techniques exploiting transient execution."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;SOFTWARE MITIGATING EFFECTS OF TRANSIENT EXECUTION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Software measures designed to mitigate transient execution effects reduce the risk of successful exploitation of these vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;CONTROL REGISTERS FOR DISABLING PREDICTORS SOFTWARE FEATURE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Software features exposing control registers mitigate attack techniques that exploit hardware weaknesses leading to transient execution."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRIGGERING PROCESSOR EVENTS FOR DATA READ ATTACK TECHNIQUE&quot;" target="&quot;CONFIDENTIAL DATA ACCESS&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Accessing confidential data is accomplished through triggering processor events and exploiting transient execution vulnerabilities."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;MEMORY CLEAR AND ERASE OPERATION ANALYSIS&quot;" target="&quot;DYNAMIC ANALYSIS OF MEMORY CONTENTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Dynamic analysis is a key method to ensure memory contents are properly cleared or erased as designed."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-9c2d736840493af6c8eeeed13f45ae1a</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;" target="&quot;MUTUAL DISTRUSTING SOFTWARE COMPONENTS EXECUTION CONTEXTS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The precondition for exploiting this vulnerability is that software components in different execution contexts trust each other insufficiently."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;MICROARCHITECTURAL PREDICTOR SHARING WEAKNESS&quot;" target="&quot;PREDICTOR-STATE-SANITIZING OPERATIONS (E.G., INDIRECT BRANCH PREDICTION BARRIER)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Sanitizing operations mitigate the weakness by preventing predictor state from influencing across contexts."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;MUTUAL DISTRUSTING SOFTWARE COMPONENTS EXECUTION CONTEXTS&quot;" target="&quot;ARCHITECTURE AND DESIGN PHASE MITIGATION MEASURES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Designing hardware to prevent cross-context influence mitigates the precondition for exploiting this vulnerability."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-dbcb85b28b2b7826ec21a7b6bc0bbc99</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION PRECONDITION&quot;" target="&quot;PROCESSOR DESIGN INSTRUCTIONS FOR DATA ISOLATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Design instructions provided by processor designers enable software to better isolate data, mitigating improper isolation preconditions."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION PRECONDITION&quot;" target="&quot;TRANSIENT EXECUTION VULNERABILITY IN PROCESSORS&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"The precondition of improper isolation sets the stage for the existence of transient execution vulnerabilities that can be exploited."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;ADVERSARY (UNSPECIFIED)&quot;" target="&quot;EXPLOIT OF NON-UPDATABLE COMPONENT&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An adversary exploits the non-updatable component's vulnerabilities using specific attack techniques."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY IN PROCESSORS&quot;" target="&quot;DATA LEAKAGE POSTCONDITION&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The postcondition of unauthorized data leakage is a result of exploiting transient execution vulnerabilities."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY IN PROCESSORS&quot;" target="&quot;HARDWARE WEAKNESS EXHAUSTIVE ANALYSIS METHOD&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Academic researchers use exhaustive analysis methods to discover new hardware weaknesses, including transient execution vulnerabilities."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY IN PROCESSORS&quot;" target="&quot;HARDWARE WEAKNESS DETECTION SOFTWARE TOOL&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Detection software attempts to execute a vulnerable sequence to confirm the presence of transient execution vulnerabilities in processors."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY IN PROCESSORS&quot;" target="&quot;SYSTEM ENUMERATION FOR HARDWARE WEAKNESSES SOFTWARE TOOL&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Enumeration bits provided by hardware vendors allow system software to check and report on processor weaknesses, including transient execution vulnerabilities."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;TRANSIENT EXECUTION VULNERABILITY IN PROCESSORS&quot;" target="&quot;SANDBOXED APPLICATIONS AND MANAGED RUN-TIMES&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"This vulnerability exists within sandboxed applications or managed runtimes, making them susceptible to attacks."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-508c1dc38fedf7a8a2b552939936e945</data>
</edge>
<edge source="&quot;COMPONENT THAT IS NOT UPDATEABLE&quot;" target="&quot;VULNERABILITY IN NON-UPDATABLE COMPONENT&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The software (non-updatable component) has inherent weaknesses that can be exploited due to its design limitations."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;SPECULATIVE EXECUTION ATTACKERS&quot;" target="&quot;LOAD VALUE INJECTION EXPLOITATION TOOL&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attackers use a tool or method to exploit the load value injection vulnerability for side-channel attacks on processors."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;INABILITY TO PATCH EXPLOITABLE VULNERABILITIES&quot;" target="&quot;VULNERABILITY IN NON-UPDATABLE COMPONENT&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This attack pattern exploits the vulnerability of a non-updatable component, which cannot be patched or updated for security reasons."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;INABILITY TO PATCH EXPLOITABLE VULNERABILITIES&quot;" target="&quot;EXPLOIT OF NON-UPDATABLE COMPONENT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The specific technique used by adversaries is part of the attack pattern targeting non-updatable components."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;INFORMATION DISCLOSURE THROUGH SIDE-CHANNEL ATTACK&quot;" target="&quot;SPECULATIVE EXECUTION EXPLOITATION TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The tactic of disclosing sensitive information is accomplished through the speculative execution exploitation technique."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;EXPLOIT OF NON-UPDATABLE COMPONENT&quot;" target="&quot;UPDATE CAPABILITY INTEGRATION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Mitigation efforts focus on ensuring update capabilities are integrated to prevent exploitation through lack of patching."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;SECURITY PATCH FOR SPECULATIVE EXECUTION VULNERABILITY&quot;" target="&quot;SPECULATIVE EXECUTION EXPLOITATION TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"A security patch mitigates speculative execution exploitation techniques to prevent unauthorized information disclosure."&lt;SEP&gt;"A security patch mitigates the speculative execution exploitation technique to prevent unauthorized information disclosure."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;UPDATE CAPABILITY INTEGRATION&quot;" target="&quot;PROTECTION AGAINST EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The tactic is accomplished by integrating the capability for updates into component designs, mitigating risks associated with non-updatable components."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;SPECULATIVE EXECUTION EXPLOITATION TECHNIQUE&quot;" target="&quot;SIDE-CHANNEL INFORMATION DISCLOSURE PATTERN&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The speculative execution exploitation technique is part of the side-channel information disclosure attack pattern."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;SPECULATIVE EXECUTION EXPLOITATION TECHNIQUE&quot;" target="&quot;LOAD VALUE INJECTION EXPLOITATION TOOL&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The exploitation tool implements the speculative execution technique to trigger load value injection in processors."</data>
  <data key="d5">"Implement"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;LOAD VALUE INJECTION EXPLOITATION TOOL&quot;" target="&quot;HARDWARE WEAKNESS ANALYSIS TEAM&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The team uses exploitation tools to exploit hardware weaknesses related to speculative execution."</data>
  <data key="d5">"Use"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;REQUIREMENTS PHASE OVERSIGHT&quot;" target="&quot;VULNERABILITY IN NON-UPDATABLE COMPONENT&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Lack of oversight during requirements phase can lead to vulnerabilities in components that cannot be updated or patched."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;SIDE-CHANNEL INFORMATION DISCLOSURE PATTERN&quot;" target="&quot;LOAD VALUE INJECTION VULNERABILITY (CVE-2020-0551) &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The side-channel information disclosure pattern exploits the load value injection vulnerability for unauthorized information disclosure."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;VULNERABILITY IN NON-UPDATABLE COMPONENT&quot;" target="&quot;PRODUCT WITH NON-UPDATABLE COMPONENT&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The vulnerability exists within non-updatable components, making the product susceptible to exploitation by adversaries."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;VULNERABILITY IN NON-UPDATABLE COMPONENT&quot;" target="&quot;OPERATIONAL FAILURE AND EXPLOITATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Adversaries exploiting vulnerabilities leads to operational failure or other negative impacts on the system."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;AUTHENTICATED LOCAL ACCESS REQUIREMENT&quot;" target="&quot;LOAD VALUE INJECTION VULNERABILITY (CVE-2020-0551) &quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Authenticated local access is a prerequisite for exploiting the load value injection vulnerability in processors."</data>
  <data key="d5">"premise"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;LOAD VALUE INJECTION VULNERABILITY (CVE-2020-0551) &quot;" target="&quot;SOME PROCESSORS UTILIZING SPECULATIVE EXECUTION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The load value injection vulnerability exists in some processors utilizing speculative execution, making them targets for attack."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;LOAD VALUE INJECTION VULNERABILITY (CVE-2020-0551) &quot;" target="&quot;SENSITIVE INFORMATION LEAKAGE POSTCONDITION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of sensitive information leakage results from exploiting the load value injection vulnerability in processors."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-27764142320ab4a55340af1abbe3d713</data>
</edge>
<edge source="&quot;TAMPERING WITH ROT MEMORY TECHNIQUE&quot;" target="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE VULNERABILITY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tampering with root of trust memory technique exploits a missing immutable root of trust hardware protection, compromising secure boot mechanisms."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;SECURITY VERSION NUMBER ROLLBACK ATTACK&quot;" target="&quot;VULNERABILITY IN SECURITY VERSION NUMBER STORAGE&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"This attack pattern exploits the vulnerability related to insecure storage practices of security version numbers."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;SECURITY VERSION NUMBER ROLLBACK ATTACK&quot;" target="&quot;MANIPULATION OF SECURITY VERSION NUMBERS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The specific technique used by adversaries is part of the rollback attack strategy."</data>
  <data key="d5">"Same_as"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;MANIPULATION OF SECURITY VERSION NUMBERS&quot;" target="&quot;SECURE STORAGE PRACTICES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Recommended practices aim to mitigate risks associated with unauthorized manipulation of security version numbers."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;SECURE STORAGE PRACTICES&quot;" target="&quot;PREVENT UNAUTHORIZED ACCESS AND MODIFICATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The tactic involves implementing secure storage practices to prevent unauthorized access and modification of critical security data."</data>
  <data key="d5">"Accomplish"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;MISSING IMMUTABLE ROOT OF TRUST IN HARDWARE VULNERABILITY&quot;" target="&quot;SECURE BOOT VERIFICATION AND STORAGE MITIGATION TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Mitigates the missing immutable root of trust hardware vulnerability by ensuring secure boot verification and storage in an immutable memory location."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;VULNERABILITY IN SECURITY VERSION NUMBER STORAGE&quot;" target="&quot;SECURITY HARDWARE WITH FIRMWARE VULNERABILITIES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This vulnerability exists within the security hardware component that lacks proper protection mechanisms for its firmware."</data>
  <data key="d5">"Exist_in"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;VULNERABILITY IN SECURITY VERSION NUMBER STORAGE&quot;" target="&quot;COMPROMISED SYSTEM INTEGRITY AND FUNCTIONALITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploitation of this vulnerability can lead to compromised system integrity, functionality issues, or denial-of-service conditions."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-892ec830b66f6437796b41d9204bf489</data>
</edge>
<edge source="&quot;UNEXPECTED PHYSICAL OR ENVIRONMENTAL CONDITIONS&quot;" target="&quot;IMPROPER HANDLING OF PHYSICAL OR ENVIRONMENTAL CONDITIONS VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The improper handling of physical or environmental conditions vulnerability is exploited due to these unexpected conditions."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</edge>
<edge source="&quot;DEBUG TRACER IP BLOCK SOFTWARE VULNERABILITY&quot;" target="&quot;TAGGING TRACES WITH SECURITY PRIVILEGES MITIGATION TECHNIQUE&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The tagging traces mitigation technique mitigates the vulnerability of unsecured debug tracer IP blocks by ensuring that only authorized entities can access sensitive trace information."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-4f02d3a2ccd36e011af08f781e28e3e4</data>
</edge>
<edge source="&quot;IMPROPER HANDLING OF PHYSICAL OR ENVIRONMENTAL CONDITIONS VULNERABILITY&quot;" target="&quot;SECURITY UNDERMINING FLIP BIT AUTHENTICATION DECISION IMPACT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The postcondition of security undermining flip bit authentication decision impact results from the improper handling of physical or environmental conditions vulnerability exploitation."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</edge>
<edge source="&quot;OS COMMAND INJECTION VULNERABILITY (CVE-2020-9054)&quot;" target="&quot;END-OF-SUPPORT PRODUCTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The OS command injection vulnerability affects end-of-support products as they cannot be patched and remain unsecured."</data>
  <data key="d5">"affecting"</data>
  <data key="d6">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</edge>
<edge source="&quot;END-OF-SUPPORT PRODUCTS&quot;" target="&quot;SBOM (SOFTWARE BILL OF MATERIALS)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Not maintaining an SBOM can result in integrating insecure or unpatched components, making products more vulnerable."</data>
  <data key="d5">"Mitigate"</data>
  <data key="d6">chunk-13bd6432c4df3bd5f3b022c47fe7c1ab</data>
</edge>
</graph></graphml>