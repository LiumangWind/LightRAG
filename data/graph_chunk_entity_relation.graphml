<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d6" for="edge" attr.name="source_id" attr.type="string"/>
<key id="d5" for="edge" attr.name="keywords" attr.type="string"/>
<key id="d4" for="edge" attr.name="description" attr.type="string"/>
<key id="d3" for="edge" attr.name="weight" attr.type="double"/>
<key id="d2" for="node" attr.name="source_id" attr.type="string"/>
<key id="d1" for="node" attr.name="description" attr.type="string"/>
<key id="d0" for="node" attr.name="entity_type" attr.type="string"/>
<graph edgedefault="undirected"><node id="&quot;ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker can exploit inconsistencies in mirrored regions or out-of-sync copies to gain unauthorized access or modify system state."&lt;SEP&gt;"An attacker can exploit observable discrepancies to gain unauthorized access or information about system operations and states."&lt;SEP&gt;"An attacker exploits improper access control in on-chip debug and test interfaces to bypass protection mechanisms and gain unauthorized access to sensitive information."&lt;SEP&gt;"An attacker is an entity involved in adversarial activities who uses hardware tools like ChipWhisperer to conduct voltage and clock glitching attacks on SoCs."&lt;SEP&gt;"An attacker who can exploit faulty finite state machines (FSMs) in hardware logic or improper write handling in limited-write non-volatile memories to cause a denial of service (DoS) or gain privileges."&lt;SEP&gt;"An attacker who can exploit improper isolation or DMA attacks on a System-on-Chip (SoC) during the boot phase to extract data or gain privileges."&lt;SEP&gt;"An attacker who exploits hardware design flaws to gain unauthorized access and modify system configurations."&lt;SEP&gt;"An entity that employs voltage and clock glitches to compromise system security, attempting to gain unauthorized access or privileges."&lt;SEP&gt;"An entity that exploits hardware design flaws or improper implementation of security mechanisms to gain unauthorized access, modify configurations, extract sensitive data, and potentially undermine cryptographic primitives used in the system."&lt;SEP&gt;"An entity that seeks to exploit security-sensitive interfaces and debug features for unauthorized access, potentially gaining privileges or bypassing protection mechanisms."&lt;SEP&gt;"An individual or group who can exploit vulnerabilities in hardware logic, such as faulty FSM designs and improper write handling in non-volatile memories."&lt;SEP&gt;"The attacker exploits the weakness of uncleared sensitive information to access data that should not be accessible."&lt;SEP&gt;"The attacker exploits vulnerabilities in software or systems to gain unauthorized access or modify sensitive information."&lt;SEP&gt;"The attacker exploits vulnerabilities in system architecture and hardware to interfere with shadow copy updates or manipulate fuse values, leading to security breaches."&lt;SEP&gt;"The attacker exploits vulnerabilities in system logic and comparison functions to gain unauthorized access or elevate privileges."&lt;SEP&gt;"The attacker exploits vulnerabilities to gain unauthorized access or perform malicious activities."&lt;SEP&gt;"The attacker is someone who can misuse the authority of one victim to target another, often by sending a request through an intermediary application that forwards it to a target."&lt;SEP&gt;"The attacker utilizes vulnerabilities in cryptographic algorithms and system configurations to carry out attacks."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e&lt;SEP&gt;chunk-f33f72f8ec6e026ca0374d2967ab51e1&lt;SEP&gt;chunk-732e47f37276f678a57ed5b2cc4caaa0&lt;SEP&gt;chunk-a8ce63219639ac3ccda8f5f97256d087&lt;SEP&gt;chunk-7eb84a76feac79b0109e4248d03155ec&lt;SEP&gt;chunk-eb9580695df69206d5ae3cb8f9e396f5&lt;SEP&gt;chunk-155e5cca5e90d88780b67dd7b487829a&lt;SEP&gt;chunk-3765fb59247c8757d841cb1e549550cf&lt;SEP&gt;chunk-511f3baaabb0ab2809dad9343c0d0238&lt;SEP&gt;chunk-a486a4935548559d90f50ff1c1104c21&lt;SEP&gt;chunk-97f0fe12f43fe0952f114af5f3d4a0a1&lt;SEP&gt;chunk-654843afa7d21ff70e90b3e1ef92c37f&lt;SEP&gt;chunk-60f96cbfcdc863307fe7ed2450e4fab0&lt;SEP&gt;chunk-a55d80a6593fc4c93fd4bb2778558e73&lt;SEP&gt;chunk-cf2bb615b405ec5f79b3729ede5b6486&lt;SEP&gt;chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Operating systems and applications can exhibit vulnerabilities due to improper handling or clearing of resources, such as memory, after use. This software weakness allows attackers to read previously stored data in reused resources."&lt;SEP&gt;"Software can introduce vulnerabilities like Observable Discrepancy, which attackers may use for side-channel attacks to extract sensitive data such as authentication details."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1&lt;SEP&gt;chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attacker uses specific techniques to detect and read uncleared data in resources, such as observing patterns or behaviors indicative of sensitive information still available after resource release."&lt;SEP&gt;"Attackers use various attack techniques including side-channel attacks that exploit discrepancies in software responses to gather security-relevant information."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1&lt;SEP&gt;chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;MITIGATION MEASURES&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Mitigation measures include compartmentalizing the system, ensuring error messages do not reveal sensitive details, and avoiding inconsistent messaging which might tip off attackers about internal states."&lt;SEP&gt;"To mitigate this risk, software should overwrite unused portions of memory with random or fixed values before releasing the memory back to the system for reuse. This prevents residual data from being accessible to unauthorized entities."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1&lt;SEP&gt;chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;TACTICS&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Attackers employ tactics such as refining or optimizing attacks based on observed discrepancies to increase their chances of success."&lt;SEP&gt;"The tactic involves an attacker targeting state transitions and resource releases as opportunities to access sensitive information left behind in uncleared resources."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1&lt;SEP&gt;chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;HIDDEN DANGERS&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Observable Discrepancies pose hidden dangers by allowing attackers to exploit timing, control flow, communications, and behavior variations for unauthorized access."&lt;SEP&gt;"Uncleared sensitive data poses a hidden danger because it can remain accessible after a resource is released or reused, potentially leading to unauthorized exposure of confidential information."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1&lt;SEP&gt;chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;TARGET OBJECT&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The target object includes various system resources such as memory and disk space that are susceptible to this type of vulnerability due to improper handling upon release or reuse."&lt;SEP&gt;"The target objects are systems or software applications that exhibit observable discrepancies which can be exploited by attackers."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1&lt;SEP&gt;chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2020-8695&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability related to Intel processors' RAPL interface, exposing information through observable discrepancies."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2019-14353&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability in a crypto hardware wallet allowing attackers to determine secrets via power consumption analysis."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2019-10071&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability in a Java framework where HMAC signatures are compared using non-constant time operations, leading to timing discrepancies."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2002-2094&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability related to directory traversal attacks and inconsistent error responses."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2001-1483&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability where different error messages reveal valid usernames, aiding in brute force password guessing."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2001-1528&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability related to account number enumeration via inconsistent responses."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2004-2150&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability where error messages expose whether a user exists or not, aiding in brute force attacks."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2005-1650&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A specific vulnerability similar to CVE-2004-2150, exposing information through inconsistent responses."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2004-0294&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A bulletin board vulnerability where error messages reveal the existence of valid users."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;CVE-2004-0243&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"An operating system vulnerability related to inconsistent error messaging when direct remote login is disabled."</data>
  <data key="d2">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</node>
<node id="&quot;REMOTE ATTACKER&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"A remote attacker who can exploit vulnerabilities to identify valid users or conduct brute force password guessing attacks."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;BULLETIN BOARD SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software that displays different error messages for user existence, allowing attackers to identify valid users and perform brute-force attacks."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;BRUTE FORCE ATTACK&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"An attack method where an attacker tries multiple password combinations until the correct one is found."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;DIFFERENT ERROR MESSAGES FOR USER EXISTENCE &quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"The technique of using different error messages to determine if a user account exists, aiding in brute force attacks."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;PASSWORD GUESSING ATTACK &quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"An attack where an attacker attempts multiple passwords until the correct one is guessed."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;REMOTE LOGIN SOFTWARE &quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software that provides different error messages for login attempts, allowing attackers to identify valid users and guess passwords through brute force."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;FILTERED PORT DETECTION ATTACK &quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"An attack where an attacker uses the difference in TTL values to determine if a port is filtered or not."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;PRODUCT USING MODIFIED TCP/IP STACK &quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software that modifies TCP/IP stack and ICMP error messages, indicating its presence and potentially revealing system details."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;SYN-FIN PACKET RESPONSE ATTACK &quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"An attack where an attacker uses SYN-FIN packets to elicit specific responses from the product."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;VERSION CONTROL SYSTEM &quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software that allows attackers to determine the existence of files and directories through error messages returned by commands such as -X for alternate history files."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;FTP SERVER SOFTWARE &quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software that generates different error responses for user names, aiding in brute force password guessing attacks or identifying valid usernames."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;SSL IMPLEMENTATION VULNERABILITY &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A flaw in the SSL implementation that does not perform MAC computation on incorrect block cipher padding, leading to a timing discrepancy that helps attackers extract plaintext."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;VIRTUAL MACHINE SOFTWARE &quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software allowing malicious web site operators to determine file existence on client machines by measuring delays in system resource execution."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;RESOURCE REUSE VULNERABILITY &quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where resources released for reuse retain sensitive information, potentially exposing it to unauthorized access."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;IDENTIFY VALID USERS&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Tactic used by attackers to determine which user accounts are active or valid through error messages."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;CONSISTENT ERROR HANDLING&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Mitigation measure involving the implementation of consistent and generic error messages to prevent information leakage about user existence."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;TIMING ATTACK VULNERABILITY&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A hidden danger where attackers can infer sensitive information based on time discrepancies in system responses."</data>
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</node>
<node id="&quot;ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"The attack pattern involves an attacker recognizing that resources like memory have not been properly cleared and exploiting this by accessing the uncleared portions of those resources."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;OPERATING SYSTEM&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The operating system plays a critical role in managing resources like memory. It often does not clear previously written information when deallocating or reallocating such resources."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;MEMORY MANAGEMENT VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability exists in the management of memory and other resources, where data is left uncleared upon deallocation, exposing it to potential unauthorized access."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;FILE SYSTEM VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Vulnerabilities exist within file systems where disk space may not be cleared properly when a file is deleted or reallocated."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;NETWORK DEVICE VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Network devices, such as Ethernet NIC drivers and routers, can exhibit vulnerabilities related to uncleared information in memory buffers during data transmission and reception."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;SECURE CLEARING TOOL (SDELETE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Tools like SDelete on Windows are designed to securely delete files by overwriting their contents before deletion. However, such functionality may not be available at the application layer."</data>
  <data key="d2">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</node>
<node id="&quot;SOFTWARE WITH INCORRECT DEFAULT PERMISSIONS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"This type of software sets file permissions during installation that allow anyone to modify those files, potentially leading to security risks."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;MEMORY MANAGEMENT FLAW&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A memory management flaw involves improper handling or clearing of data in reusable resources such as memory buffers, which can expose sensitive information."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;EXPOSED DATA IN NETWORK PACKETS AND LOCAL MEMORY ALLOCATION&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Sensitive data might be exposed in network packets, local memory allocations, files etc., due to incorrect default permissions or improper data handling."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;IMPROPER INITIALIZATION/SHUTDOWN OF RESOURCES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability involves the improper initialization or shutdown of resources which can lead to sensitive information leakage when the resource is reused without proper clearing."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;FILE PERMISSIONS MANAGEMENT&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Managing file permissions effectively to ensure that only authorized users can modify files and directories, reducing exposure to vulnerabilities such as incorrect default permissions."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE USE&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"Attackers exploit memory management flaws by reusing unsecured data or resources without clearing sensitive information."&lt;SEP&gt;"Uncleared sensitive information before reuse can lead to data exposure and unauthorized access."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;CLEAR SENSITIVE INFORMATION IN REUSABLE RESOURCES&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Mitigation measure that involves properly clearing and sanitizing sensitive information stored in reusable resources to prevent exposure when reused."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;CWE-226 - MEMORY MANAGEMENT FLAW&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This vulnerability involves improper handling of reusable resources, particularly memory management flaws leading to potential information leakage or security risks."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;CWE-0212 - IMPROPER INPUT VALIDATION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Inadequate validation of input data can lead to various vulnerabilities such as injection attacks, buffer overflows, and more."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;RESOURCE LIFECYCLE MANAGEMENT&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Effective management of the lifecycle stages of resources (creation, use, disposal) ensures proper handling and clearing of sensitive information at each stage."</data>
  <data key="d2">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</node>
<node id="&quot;UNAUTHORIZED ACTORS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Unauthorized actors refer to adversaries who may have privileged access to a network interface or any link along the communication channel but are not authorized to collect underlying data."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;CLEARTEXT TRANSMISSION OF SENSITIVE INFORMATION&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"This attack mode involves transmitting sensitive information in cleartext through channels that can be monitored by unauthorized actors, lowering security and making it easier for adversaries to intercept and exploit the transmitted data."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;MONITORING TOOLS (E.G., TRUSS, STRACE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"These tools are used to examine a software's process as it interacts with the operating system and network. They help identify cleartext transmissions by analyzing communication patterns and monitoring for unauthorized access or sniffing activities."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;NETWORK SNIFFING&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A technique where an attacker intercepts and monitors data traffic over a network to obtain sensitive information transmitted in cleartext."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;APPROPRIATE ACCESS PERMISSIONS&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Implementing appropriate access permissions for files, directories, and communication channels helps mitigate the risk of unauthorized actors accessing or modifying sensitive data."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;DESIGN FLAWS&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Strategies employed by attackers to exploit design flaws in systems that lack proper security mechanisms, leading to vulnerabilities such as insecure default permissions."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;INSECURE DEFAULT PERMISSIONS (E.G., WORLD-WRITABLE FILES)&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"These are hidden dangers where defaults settings allow excessive access to sensitive information, posing significant risks when not properly secured."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;COMMUNICATION CHANNELS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Various pathways through which data is transmitted, including software products and hardware-specific technologies like internal networks and external debug channels, susceptible to cleartext sniffing attacks."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;ADVERSARIES&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Adversaries are individuals or groups who seek to exploit vulnerabilities in systems by intercepting and analyzing data traffic, often using software tools."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;INTERMEDIARY NODES&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Intermediate nodes within a communication network through which data packets may traverse during transmission."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;ROUTER ACCESS&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Privileged access to routers or other intermediary devices can allow unauthorized actors to monitor and intercept communications."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;SYSTEM CALL TRACING UTILITIES (E.G., TRUSS, STRACE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software tools used for monitoring system calls made by processes to detect potential security issues such as cleartext data transmission."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;SNIFFING ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Techniques employed by attackers to intercept and analyze network traffic for sensitive information transmitted in clear text."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;PACKET DUMP ANALYSIS&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"An attack mode where adversaries examine recorded packets to extract cleartext data, even after the initial transmission."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;ENCODING TECHNIQUES&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Techniques used to encode sensitive information to prevent unauthorized access and enhance security during communication."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;DEBUGGING CHANNELS (E.G., JTAG)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Channels that allow for debugging purposes, potentially exploitable by adversaries if not properly secured."</data>
  <data key="d2">chunk-e75a1595db4670470ac4e28b2363c830</data>
</node>
<node id="&quot;DEBUGGER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Debugger is a software tool that attaches to running processes and allows monitoring of system calls, memory usage, etc., useful for analyzing software behavior."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;SYSTEM-CALL TRACING UTILITIES (TRUSS/STRACE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"These utilities are used to trace system calls made by processes in Unix-like operating systems. They help in debugging and understanding process interactions with the OS."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;SYSTEM ACTIVITY MONITORS (FILEMON, REGMON, PROCESS MONITOR)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software tools designed for monitoring various activities on Windows-based systems such as file access, registry changes, and process events."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;SNIFFERS AND PROTOCOL ANALYZERS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"These are network monitoring tools used to capture and analyze data packets transmitted over a network. They help in understanding network traffic patterns and vulnerabilities."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;AUTOMATED STATIC ANALYSIS (SAST)&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A security testing method that involves analyzing source code or compiled binaries without execution to identify potential vulnerabilities."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;ENCRYPTION ALGORITHMS (NIST-RECOMMENDED)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Approved cryptographic algorithms recommended by NIST for securing data paths in hardware platforms and other systems."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;SSL/TLS PROTOCOLS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Secure Socket Layer/Transport Layer Security protocols are used to secure communications between servers and clients. They protect against interception of sensitive data."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;PENETRATION TESTING&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A method used to evaluate the security of an IT infrastructure by simulating cyber attacks. It involves manual analysis and tool use to uncover vulnerabilities."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;THREAT MODELING&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Security practice that involves identifying, quantifying, and prioritizing threats to computer systems or networks."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;CWE-294: INSECURE COMMUNICATION CHANNEL&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Refers to vulnerabilities where sensitive information is transmitted without proper encryption, allowing potential interception by unauthorized parties."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;PROGRAMMABLE LOGIC CONTROLLER (PLC)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"A PLC is an industrial computer used for automation of electromechanical processes. It can pose security risks if it transmits sensitive data in plaintext."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;BUILDING CONTROLLER&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Refers to a controller responsible for managing building systems such as HVAC, lighting, and security. Can be vulnerable when transmitting credentials unencrypted."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;ATTACKER (GENERIC)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An entity that uses various techniques to exploit vulnerabilities in software or systems, often targeting sensitive information."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;IMPLEMENT STRONG ENCRYPTION PROTOCOLS&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A mitigation measure involving the use of strong encryption protocols such as SSL/TLS to protect data transmission over insecure channels."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;DESIGN SECURE HARDWARE PLATFORMS&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Ensuring hardware platforms are designed with secure paths and approved encryption algorithms to protect critical data from unauthorized access."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;UNENCRYPTED DATA TRANSMISSION&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where sensitive information is transmitted in plaintext, making it susceptible to interception by attackers."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;MISSING SECURE FLAGS (HTTPS COOKIES)&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The absence of secure flags on HTTPS cookies can lead to the transmission of session tokens over unencrypted HTTP channels."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;INTERCEPTING SENSITIVE DATA&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"A tactic employed by attackers to intercept sensitive data transmitted in plaintext or without proper encryption."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;EXPLOITING WEAK ENCRYPTION&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An attacker's tactic involving the exploitation of weak or missing encryption measures to gain unauthorized access."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;MAN-IN-THE-MIDDLE (MITM) ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A technique where an attacker intercepts and possibly alters communication between two parties without their knowledge, often used to steal sensitive information."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;REPLAY ATTACKS&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attack in which the attacker captures data and replays it at a later time to gain unauthorized access or alter system states."</data>
  <data key="d2">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</node>
<node id="&quot;EXPECTED BEHAVIOR VIOLATION&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"An issue where a feature or API behaves contrary to its intended specification leading to potential security vulnerabilities or quality degradation."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;MISSING CRYPTOGRAPHIC STEP&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A feature that does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;PRODUCT&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The software application being developed and deployed that could potentially have these flaws."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;URLCLASSLOADER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A class loader that can load classes from URLs which may have security vulnerabilities if not used properly."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;JAVA.UTIL.JAR&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Java’s jar package handling mechanism, which also needs proper use and adherence to secure coding standards."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;SECURE CODING PRACTICES (CERT ORACLE STANDARD)&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Recommended practices by CERT Oracle Secure Coding Standard for Java that prevent security flaws."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;AUTHENTICATION BYPASS USING PUBLIC KEY&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attack technique where an attacker bypasses authentication mechanisms by exploiting missing cryptographic steps or vulnerabilities."</data>
  <data key="d2">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</node>
<node id="&quot;PRODUCT (INTERMEDIARY APPLICATION)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"A product or intermediary application that receives requests from upstream components and forwards them to external actors without preserving the original source identity."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;UPSTREAM COMPONENT &quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"An entity that sends a request to the intermediary application, which then forwards it to another component."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;EXTERNAL ACTOR &quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"A target entity that receives requests forwarded by the product, believing them to originate from the product rather than the attacker."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;REQUEST OR DIRECTIVE &quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"The request sent by an upstream component and intercepted by the intermediary application for forwarding purposes."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;CONFUSED DEPUTY PROBLEM &quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A situation where an intermediary is tricked into acting on behalf of another entity (the attacker), leading to security vulnerabilities due to misidentification of the source of requests."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;STRONG MUTUAL AUTHENTICATION MECHANISM &quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A measure that can prevent the confused deputy problem by ensuring both parties involved in a transaction are authenticated and their identities are preserved throughout all communication."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;FIREWALL &quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"A firewall is an access control system that attempts to block unauthorized access while permitting authorized communications, and it can be bypassed if the request appears to come from a trusted source."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;INITIATOR &quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The initiator of a transaction is responsible for sending requests that are subsequently forwarded by an intermediary application, maintaining its identity throughout the process."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;TARGET SYSTEM &quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The target system receives forwarded requests and treats them as if they originated from the intermediary application, leading to potential security issues."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;MUTUAL AUTHENTICATION &quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A mutual authentication mechanism is used to ensure both parties involved in a communication or transaction are verified and their identities preserved."</data>
  <data key="d2">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</node>
<node id="&quot;MODIFIED POP3 PORT NUMBER SCAN SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software used by an attacker to scan internal networks using a modified POP3 port number."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;URL-DOWNLOADING LIBRARY REDIRECT FOLLOW-UP SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software that automatically follows redirects to file:// and scp:// URLs, potentially leading to security vulnerabilities."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;UNINTENDED PROXY/INTERMEDIARY VULNERABILITY EXPLOITATION ATTACK PATTERN&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"Attack pattern where an attacker uses an unintended proxy or intermediary to gain access to a system's resources indirectly."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;ROUTING DETOUR ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"Technique used by attackers to reroute traffic through compromised systems, often as part of larger attack strategies."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;INSUFFICIENT DOCUMENTATION FOR DESIGN AND IMPLEMENTATION&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Lack of proper documentation can lead to vulnerabilities that are hard to detect or mitigate due to a lack of understanding about the product's architecture."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;EXPOSURE OF RESOURCE TO WRONG SPHERE VULNERABILITY&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Vulnerability arising when an attacker gains access to resources they should not have access to through misuse of system configurations or proxies."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;WEB-BASED MAIL PROGRAM AND WIRELESS ACCESS POINT SYSTEMS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"These are target entities that could be compromised due to vulnerabilities such as lack of proper documentation, unintended proxy behavior, etc."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;CVE-2009-0037&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A URL-downloading library vulnerability where the software automatically follows redirects to file:// and scp:// URLs, leading to potential security risks."</data>
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</node>
<node id="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A hidden danger where shared resources between trusted and untrusted agents are improperly isolated, allowing untrusted agents access to assets intended for trusted agents only."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;DMA DEVICE ENABLED TOO EARLY IN BOOT PHASE&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"The risk of enabling DMA-capable devices before security configurations are established during the boot phase, potentially leading to data extraction or privilege escalation by an attacker."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;DIRECT MEMORY ACCESS (DMA)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A feature that allows direct hardware access for data transfer between a computer and connected device without OS interaction. It can be exploited if improperly configured."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;IOMMU&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"An I/O Memory Management Unit used to orchestrate IO access, mitigating DMA attacks by controlling which devices have access to memory resources."&lt;SEP&gt;"An Input-Output Memory Management Unit (IOMMU) is used to manage and virtualize memory access, providing protection against unauthorized memory accesses."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a&lt;SEP&gt;chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;SYSTEM-ON-A-CHIP (SOC)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"A System-On-a-Chip that integrates multiple components of a computer or other electronic system onto a single integrated circuit. It may improperly isolate shared resources between trusted and untrusted agents."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;TRUSTED AGENT&quot;">
  <data key="d0">"CONCEPT"</data>
  <data key="d1">"An entity within the SoC environment which has been granted access to specific functionalities due to trustworthiness."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;UNTRUSTED AGENT&quot;">
  <data key="d0">"CONCEPT"</data>
  <data key="d1">"An entity within the SoC that may not be trusted and could potentially exploit shared resources improperly isolated from other agents."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;EARLY BOOT IPS&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Certain IP addresses or devices on a System-on-Chip that are enabled early during boot-up, before security configurations are fully established. These can pose risks if they are DMA-capable and untrusted."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;SECURITY CONFIGURATION SETTINGS&quot;">
  <data key="d0">"CONCEPT"</data>
  <data key="d1">"Settings required to establish secure parameters and restrictions for hardware components during the system initialization process."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;BASEBOARD MANAGEMENT CONTROLLER (BMC)&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A component in a computer or server which provides remote access management capabilities. Vulnerable if it allows unauthorized read/write access to its physical address space."</data>
  <data key="d2">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</node>
<node id="&quot;JTAG INTERFACE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The JTAG interface is a hardware debugging tool that provides direct access to internal registers of the chip, which can be exploited by an attacker if not properly secured."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;IMPROPER ACCESS CONTROL&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"Improper access control refers to the lack or incorrect implementation of authorization checks for accessing on-chip debug and test interfaces."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;DMA DEVICES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"DMA (Direct Memory Access) devices can write directly into main memory, potentially bypassing OS or bootloader protections if not secured properly."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;BYPASS PROTECTION MECHANISM&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A technique used by attackers to circumvent lock bits or other protective measures designed to prevent unauthorized access and modification."&lt;SEP&gt;"An attack technique that involves exploiting weaknesses in access control to gain unauthorized access to protected systems or data."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0&lt;SEP&gt;chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;READ APPLICATION DATA / READ MEMORY&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Attack techniques aimed at reading sensitive information from memory without proper authorization."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;EXECUTE UNAUTHORIZED CODE OR COMMANDS&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Techniques used by attackers to execute unauthorized code within a system, often through exploiting weaknesses in access control."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;MODIFY MEMORY / MODIFY APPLICATION DATA&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Attack techniques involving altering sensitive data stored in memory without proper authorization."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;AUTHENTICATION AND AUTHORIZATION OF DEBUG INTERFACES&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Mitigation involves ensuring that debug interfaces like JTAG are secured with robust authentication and authorization mechanisms to prevent unauthorized access."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;DYNAMIC ANALYSIS&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Tactic involving the testing of debug and test interfaces for security vulnerabilities during different stages of development."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;FUZZING DEBUG AND TEST INTERFACES&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"A tactic that involves using fuzzing techniques to verify that debug and test interfaces do not allow unauthorized access."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;ON-CHIP DEBUG INTERFACE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The on-chip debug interface provides direct access to internal registers of the chip for debugging purposes, potentially exposing sensitive information if not secured properly."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;SCAN CHAIN&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A scan chain is a serial connection of internal registers used for testing and debugging purposes through JTAG interfaces. If improperly controlled, it can lead to unauthorized access."</data>
  <data key="d2">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</node>
<node id="&quot;ADVERSARY&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An entity attempting to exploit weaknesses in system-on-chip (SoC) designs and access reserved bits to induce unwanted behavior."&lt;SEP&gt;"An entity attempting to exploit weaknesses in system-on-chip (SoC) designs, particularly focusing on accessing reserved bits for malicious purposes."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;RESERVED BITS MANIPULATION SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software used by adversaries to write into reserved bits of hardware, potentially causing security breaches or unauthorized modifications."&lt;SEP&gt;"Software utilized by attackers to exploit reserved bits within hardware design, potentially causing security breaches or unauthorized modifications."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;ENABLE UNTRUSTED IPS BEFORE SECURITY INITIALIZATION ATTACK MODE&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"An attack mode where untrusted components are enabled before necessary security measures like fabric access controls and memory protections are set up during the boot process."&lt;SEP&gt;"An operational phase where untrusted components are enabled prior to setting up necessary security measures like fabric access controls and memory protections during the boot process, leading to vulnerabilities."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;RESERVED BITS DEBUGGING TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A specific technique used by attackers to exploit reserved bits that remain functional in production hardware for unintended purposes such as debugging or enabling future features, thereby causing potential security risks."&lt;SEP&gt;"A technique used by attackers to exploit reserved bits that remain functional in production hardware for unintended purposes such as debugging or enabling future features, leading to potential security vulnerabilities."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;DISABLE RESERVED BITS MECHANISM&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Feature designed to disable writes into reserved bits during the design and implementation phases of SoC to prevent unauthorized access and misuse by attackers."&lt;SEP&gt;"Mechanism to disable or block writes into reserved bits during the design and implementation phases of SoC to prevent misuse by unauthorized entities."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;GRANULAR ACCESS CONTROL IMPLEMENTATION&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Implementation of finely-tuned access controls that restrict unauthorized agents from accessing sensitive assets, enhancing security against broad policy weaknesses."&lt;SEP&gt;"Strategy involving finely-tuned access controls that restrict unauthorized agents from accessing sensitive assets, thereby enhancing security against broad policy weaknesses."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;SYSTEM-ON-CHIP (SOC)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"A hardware platform integrating various components such as processor cores and I/O devices onto a single chip, with potential vulnerabilities in its design or initialization process."&lt;SEP&gt;"A hardware platform that integrates various components such as processor cores and I/O devices onto a single chip, with potential vulnerabilities in its design or initialization process."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;MISSING IDENTIFIER VULNERABILITY&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A situation where the SoC does not define any mechanism to uniquely identify an IP, leading to security weaknesses."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;INSUFFICIENT IDENTIFIER MECHANISM&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"An identifier that provides some defenses but falls short of protecting against all intended attacks due to inadequate coverage or implementation flaws."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;MISCONFIGURED MECHANISM VULNERABILITY&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A scenario where a mechanism is available but not implemented correctly, leaving the SoC vulnerable to attacks."</data>
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</node>
<node id="&quot;ACCESS CONTROL POLICY WEAKNESSES&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Lack of granular access controls can allow unauthorized agents to access security-sensitive assets, leading to security risks."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;HARDWARE IP PARAMETERS AND REGISTER DEFAULTS ISSUE&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Incorrectly defined defaults or parameters in hardware design lead the system into an insecure state at power reset, which is hard to fix later due to its nature of being hardcoded."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;SOFTWARE MODULE (COMMONLY SET BY BIOS/BOOTLOADER)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software module that configures necessary access-control protection after a power reset. If this software lacks proper configuration, it may expose assets to unauthorized access."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;TRUSTED FIRMWARE (BOOT FIRMWARE)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Responsible for configuring the hardware or system with default values in registers and setting up necessary access control protections upon startup."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;UNAUTHORIZED AGENTS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"Any entity that gains unauthorized access to security-sensitive assets through improperly configured access controls."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;SECURITY-SENSITIVE ASSETS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"These are the critical data and resources within a system that require strict access control due to their importance and potential impact on security."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;SENSITIVE KEY MATERIAL&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Sensitive key materials such as encryption keys, which can be compromised if improperly protected."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;DEVICE CONFIGURATION&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The settings that define how a device operates and behaves in different scenarios."</data>
  <data key="d2">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</node>
<node id="&quot;UNTRUSTED SOFTWARE COMPONENT (MODULE B)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An untrusted software component that can send write cycles to a write-once register before a trusted software component (Module A) has the opportunity, exploiting race conditions."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;TRUSTED FIRMWARE OR BOOTLOADER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software responsible for setting system configuration lock bits during the boot process and ensuring no further modifications are made to critical security settings."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;REGISTER LOCK CONTROL BITS&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A technique where hardware uses a programmable bit to enable or disable writing to protected registers; when improperly configured, can lead to conflicts between functional requirements and security needs."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;WRITE-ONCE REGISTERS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Hardware design vulnerability that allows an untrusted software component to write to a register before the trusted component, setting up a race condition where system configuration is compromised."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;PROTECTED LOCKED REGISTERS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Registers in hardware whose modification is restricted after being set by trusted firmware or bootloader during the boot process."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;FUNCTIONAL REQUIREMENT&quot;">
  <data key="d0">"CONCEPT"</data>
  <data key="d1">"The requirement for some addresses to be writable during normal operation, conflicting with security needs."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;SECURITY REQUIREMENT&quot;">
  <data key="d0">"CONCEPT"</data>
  <data key="d1">"The need for system configuration lock bits to be set and unchangeable after boot process, ensuring secure hardware operations."</data>
  <data key="d2">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</node>
<node id="&quot;SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A trusted software module that configures hardware settings after device power reset."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;ATTACKERS&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An entity attempting to exploit vulnerabilities in the system by modifying lock bits or registers."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;LOCK BIT PROTECTION FEATURE&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"A feature intended to prevent unauthorized modification of critical hardware settings, but can be bypassed due to design flaws."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;WRITE-ONCE RESTRICTIONS&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A security measure that restricts registers from being written to more than once after initialization."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;REGISTER SETTINGS &quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Hardware configurations stored in hardware register circuits, potentially vulnerable to unauthorized modification."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;DESIGN OR CODING ERRORS &quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Flaws in the implementation of lock bit protection that can allow lock bits to be modified after being set."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;TRUSTED FIRMWARE/SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A trusted firmware/software module that initializes hardware settings after device power reset."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;INTEGRATED CIRCUITS AND HARDWARE IP SOFTWARE PROGRAMMABLE CONTROLS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Components of hardware systems that can be programmed by software, including register circuits for initialization."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;WRITE-ONCE OR STICKY FIELDS (REGISTERS)&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Specific registers designed to allow writing only once after initial boot and then becoming read-only."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;PROTECTED REGISTERS/ADDRESS REGIONS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Hardware components protected by lock bits from unauthorized modifications, such as certain register settings or address regions."</data>
  <data key="d2">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</node>
<node id="&quot;ADVERSARY (ATTACKER)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An adversary may exploit weaknesses in hardware lock bit protection mechanisms to modify protected system registers or controls."&lt;SEP&gt;"An adversary who can exploit weaknesses in cryptographic primitives, such as DES, to launch practical brute-force attacks on systems using these primitives."&lt;SEP&gt;"An entity capable of exploiting cryptographic weaknesses, such as brute-forcing DES encryption due to its short key length."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c&lt;SEP&gt;chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SOFTWARE (EXPLOITING LOCK BIT WEAKNESSES)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Malicious software can be used by an attacker to bypass security measures like the lock bit and manipulate system configuration."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;MODIFICATION OF SYSTEM CONFIGURATION REGISTERS/CONTROLS VIA SOFTWARE EXPLOIT&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"This technique involves using software vulnerabilities to modify protected hardware configurations after the initial lockdown phase."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;DESIGN INCONSISTENCY IN LOCK BIT PROTECTION MECHANISM&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Inadequate lock bit protection mechanisms may not effectively prevent modifications, leaving system configurations vulnerable."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SYSTEM CONFIGURATION PROTECTED BY LOCK BITS (TARGET OBJECT)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The hardware or system configuration protected by lock bits is the intended target of attacks that aim to modify these settings after initial lockdown."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;MALICIOUS SOFTWARE EXPLOITING LOCK BIT WEAKNESSES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software used by attackers to bypass security measures like the lock bit and manipulate system configuration."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;MODIFICATION OF SYSTEM CONFIGURATION REGISTERS/CONTROLS VIA MALWARE EXPLOIT&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"This technique involves using software vulnerabilities to modify protected hardware configurations after the initial lockdown phase."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;LOCK BIT PROTECTION MECHANISM DESIGN FLAW (HIDDEN DANGERS)&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Inadequate design of lock bit protection mechanisms may not effectively prevent modifications, leaving system configurations vulnerable."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;SECURITY AUDIT PROCESS FOR LOCK BIT PROTECTION MECHANISMS&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A process designed to review and test the behavior of lock bit protection mechanisms across supported power state transitions."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;POWER STATE TRANSITIONS WEAKNESSES (HIDDEN DANGERS)&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"During power state transitions, there might be opportunities for attackers to manipulate the system configuration due to temporary vulnerabilities."</data>
  <data key="d2">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</node>
<node id="&quot;HARDWARE PRODUCT WITH DEBUG FEATURES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A software/hardware product that supports debug features, allowing attackers to bypass security lock bits if these modes are not properly secured or removed."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attack technique where an attacker exploits hardware design flaws to extract sensitive information from registers when the user of the hardware block changes."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;CLEARING MECHANISMS FAILURE&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability that arises due to improper implementation or use of clearing mechanisms for hardware registers, leading to data remanence issues and potential extraction of sensitive data."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;CRYPTOGRAPHIC PRIMITIVE WITH RISKY IMPLEMENTATION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"This refers to a situation where the cryptographic primitive used in a product is non-standard, unproven, or disallowed/non-compliant, potentially weakening the entire system's security."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;SOFTWARE WITH DEBUG FEATURES&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A type of software/hardware product that supports debug features or modes allowing access to configuration information under specific conditions, which can be exploited if not properly secured."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A hardware design flaw where registers do not clear sensitive data when transitioning users or under specific conditions, leading to potential extraction of information by unauthorized entities."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;RISKY CRYPTOGRAPHIC PRIMITIVE IMPLEMENTATION&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A cryptographic implementation that uses non-standard, unproven, or disallowed/non-compliant primitives, leading to potential weakening of the entire system's security."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;REGISTER CLEARING MECHANISMS&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"Security measures that clear sensitive data stored in hardware registers when the user changes, either due to a change in operating mode or after detecting physical attacks on the product."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;SECURE DEBUGGING MODE&quot;">
  <data key="d0">"MITIGATION"</data>
  <data key="d1">"A secure method of debugging that ensures any bypass modes are authenticated and protected, preventing unauthorized access to sensitive information during development or maintenance phases."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;SYSTEM CONFIGURATION LOCK PROTECTION&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Security measures designed to protect system configurations (such as memory protection units) from being modified by unauthorized entities through lock bits and other protective mechanisms."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;HARDWARE IP USER SWITCHING&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"A strategy where an attacker exploits the change in users of a hardware block to gain access to sensitive information stored in registers during transitions or when debug features are active."</data>
  <data key="d2">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</node>
<node id="&quot;DES (DATA ENCRYPTION STANDARD)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A cryptographic primitive used for encryption that has been weakened due to its short key length of 56 bits. It is now vulnerable to brute force attacks and thus considered insecure."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;TLS (TRANSPORT LAYER SECURITY)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"A system or protocol, such as TLS using DES, which relies on cryptographic primitives for security but becomes vulnerable when those primitives are weakened or broken."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;BRUTE FORCE ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attack technique that involves systematically checking all possible keys until the correct key is found. It can be used to defeat encryption algorithms with shorter key lengths like DES."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;REVIEW RECOMMENDATIONS (MITIGATION)&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A mitigation measure involving review and compliance with strong cryptographic recommendations from trusted sources to prevent usage of weak or custom crypto primitives."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;CRYPTOGRAPHIC PRIMITIVE (GENERAL)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A fundamental building block used in cryptography for security purposes, which can become vulnerable if flaws are discovered or mitigated improperly."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;WEAKNESS IN CRYPTOGRAPHY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"The inherent flaw that exists within cryptographic primitives, such as DES's key length being too short, making it susceptible to brute force attacks."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;SECURITY COMPLIANCE (MITIGATION)&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Ensuring adherence to established security standards and guidelines, like FIPS 140-3, to maintain the integrity of cryptographic implementations."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;HARDWARE IMPLEMENTATION (TARGET OBJECT)&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The physical hardware that implements cryptographic algorithms, particularly susceptible if weak primitives are used due to the non-easily patchable nature of hardware."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;CUSTOM OR PRIVATE CRYPTOGRAPHIC ALGORITHMS (MITIGATION)&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A security measure indicating the avoidance and prohibition of developing custom crypto algorithms as they are prone to well-known vulnerabilities unless thoroughly vetted."</data>
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</node>
<node id="&quot;CRYPTOGRAPHIC LIBRARY/FRAMEWORKS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Industry-standard libraries or frameworks that provide robust implementations of cryptographic mechanisms, preventing errors during implementation."</data>
  <data key="d2">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</node>
<node id="&quot;CUSTOM/PRIVATE CRYPTOGRAPHIC ALGORITHMS&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Development of custom algorithms can expose the system to well-understood attacks by cryptographers."</data>
  <data key="d2">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</node>
<node id="&quot;MD5, SHA1, DES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Outdated cryptographic algorithms that have been broken or are considered weak due to advances in computational power and cryptanalysis."</data>
  <data key="d2">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</node>
<node id="&quot;CRYPTOGRAPHIC AGILITY&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"The ability of a system design to replace one cryptographic primitive with another, enhancing security as stronger algorithms become available."</data>
  <data key="d2">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</node>
<node id="&quot;RANDOM NUMBER GENERATOR (RNG)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A critical component in cryptography that generates unpredictable sequences of bits used for encryption keys and other purposes."</data>
  <data key="d2">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</node>
<node id="&quot;KEYS MANAGEMENT&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Effective management practices for cryptographic keys to prevent unauthorized access or guessing, ensuring the strength of algorithms remains relevant."</data>
  <data key="d2">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</node>
<node id="&quot;CHIP IMPLEMENTING BLUETOOTH WITH LOW-ENTROPY PRNG&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A chip using Bluetooth that relies on a low-entropy pseudo-random number generator (PRNG) instead of a hardware random number generator, making it susceptible to spoofing attacks."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;SPOOFING ATTACK&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attack technique where an attacker masquerades as another entity by forging data or mimicking behavior, taking advantage of vulnerabilities in the chip's PRNG implementation."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;CVE-2020-6616&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability that allows for spoofing attacks due to a low-entropy pseudo-random number generator (PRNG) being used instead of a hardware random number generator in the Bluetooth chip."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;INSUFFICIENT ENTROPY IN DRBG&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique exploiting insufficient entropy in a Deterministic Random Bit Generator (DRBG), leading to predictable outputs and enabling private key discovery attacks."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;DUAL_EC_DRBG IMPLEMENTATION VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability in the Dual_EC_DRBG implementation that simplifies plaintext recovery due to incorrect handling of certain byte requests, making it easier for attackers to compromise security systems."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;POINT Q CONSTANTS SIMPLIFY DECRYPTION&quot;">
  <data key="d0">"ATTACK TECHNIQUE"</data>
  <data key="d1">"An attack technique where specific point Q constants recommended by cryptographic standards can be exploited to simplify decryption processes and weaken the overall system security."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;HARDWARE RNG REQUIREMENT&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A mitigation measure recommending the use of hardware-based true random number generators (TRNGs) to enhance randomness and prevent predictable patterns in PRNG outputs."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;ATTACKER EXPLOITING PRNG VULNERABILITY&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An attacker who exploits vulnerabilities in pseudo-random number generators (PRNGs) to perform spoofing attacks on devices using insecure random number generation methods."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;MT_RAND FUNCTION USAGE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The PHP framework uses the mt_rand() function, which is a Marsenne Twister algorithm for generating tokens. This can be exploited due to insufficient entropy and predictability issues."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;CVE-2019-1715&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability in the security product that has insufficient entropy in its DRBG (Deterministic Random Bit Generator), leading to collisions and private key discovery attacks."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;CVE-2014-4192&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability where the Dual_EC_DRBG implementation does not handle certain byte requests correctly, simplifying plaintext recovery for attackers."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;CVE-2007-6755&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability related to constants in the recommendation for Dual_EC_DRBG that can simplify decryption processes and weaken security systems."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;CRYPTOGRAPHY TERMINOLOGY VARIANCE&quot;">
  <data key="d0">"CONCEPT"</data>
  <data key="d1">"The wide variation in cryptography terminology from informal, colloquial use to mathematically-defined precision, depending on stakeholder roles such as developers or cryptologists."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;TRUE RANDOM NUMBER GENERATOR (TRNG)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A hardware-based random number generator that provides unpredictable, unbiased, and independent random numbers based on physical phenomena like electrical noise."</data>
  <data key="d2">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</node>
<node id="&quot;CHICKEN BITS IMPLEMENTATION SOFTWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software or feature within a system designed to implement chicken bits, which can be exploited by attackers."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;UNAUTHORIZED ACCESS ATTACK MODE&quot;">
  <data key="d0">"ATTACK MODE"</data>
  <data key="d1">"An attack mode that involves exploiting undocumented features or interfaces for unauthorized access to systems during debug operations."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;SENSITIVE INFORMATION DEBUGGING EXPLOIT TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Technique used by an attacker to exploit vulnerabilities in debugging interfaces, allowing unauthorized read or modify memory actions on security-sensitive information stored in fuses."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;DISABLE DEBUG ACCESS MITIGATION MEASURES&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Security measure that disables access to sensitive information during debug operations to prevent unauthorized access and ensure confidentiality and integrity."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;GAIN UNINTENDED ACCESS TACTICS&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Tactic employed by attackers to gain unintended access to internal assets through misconfigured debug interfaces or inappropriate debug states, leading to security breaches."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;SENSITIVE NON-VOLATILE INFORMATION NOT PROTECTED DURING DEBUG VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability wherein security-sensitive information stored in fuses is not restricted during debug operations, allowing potential unauthorized access and modification of sensitive data."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;DEBUG ACCESS LEVEL MISCONFIGURATION HIDDEN DANGER&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"The risk that internal assets are assigned incorrect debug access levels, leading to unintended exposure to untrusted agents capable of exploiting this misconfiguration."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;SECURITY-SENSITIVE INFORMATION STORED IN FUSES&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Sensitive data such as encryption keys and root keys stored in non-volatile memory locations like fuses, which can be accessed during debug operations if not properly secured."</data>
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</node>
<node id="&quot;FAULTY FSM DESIGN&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"A hidden danger that allows an attacker to put the system into an undefined state, causing DoS or gaining additional privileges due to improper finite state machines in hardware logic."&lt;SEP&gt;"A security flaw allowing an attacker to cause a denial of service or gain privileges by exploiting undefined states in finite state machines."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;IMPROPER WRITE HANDLING&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"An issue where attackers can programmatically cause storage unreliability within a shorter time than expected due to improper wear leveling operations."&lt;SEP&gt;"Improper write handling in limited-write non-volatile memories can lead attackers to cause storage unreliability within a shorter time than expected by uniformly wearing out cells."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;JTAG ACCESS WEAKNESS&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A security flaw that allows full system access and the ability to bypass secure-boot processes before ROM code execution."&lt;SEP&gt;"Before the ROM code is executed, JTAG access allows full system access and bypassing secure-boot processes, exposing hidden dangers in hardware security implementation."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;WEAR LEVELING TECHNIQUE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A technique used to prevent individual physical blocks from prematurely failing due to high concentration of writes by mapping logical block writes to different physical blocks."&lt;SEP&gt;"Technique used in non-volatile memory devices to prevent physical block premature failure by uniformly distributing write operations across blocks."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;NAND FLASH&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Non-volatile memory type that, if improperly handled through wear leveling techniques, can be exploited by attackers to cause storage unreliability."&lt;SEP&gt;"Non-volatile storage type that can be exploited through improper wear leveling causing unreliability and denial of service conditions."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;EEPROM&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Another non-volatile memory type susceptible to improper write handling leading to premature failure and security risks."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;DENIAL OF SERVICE&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"The attacker's goal is to disrupt services or make resources unavailable through exploiting hardware flaws like faulty FSMs or improper wear leveling."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;GAIN PRIVILEGES&quot;">
  <data key="d0">"TACTIC"</data>
  <data key="d1">"An objective where the attacker aims to elevate their privileges within a system by exploiting vulnerabilities in hardware logic and non-volatile memory management."</data>
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
</node>
<node id="&quot;VOLTAGE GLITCH ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A method where an attacker manipulates the device's power supply to induce unexpected behavior in hardware and software for malicious purposes."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;CLOCK GLITCH ATTACK TECHNIQUE&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attack technique involving manipulation of clock signals to disrupt normal operations, causing security systems to malfunction or behave unpredictably."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;SECURE BOOT PROCESS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A secure boot process ensures that the system starts only from a trusted source and verifies the integrity of each component in the boot sequence through cryptographic checks."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;CHAIN OF TRUST&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Establishes an initial root of trust to verify subsequent stages during startup, preventing unauthorized or compromised components from gaining control over secure operations."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;DEBUG INTERFACE SECURITY LOGIC&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Security mechanisms implemented in hardware and firmware to protect against exploitation through debug interfaces, ensuring that debugging cannot be used as a means to compromise system security."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;WEAR LEVELING ALGORITHM&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A wear leveling algorithm ensures even distribution of write operations across storage media to prevent premature wear and tear, enhancing longevity and data integrity."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;POWER MANAGEMENT HARDWARE&quot;">
  <data key="d0">"TECHNOLOGY"</data>
  <data key="d1">"Hardware designed to manage power supply voltages and frequencies in a device to ensure stable operation under varying conditions."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;CLOCK/COUNTER HARDWARE&quot;">
  <data key="d0">"TECHNOLOGY"</data>
  <data key="d1">"Hardware responsible for generating precise timing signals critical for the proper functioning of digital circuits within the system."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;SENSOR HARDWARE&quot;">
  <data key="d0">"TECHNOLOGY"</data>
  <data key="d1">"Sensors and related hardware designed to detect physical parameters such as voltage levels, temperature, etc., crucial for monitoring and protecting sensitive information or software."</data>
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</node>
<node id="&quot;CHIPWHISPERER&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"ChipWhisperer is a specialized hardware tool used during the implementation phase for checking if platforms are susceptible to voltage and clock glitching attacks."</data>
  <data key="d2">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</node>
<node id="&quot;PLUNDERVOLT AND CLKSCREW ATTACKS&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Plundervolt and CLKSCREW are demonstrated attack methods targeting Dynamic Voltage and Frequency Scaling (DVFS) mechanisms in SoCs, indicating the ease of such attacks if power management interfaces are accessible from unprivileged software."</data>
  <data key="d2">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</node>
<node id="&quot;DYNAMIC VOLTAGE AND FREQUENCY SCALING (DVFS)&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"DVFS is a built-in feature in many SoCs allowing control over voltage and clock via software. It can be exploited by attackers, highlighting the need for robust security measures during design phases."</data>
  <data key="d2">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</node>
<node id="&quot;ANTI-GLITCH PROTECTIONS&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Mitigation against glitch attacks includes circuit-level defenses such as Tunable Replica Circuits (TRCs) or special flip-flops and redundancy in security-sensitive code to detect and prevent glitches from compromising systems."</data>
  <data key="d2">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</node>
<node id="&quot;CWE-1256&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability related to the availability of power management interfaces from unprivileged software, making it easier for attackers to launch attacks such as glitching."</data>
  <data key="d2">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</node>
<node id="&quot;SECURE BOOT AND EFUSES&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"The secure boot process and protected eFuses can be targets in physical attacks aimed at bypassing security measures like anti-glitch protections."</data>
  <data key="d2">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</node>
<node id="&quot;PRODUCT'S ARCHITECTURE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The architecture mirrors regions but does not ensure consistent synchronization of mirrored data, leading to potential vulnerabilities."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;MIRRORED REGIONS WITH DIFFERENT VALUES&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"This condition results in the exposure of sensitive information or system compromise due to inconsistencies between original and mirrored copies."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;SHADOW COPIES&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Local copies or shadow copies that may get out of sync with the original resource, creating an exploitable condition for attackers."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;CACHE MEMORY&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"A common example where a local copy of data is kept in high-speed cache memory to improve performance but requires consistent synchronization with the original copy."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;MEMORY MANAGEMENT UNIT (MMU)&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"An MMU may duplicate its functionality across shadow copies, creating scenarios for inconsistency and potential exploitation by attackers."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;RACING CONDITION BETWEEN ATTACKER AND UPDATE PROCESS&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Attackers can exploit the small time window when original values change but mirrored copies are still outdated to gain unauthorized access."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;SPOOFED UPDATE REQUEST&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attacker might send a spoofed update request to shadow copies, making them adopt attacker-friendly values without updating the original copy."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;SYSTEM OF REVERTING ORIGINAL VALUES&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"A system where an original copy reverts if it does not receive confirmation from all shadow copies about successful updates can be exploited by intercepting completion messages."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;DISTRIBUTED SYSTEMS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Systems where each component operates independently but needs to maintain a consistent view of shared state."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;INDEPENDENT COMPONENTS&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Components in distributed systems that store and update their own local copies of key data, such as state or cache."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;CONCURRENCY ISSUES&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Problems arising from multiple processes trying to access shared resources simultaneously without proper synchronization."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;CONSISTENCY MECHANISMS&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Techniques and protocols designed to ensure that all local copies of data remain consistent with each other in distributed systems."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;SYSTEM-OF-SYSTEMS ARCHITECTURE&quot;">
  <data key="d0">"TARGET OBJECT"</data>
  <data key="d1">"Architecture where multiple independent but interconnected systems work together as a larger system, requiring careful management of shared state and resources."</data>
  <data key="d2">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</node>
<node id="&quot;SHADOW COPY UPDATE PROCESS&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"This process involves multiple copies of the same value that might change asynchronously. It lacks instantaneous and atomic update capabilities, making it vulnerable to out-of-sync scenarios."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;CPU HARDWARE NOT CONFIGURED PROPERLY&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"The CPU hardware's lack of configuration for write-execute exclusivity allows attackers to manipulate memory regions, potentially executing unauthorized code."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;INCORRECT SELECTION OF FUSE VALUES&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"Improper logic selection used by the system to determine security state through fuse values can lead to an insecure system when manipulated by attackers."&lt;SEP&gt;"The incorrect logic selection for determining the system's security state through fuse values."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;ATTACKER (INTERCEPTING SHADOW COPY COMPLETION MESSAGE)&quot;">
  <data key="d0">"ATTACKER"</data>
  <data key="d1">"An entity that exploits vulnerabilities in software systems to intercept communications, such as shadow copy completion messages."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;SHADOW COPY UPDATE MECHANISM&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"Software responsible for managing updates and synchronization between original and shadow copies."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;INTERCEPTING SHADOW COPY COMPLETION MESSAGES&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Technique used by attackers to intercept completion messages of shadow copy updates, leading the system into an inconsistent state."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;EXPLOITING ASYNCHRONOUS UPDATE VULNERABILITIES&quot;">
  <data key="d0">"TACTICS"</data>
  <data key="d1">"Tactics employed by attackers to exploit vulnerabilities that occur during asynchronous update processes."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;INCONSISTENT SHADOW COPY UPDATES&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"Vulnerability in systems due to the inability to ensure atomicity and consistency in shadow copy updates."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;ORIGINAL AND SHADOW COPIES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"Entities that are targeted by attackers, specifically original copies and their corresponding shadow copies."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;CPU HARDWARE CONFIGURATION&quot;">
  <data key="d0">"HIDDEN DANGERS"</data>
  <data key="d1">"The configuration of CPU hardware to support exclusivity of write and execute operations, which can be misconfigured or lack proper implementation."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;CPU HARDWARE&quot;">
  <data key="d0">"SOFTWARE"</data>
  <data key="d1">"The hardware configuration and management in CPUs that affects memory operations and security."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;EXPLOITING NON-EXCLUSIVITY OF WRITE AND EXECUTE&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Technique used by attackers to exploit the lack of write-execute exclusivity in CPU configurations."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;IMPLEMENTING HARDWARE SUPPORT FOR EXCLUSIVITY&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Mitigations include implementing hardware support for segregating memory into regions that can be marked as code or data."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;MANIPULATING SECURITY CONFIGURATION VIA FUSES&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"Technique used by attackers to manipulate the security state of a system through fuse values."</data>
  <data key="d2">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</node>
<node id="&quot;INCORRECT COMPARISON LOGIC GRANULARITY&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"This technique involves exploiting the granularity of comparison logic, where an attacker can identify when a comparison fails at specific points, allowing them to guess correct passwords or responses."</data>
  <data key="d2">chunk-3765fb59247c8757d841cb1e549550cf</data>
</node>
<node id="&quot;BLOWN FUSES EXPLOITATION&quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"An attacker exploits the negative logic used in fuse-based security systems by blowing fuses to drive the system into an insecure state."</data>
  <data key="d2">chunk-3765fb59247c8757d841cb1e549550cf</data>
</node>
<node id="&quot;TIMIMG ATTACK &quot;">
  <data key="d0">"ATTACK TECHNIQUES"</data>
  <data key="d1">"A timing attack involves exploiting differences in execution time of operations to infer information, such as passwords or encryption keys."</data>
  <data key="d2">chunk-3765fb59247c8757d841cb1e549550cf</data>
</node>
<node id="&quot;CONSTANT TIME COMPARISON LOGIC IMPLEMENTATION&quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Ensuring that comparison logic is implemented in one operation rather than step-by-step can prevent attackers from inferring information through timing discrepancies."</data>
  <data key="d2">chunk-3765fb59247c8757d841cb1e549550cf</data>
</node>
<node id="&quot;SECURE SYSTEM DESIGN AGAINST BLOWN FUSES EXPLOITATION &quot;">
  <data key="d0">"MITIGATION MEASURES"</data>
  <data key="d1">"Designing system logic to handle blown fuses without compromising security, ensuring the product remains secure even when fuses are altered."</data>
  <data key="d2">chunk-3765fb59247c8757d841cb1e549550cf</data>
</node>
<node id="&quot;NEGATIVE LOGIC VULNERABILITY&quot;">
  <data key="d0">"VULNERABILITY"</data>
  <data key="d1">"A vulnerability arises when the system's security state is determined using negative logic, allowing an attacker to drive the system into an insecure state."</data>
  <data key="d2">chunk-3765fb59247c8757d841cb1e549550cf</data>
</node>
<node id="&quot;SYSTEM WITH NEGATIVE LOGIC FUSES&quot;">
  <data key="d0">"TARGET ENTITY"</data>
  <data key="d1">"This system uses fuses with negative logic, making it susceptible to an attack where blown fuses can be exploited to put the system in an insecure state."</data>
  <data key="d2">chunk-3765fb59247c8757d841cb1e549550cf</data>
</node>
<node id="&quot;FTP SERVER SOFTWARE&quot;">
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
  <data key="d1">"The FTP Server Software allows Brute Force Attack to be conducted due to different responses for non-existent and existing usernames."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;RESOURCE REUSE VULNERABILITY&quot;">
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
  <data key="d1">"The Resource Reuse Vulnerability is an underlying issue that can lead to Sensitive Information being left behind when resources are reused."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;SENSITIVE INFORMATION IN RESOURCE NOT REMOVED BEFORE REUSE &quot;">
  <data key="d2">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
  <data key="d1">"The Resource Reuse Vulnerability is an underlying issue that can lead to Sensitive Information being left behind when resources are reused."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;CVE-2010-1637&quot;">
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
  <data key="d1">"The vulnerability (CVE-2010-1637) affects the web-based mail program by allowing internal network scanning."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;WEB-BASED MAIL PROGRAM&quot;">
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
  <data key="d1">"The vulnerability (CVE-2010-1637) affects the web-based mail program by allowing internal network scanning."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;URL-DOWNLOADING LIBRARY&quot;">
  <data key="d2">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
  <data key="d1">"The vulnerability (CVE-2009-0037) affects the URL-downloading library by making it follow redirects to file:// and scp:// URLs, leading to potential security issues."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;INSUFFICIENT GRANULARITY OF ACCESS CONTROL&quot;">
  <data key="d2">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
  <data key="d1">"This tactic seeks to address broad access control weaknesses, thereby reducing risks associated with unauthorized access to critical assets."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;CUSTOM OR PRIVATE ALGORITHMS (MITIGATION)&quot;">
  <data key="d2">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
  <data key="d1">"Avoidance of custom or private cryptographic algorithms helps prevent the deployment of systems with inherent weaknesses that can be exploited."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;INTERNAL ASSET EXPOSED TO UNSAFE DEBUG ACCESS LEVEL OR STATE ATTACK TECHNIQUE&quot;">
  <data key="d2">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
  <data key="d1">"A hidden danger arises from misconfigurations of debug access levels that can be exploited by attackers using specific attack techniques."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;DENIAL OF SERVICE (TACTIC)&quot;">
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
  <data key="d1">"A faulty finite state machine design enables denial of service conditions through system instability or unexpected states."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;GAIN PRIVILEGES (TACTIC)&quot;">
  <data key="d2">chunk-a486a4935548559d90f50ff1c1104c21</data>
  <data key="d1">"Exploiting faulty finite state machines enables system instability leading to privilege escalation opportunities for attackers."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<node id="&quot;STORAGE HARDWARE&quot;">
  <data key="d2">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
  <data key="d1">"The wear leveling algorithm is implemented in storage hardware to ensure even distribution of write operations and enhance data integrity and longevity."</data>
  <data key="d0">"UNKNOWN"</data>
</node>
<edge source="&quot;ATTACKER&quot;" target="&quot;SOFTWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers exploit vulnerabilities in the software to gain unauthorized access and information."</data>
  <data key="d5">"exploitation, vulnerability assessment"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CVE-2020-8695&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Attackers exploit this vulnerability in Intel processors' RAPL interface to gather security-relevant information through observable discrepancies."</data>
  <data key="d5">"vulnerability exploitation, side-channel attack"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CVE-2019-14353&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers exploit this vulnerability in a crypto hardware wallet by analyzing power consumption patterns to deduce secrets such as PIN numbers and passwords."</data>
  <data key="d5">"power analysis, information extraction"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CVE-2019-10071&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attackers exploit this vulnerability in a Java framework's HMAC signature comparison method for timing discrepancies that reveal sensitive data."</data>
  <data key="d5">"timing attack, security breach"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;ATTACK TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attacker uses specific attack techniques to exploit uncleared sensitive information in resources like memory after release."</data>
  <data key="d5">"exploitation, data access"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;OPERATING SYSTEM&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An attacker can exploit weaknesses in how an operating system manages resources like memory, particularly when data is not cleared upon deallocation."</data>
  <data key="d5">"exploitation opportunity, resource mismanagement"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;SOFTWARE WITH INCORRECT DEFAULT PERMISSIONS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attacker exploits incorrect default file permissions set by software during installation to gain unauthorized access or modify files."</data>
  <data key="d5">"exploitation, vulnerability abuse"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;PRODUCT (INTERMEDIARY APPLICATION)&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The attacker sends a request through the intermediary application to bypass access controls or hide the source of malicious requests."</data>
  <data key="d5">"request forwarding, security evasion"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;MODIFIED POP3 PORT NUMBER SCAN SOFTWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attacker uses the Modified POP3 Port Number scan software to perform unauthorized network scans."</data>
  <data key="d5">"exploitation, vulnerability scanning"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;URL-DOWNLOADING LIBRARY REDIRECT FOLLOW-UP SOFTWARE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attacker exploits the URL-downloading library's automatic redirect feature to gain unauthorized access to systems."</data>
  <data key="d5">"vulnerability exploitation, software misconfiguration"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attacker exploits the improper isolation between trusted and untrusted agents to gain unauthorized access."</data>
  <data key="d5">"exploitation, security breach"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;UNTRUSTED AGENT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attacker can act as an untrusted agent within the SoC environment, exploiting improperly isolated shared resources."</data>
  <data key="d5">"exploitation, security threat"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;IMPROPER ACCESS CONTROL&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"An attacker exploits improper access control mechanisms in on-chip debug and test interfaces."</data>
  <data key="d5">"exploitation, security flaw"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACK&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker can exploit improper zeroization of hardware registers to gain unauthorized access and extract sensitive information."</data>
  <data key="d5">"exploit vulnerability, data extraction"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The attacker exploits improper zeroization vulnerabilities to gain unauthorized access and extract sensitive data."</data>
  <data key="d5">"vulnerability exploitation, data extraction"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CUSTOM/PRIVATE CRYPTOGRAPHIC ALGORITHMS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attacker exploits custom/private cryptographic algorithms due to their likely exposure to well-understood attacks."</data>
  <data key="d5">"exploitation, vulnerability discovery"</data>
  <data key="d6">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;MD5, SHA1, DES&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Outdated or non-compliant cryptographic algorithms like MD5 and SHA1 are exploited by attackers for breaking systems quickly."</data>
  <data key="d5">"vulnerability exploitation, outdated security measures"</data>
  <data key="d6">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CRYPTOGRAPHIC LIBRARY/FRAMEWORKS&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Using industry-approved techniques incorrectly can lead to vulnerabilities that attackers might exploit."</data>
  <data key="d5">"implementation flaws, security misconfiguration"</data>
  <data key="d6">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;RANDOM NUMBER GENERATOR (RNG)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Weaknesses in random number generation can lead to predictable patterns that attackers exploit for breaking encryption keys."</data>
  <data key="d5">"predictable sequences, vulnerability discovery"</data>
  <data key="d6">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CHICKEN BITS IMPLEMENTATION SOFTWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"An attacker may exploit the chicken bits implementation software to gain unauthorized access to systems by bypassing security mechanisms."</data>
  <data key="d5">"exploitation, vulnerability discovery"</data>
  <data key="d6">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;FAULTY FSM DESIGN&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An attacker exploits a faulty finite state machine design to cause instability or gain privileges."</data>
  <data key="d5">"exploit vulnerability, security breach"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;IMPROPER WRITE HANDLING&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"An attacker can exploit improperly handled write operations in non-volatile memories leading to storage unreliability."</data>
  <data key="d5">"storage exploitation, security compromise"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;VOLTAGE GLITCH ATTACK TECHNIQUE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An attacker utilizes voltage glitch attacks to manipulate device operation for malicious intent."</data>
  <data key="d5">"attack technique utilization"</data>
  <data key="d6">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CLOCK GLITCH ATTACK TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The attacker employs clock glitching techniques to disrupt system integrity and gain unauthorized access."</data>
  <data key="d5">"malicious disruption"</data>
  <data key="d6">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CHIPWHISPERER&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker uses ChipWhisperer to conduct voltage and clock glitching attacks on hardware platforms."</data>
  <data key="d5">"Use, Exploit"</data>
  <data key="d6">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;MIRRORED REGIONS WITH DIFFERENT VALUES&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The attacker exploits the condition of mirrored regions having different values to cause unauthorized exposure or system compromise."</data>
  <data key="d5">"exploitation, vulnerability exploitation"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CONCURRENCY ISSUES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers exploit concurrency issues to cause inconsistencies in mirrored regions, leading to unauthorized access or data manipulation."</data>
  <data key="d5">"exploitation of timing flaws, security breach"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;SHADOW COPY UPDATE PROCESS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attacker exploits vulnerabilities in the shadow copy update process, causing out-of-sync states and potential data inconsistencies."</data>
  <data key="d5">"exploitation of vulnerability, asynchronous updates"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;CPU HARDWARE NOT CONFIGURED PROPERLY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker can inject malicious code into memory regions marked for data, taking advantage of the lack of write-execute exclusivity in CPU configurations."</data>
  <data key="d5">"hardware exploitation, memory manipulation"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;BLOWN FUSES EXPLOITATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An attacker uses the blown fuse technique to exploit negative logic in a system's security state determination."</data>
  <data key="d5">"exploit, vulnerability"</data>
  <data key="d6">chunk-3765fb59247c8757d841cb1e549550cf</data>
</edge>
<edge source="&quot;ATTACKER&quot;" target="&quot;NEGATIVE LOGIC VULNERABILITY&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An attacker exploits the vulnerability of systems using negative logic by blowing fuses to create an insecure state."</data>
  <data key="d5">"exploit, security flaw"</data>
  <data key="d6">chunk-3765fb59247c8757d841cb1e549550cf</data>
</edge>
<edge source="&quot;SOFTWARE&quot;" target="&quot;ATTACK TECHNIQUE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Observable discrepancies in software can be exploited using side-channel attacks."</data>
  <data key="d5">"vulnerability exploitation, technical detail analysis"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;SOFTWARE&quot;" target="&quot;HIDDEN DANGERS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Software weaknesses and improper handling of resource releases create hidden dangers that can be exploited by attackers."</data>
  <data key="d5">"vulnerability, exploitation risk"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;ATTACK TECHNIQUE&quot;" target="&quot;MITIGATION MEASURES&quot;">
  <data key="d3">10.0</data>
  <data key="d4">"Mitigations aim to prevent the successful execution of attack techniques such as side-channel attacks."</data>
  <data key="d5">"prevention strategy, security measure application"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;ATTACK TECHNIQUE&quot;" target="&quot;MEMORY MANAGEMENT VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Exploiting the weakness of uncleared memory after deallocation involves specific techniques to detect and read residual sensitive information."</data>
  <data key="d5">"pattern recognition, data exposure exploitation"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;ATTACK TECHNIQUE&quot;" target="&quot;NETWORK DEVICE VULNERABILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Techniques exist to exploit vulnerabilities in network devices where frames are not padded with null bytes or information is not cleared from DHCP packets."</data>
  <data key="d5">"network security breach, data exposure through transmission"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;MITIGATION MEASURES&quot;" target="&quot;CVE-2020-8695&quot;">
  <data key="d3">10.0</data>
  <data key="d4">"Mitigations involve securing the RAPL interface to prevent unauthorized access through observable discrepancies."</data>
  <data key="d5">"security reinforcement, vulnerability mitigation"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;MITIGATION MEASURES&quot;" target="&quot;CVE-2019-14353&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Mitigations include securing crypto hardware wallets to ensure power consumption does not reveal secrets."</data>
  <data key="d5">"hardware security, data protection"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;MITIGATION MEASURES&quot;" target="&quot;HIDDEN DANGERS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Effective mitigation measures address hidden dangers by ensuring that resources are properly cleared before reuse."</data>
  <data key="d5">"risk reduction, security enhancement"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;TACTICS&quot;" target="&quot;HIDDEN DANGERS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers use tactics based on hidden dangers like observable discrepancies to refine their methods."</data>
  <data key="d5">"tactical refinement, risk exploitation"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;TACTICS&quot;" target="&quot;CVE-2019-10071&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Attackers use tactical refinement based on timing discrepancies to optimize attacks against the Java framework’s HMAC signatures."</data>
  <data key="d5">"tactical optimization, timing attack"</data>
  <data key="d6">chunk-60f96cbfcdc863307fe7ed2450e4fab0</data>
</edge>
<edge source="&quot;TACTICS&quot;" target="&quot;ATTACK PATTERN&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attack pattern aligns with the attacker's tactics of exploiting state transitions and resource releases to gain unauthorized access."</data>
  <data key="d5">"pattern recognition, opportunity exploitation"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;HIDDEN DANGERS&quot;" target="&quot;FILE SYSTEM VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Uncleared disk space after file deletion or reallocation poses a hidden danger as residual data can be accessed by unauthorized entities."</data>
  <data key="d5">"data leakage risk, insecure resource handling"</data>
  <data key="d6">chunk-97f0fe12f43fe0952f114af5f3d4a0a1</data>
</edge>
<edge source="&quot;HIDDEN DANGERS&quot;" target="&quot;SHADOW COPY UPDATE PROCESS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The shadow copy update process is vulnerable to out-of-sync issues and can be exploited by hidden dangers like CPU hardware misconfigurations or incorrect fuse values."</data>
  <data key="d5">"vulnerability, security breach potential"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;REMOTE ATTACKER&quot;" target="&quot;BULLETIN BOARD SOFTWARE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The remote attacker exploits the Bulletin Board Software's error messages related to user existence to conduct brute force attacks."</data>
  <data key="d5">"information leakage, vulnerability exploitation"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;REMOTE ATTACKER&quot;" target="&quot;BRUTE FORCE ATTACK&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The Remote Attacker uses Brute Force Attack methods enabled by different error message responses from the software or system."</data>
  <data key="d5">"password guessing, resource exhaustion"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;REMOTE ATTACKER&quot;" target="&quot;PASSWORD GUESSING ATTACK &quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The Remote Attacker uses Password Guessing Attack technique enabled by error message responses from the FTP server or similar software."</data>
  <data key="d5">"password security breach, user compromise"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;BULLETIN BOARD SOFTWARE&quot;" target="&quot;DIFFERENT ERROR MESSAGES FOR USER EXISTENCE &quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The Bulletin Board Software allows Different Error Messages For User Existence which can be exploited for brute force attacks."</data>
  <data key="d5">"vulnerability exposure, attacker advantage"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;BRUTE FORCE ATTACK&quot;" target="&quot;FTP SERVER SOFTWARE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The FTP Server Software allows Brute Force Attack to be conducted due to different responses for non-existent and existing usernames."</data>
  <data key="d5">"authentication bypass, password exposure"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;SOFTWARE WITH INCORRECT DEFAULT PERMISSIONS&quot;" target="&quot;CWE-0212 - IMPROPER INPUT VALIDATION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Incorrect default permissions in software can exacerbate the risk associated with improper input validation by allowing unauthorized modification of files and data."</data>
  <data key="d5">"vulnerability amplification, security mismanagement"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;MEMORY MANAGEMENT FLAW&quot;" target="&quot;EXPOSED DATA IN NETWORK PACKETS AND LOCAL MEMORY ALLOCATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"A memory management flaw can result in exposed data within network packets or local memory allocations due to improper handling of resources."</data>
  <data key="d5">"data exposure, resource mismanagement"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;MEMORY MANAGEMENT FLAW&quot;" target="&quot;IMPROPER INITIALIZATION/SHUTDOWN OF RESOURCES&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"The improper initialization/shutdown of resources contributes to the memory management flaw by failing to clear sensitive information in reusable data structures correctly."</data>
  <data key="d5">"flaw causation, lifecycle security"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;MEMORY MANAGEMENT FLAW&quot;" target="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE USE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Uncleared sensitive information before reuse is a direct result of improper memory management practices leading to potential data exposure."</data>
  <data key="d5">"data exposure, lifecycle failure"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;IMPROPER INITIALIZATION/SHUTDOWN OF RESOURCES&quot;" target="&quot;FILE PERMISSIONS MANAGEMENT&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Effective file permissions management is crucial for mitigating improper initialization/shutdown issues that can lead to unauthorized access and modification of files."</data>
  <data key="d5">"security practices, resource control"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;FILE PERMISSIONS MANAGEMENT&quot;" target="&quot;RESOURCE LIFECYCLE MANAGEMENT&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Effective file permission management reinforces proper resource lifecycle practices ensuring that only authorized actions are performed on resources at each stage."</data>
  <data key="d5">"security enhancement, access control"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;SENSITIVE INFORMATION UNCLEARED BEFORE USE&quot;" target="&quot;CWE-0212 - IMPROPER INPUT VALIDATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Improper input validation can lead to uncleared sensitive information being exposed due to lack of proper data handling and validation."</data>
  <data key="d5">"data integrity, validation failure"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;CWE-226 - MEMORY MANAGEMENT FLAW&quot;" target="&quot;RESOURCE LIFECYCLE MANAGEMENT&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Proper resource lifecycle management can mitigate the risk of CWE-226 by ensuring resources are cleared and initialized correctly at each stage."</data>
  <data key="d5">"security practices, lifecycle control"</data>
  <data key="d6">chunk-eb9580695df69206d5ae3cb8f9e396f5</data>
</edge>
<edge source="&quot;CLEARTEXT TRANSMISSION OF SENSITIVE INFORMATION&quot;" target="&quot;NETWORK SNIFFING&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Adversaries utilize network sniffing techniques to exploit cleartext transmission vulnerabilities and capture sensitive information."</data>
  <data key="d5">"data exploitation, security threat"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;CLEARTEXT TRANSMISSION OF SENSITIVE INFORMATION&quot;" target="&quot;DESIGN FLAWS&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Design flaws facilitate the exploitation of cleartext transmission vulnerabilities by unauthorized actors."</data>
  <data key="d5">"vulnerability exploitation, security compromise"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;NETWORK SNIFFING&quot;" target="&quot;COMMUNICATION CHANNELS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Adversaries target communication channels for network sniffing to intercept and exploit data transmitted in cleartext."</data>
  <data key="d5">"network security breach, data interception"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;APPROPRIATE ACCESS PERMISSIONS&quot;" target="&quot;INSECURE DEFAULT PERMISSIONS (E.G., WORLD-WRITABLE FILES)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Applying appropriate access permissions helps mitigate the risks associated with insecure default settings."</data>
  <data key="d5">"security enhancement, risk reduction"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;ADVERSARIES&quot;" target="&quot;INTERMEDIARY NODES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Adversaries may exploit intermediary nodes to monitor and intercept data packets during transmission."</data>
  <data key="d5">"network exploitation, security breach"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;ADVERSARIES&quot;" target="&quot;SYSTEM CALL TRACING UTILITIES (E.G., TRUSS, STRACE)&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Tools like truss and strace can be misused by adversaries to trace system calls for security weaknesses."</data>
  <data key="d5">"security breach, tool misuse"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;ADVERSARIES&quot;" target="&quot;DEBUGGING CHANNELS (E.G., JTAG)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Unauthorized access to debugging channels like JTAG provides adversaries with opportunities for data interception and manipulation."</data>
  <data key="d5">"debugging misuse, security compromise"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;ROUTER ACCESS&quot;" target="&quot;SNIFFING ATTACK&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Access to routers can enable adversaries to perform sniffing attacks on network traffic."</data>
  <data key="d5">"network monitoring, data interception"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;PACKET DUMP ANALYSIS&quot;" target="&quot;ENCODING TECHNIQUES&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Even with encoding, packet dump analysis can reveal patterns that help decode information, posing a continued risk."</data>
  <data key="d5">"data exploitation, pattern recognition"</data>
  <data key="d6">chunk-e75a1595db4670470ac4e28b2363c830</data>
</edge>
<edge source="&quot;DEBUGGER&quot;" target="&quot;AUTOMATED STATIC ANALYSIS (SAST)&quot;">
  <data key="d3">5.0</data>
  <data key="d4">"Both are tools used in software analysis but serve different purposes: Debugger is runtime monitoring while SAST checks code statically."</data>
  <data key="d5">"software analysis"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;SYSTEM-CALL TRACING UTILITIES (TRUSS/STRACE)&quot;" target="&quot;AUTOMATED STATIC ANALYSIS (SAST)&quot;">
  <data key="d3">4.0</data>
  <data key="d4">"Both are methods to analyze software behavior but operate differently; truss/strace at runtime, SAST in a static environment."</data>
  <data key="d5">"software analysis"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;SYSTEM ACTIVITY MONITORS (FILEMON, REGMON, PROCESS MONITOR)&quot;" target="&quot;SNIFFERS AND PROTOCOL ANALYZERS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Both monitor system activities but focus on different aspects; FileMon/RegMon track file and registry changes while sniffers analyze network traffic."</data>
  <data key="d5">"system monitoring"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;ENCRYPTION ALGORITHMS (NIST-RECOMMENDED)&quot;" target="&quot;SSL/TLS PROTOCOLS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"These algorithms are used to establish secure channels, supporting the encryption required by SSL/TLS for data transmission security."</data>
  <data key="d5">"data protection"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;PENETRATION TESTING&quot;" target="&quot;THREAT MODELING&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Both techniques aim at identifying security vulnerabilities but differ in approach; Penetration Testing involves simulation of attacks while Threat Modeling predicts potential threats."</data>
  <data key="d5">"security assessment"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;ATTACKER (GENERIC)&quot;" target="&quot;MAN-IN-THE-MIDDLE (MITM) ATTACK&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attacker employs the MITM technique to intercept and possibly modify data in transit."</data>
  <data key="d5">"intercept, alter communication"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;ATTACKER (GENERIC)&quot;" target="&quot;EXPLOITING WEAK ENCRYPTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The attacker takes advantage of weak encryption protocols to gain unauthorized access."</data>
  <data key="d5">"exploit, unauthorized access"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;IMPLEMENT STRONG ENCRYPTION PROTOCOLS&quot;" target="&quot;UNENCRYPTED DATA TRANSMISSION&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Using strong encryption protocols helps mitigate the risk of transmitting data in plaintext."</data>
  <data key="d5">"protect sensitive information"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;DESIGN SECURE HARDWARE PLATFORMS&quot;" target="&quot;EXPLOITING WEAK ENCRYPTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Ensuring hardware platforms are designed securely helps prevent exploitation of weak encryption."</data>
  <data key="d5">"prevent unauthorized access"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;UNENCRYPTED DATA TRANSMISSION&quot;" target="&quot;MAN-IN-THE-MIDDLE (MITM) ATTACK&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The MITM attack targets data transmitted in plaintext, making it easier to intercept and manipulate."</data>
  <data key="d5">"intercept sensitive information"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;MISSING SECURE FLAGS (HTTPS COOKIES)&quot;" target="&quot;EXPLOITING WEAK ENCRYPTION&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"This technique targets the lack of secure flags on cookies, allowing attackers to intercept session tokens."</data>
  <data key="d5">"intercept session tokens"</data>
  <data key="d6">chunk-5ba67b7953cc742d67bd66028d9840d5</data>
</edge>
<edge source="&quot;MISSING CRYPTOGRAPHIC STEP&quot;" target="&quot;PRODUCT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The product may not implement proper cryptographic steps, making it vulnerable to attacks that exploit weakened encryption."</data>
  <data key="d5">"Vulnerability, Encryption Weakness"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;MISSING CRYPTOGRAPHIC STEP&quot;" target="&quot;URLCLASSLOADER&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The URLClassLoader may not be used properly in the product leading to missing cryptographic steps."</data>
  <data key="d5">"Insecure Usage, Vulnerability"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;MISSING CRYPTOGRAPHIC STEP&quot;" target="&quot;AUTHENTICATION BYPASS USING PUBLIC KEY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker can use a missing cryptographic step to bypass authentication."</data>
  <data key="d5">"Exploit, Security Weakness"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;SECURE CODING PRACTICES (CERT ORACLE STANDARD)&quot;" target="&quot;AUTHENTICATION BYPASS USING PUBLIC KEY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Adhering to secure coding practices can prevent the exploitation of missing cryptographic steps."</data>
  <data key="d5">"Prevention, Security Compliance"</data>
  <data key="d6">chunk-ce9349a8e53d18b31a1043da3b9bb4bc</data>
</edge>
<edge source="&quot;PRODUCT (INTERMEDIARY APPLICATION)&quot;" target="&quot;EXTERNAL ACTOR &quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The intermediary application forwards requests to the external actor without preserving the original source identity, leading the target to believe it is receiving a legitimate request from the intermediary system."</data>
  <data key="d5">"identity preservation failure, misdirection"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;PRODUCT (INTERMEDIARY APPLICATION)&quot;" target="&quot;UPSTREAM COMPONENT &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The upstream component sends requests to the intermediary application which forwards these requests to external actors."</data>
  <data key="d5">"request forwarding, identity preservation failure"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;PRODUCT (INTERMEDIARY APPLICATION)&quot;" target="&quot;TARGET SYSTEM &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The intermediary product forwards the request to the target system without preserving the original source identity, leading to misidentification."</data>
  <data key="d5">"security vulnerability, access control bypass"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;PRODUCT (INTERMEDIARY APPLICATION)&quot;" target="&quot;INITIATOR &quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The initiator sends requests through the intermediary application which forwards these to the target system while maintaining identity preservation."</data>
  <data key="d5">"transaction integrity, security compliance"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;REQUEST OR DIRECTIVE &quot;" target="&quot;CONFUSED DEPUTY PROBLEM &quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Requests can be exploited by attackers leading to instances where intermediaries are tricked into performing actions that they should not."</data>
  <data key="d5">"security vulnerability, misidentification"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;CONFUSED DEPUTY PROBLEM &quot;" target="&quot;STRONG MUTUAL AUTHENTICATION MECHANISM &quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Implementing strong mutual authentication can prevent instances of confused deputy by ensuring that identities are accurately verified and preserved throughout transactions."</data>
  <data key="d5">"security measure, identity verification"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;CONFUSED DEPUTY PROBLEM &quot;" target="&quot;MUTUAL AUTHENTICATION &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Implementing mutual authentication can prevent instances of confused deputy by ensuring identities are verified at every stage."</data>
  <data key="d5">"security measure, identity verification"</data>
  <data key="d6">chunk-cf2bb615b405ec5f79b3729ede5b6486</data>
</edge>
<edge source="&quot;UNINTENDED PROXY/INTERMEDIARY VULNERABILITY EXPLOITATION ATTACK PATTERN&quot;" target="&quot;ROUTING DETOUR ATTACK TECHNIQUE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The routing detour attack technique is used in the unintended proxy/intermediary vulnerability scenario to redirect traffic."</data>
  <data key="d5">"indirect access, network manipulation"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;INSUFFICIENT DOCUMENTATION FOR DESIGN AND IMPLEMENTATION&quot;" target="&quot;WEB-BASED MAIL PROGRAM AND WIRELESS ACCESS POINT SYSTEMS&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Lack of proper documentation affects the ability to secure systems like web-based mail programs and wireless access points effectively."</data>
  <data key="d5">"security weakness, maintenance difficulty"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;CVE-2009-0037&quot;" target="&quot;URL-DOWNLOADING LIBRARY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The vulnerability (CVE-2009-0037) affects the URL-downloading library by making it follow redirects to file:// and scp:// URLs, leading to potential security issues."</data>
  <data key="d5">"software misconfiguration, security risk"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC&quot;" target="&quot;SYSTEM-ON-A-CHIP (SOC)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The improper isolation issue directly affects the functionality and security of the System-on-a-Chip by allowing untrusted access to shared resources."</data>
  <data key="d5">"system vulnerability, security flaw"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;IMPROPER ISOLATION OF SHARED RESOURCES ON SOC&quot;" target="&quot;BASEBOARD MANAGEMENT CONTROLLER (BMC)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Similar to improper isolation risks, BMC vulnerabilities can allow unauthorized access to the physical address space, impacting system security."</data>
  <data key="d5">"system security risk, vulnerability"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;DMA DEVICE ENABLED TOO EARLY IN BOOT PHASE&quot;" target="&quot;IOMMU&quot;">
  <data key="d3">10.0</data>
  <data key="d4">"Mitigation measures involving IOMMUs can prevent DMA attacks by properly controlling IO access during the boot phase."</data>
  <data key="d5">"mitigation strategy, security enhancement"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;DMA DEVICE ENABLED TOO EARLY IN BOOT PHASE&quot;" target="&quot;EARLY BOOT IPS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"During early boot phases, certain IP addresses or devices (early boot IPs) may be enabled before proper security settings are established, posing significant risks of DMA attacks."</data>
  <data key="d5">"boot phase vulnerability, hardware risk"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;DMA DEVICE ENABLED TOO EARLY IN BOOT PHASE&quot;" target="&quot;SECURITY CONFIGURATION SETTINGS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Properly configured and enforced security settings can mitigate the risk of enabling DMA-capable devices too early during boot-up phases."</data>
  <data key="d5">"security setting enforcement, mitigation strategy"</data>
  <data key="d6">chunk-155e5cca5e90d88780b67dd7b487829a</data>
</edge>
<edge source="&quot;IOMMU&quot;" target="&quot;BYPASS PROTECTION MECHANISM&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"An IOMMU could be used as part of the protection mechanism against unauthorized memory accesses, but improper implementation might allow bypassing."</data>
  <data key="d5">"protection, exploitation potential"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;JTAG INTERFACE&quot;" target="&quot;IMPROPER ACCESS CONTROL&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The J-tag interface is a key element that can be exploited due to improper access control settings."&lt;SEP&gt;"The JTAG interface is a key element that can be exploited due to improper access control settings."</data>
  <data key="d5">"vulnerability exposure, exploit potential"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL&quot;" target="&quot;BYPASS PROTECTION MECHANISM&quot;">
  <data key="d3">20.0</data>
  <data key="d4">"Improper access control enables attackers to bypass protection mechanisms and gain unauthorized access."</data>
  <data key="d5">"security breach, vulnerability exploitation"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL&quot;" target="&quot;READ APPLICATION DATA / READ MEMORY&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The absence of proper access controls can lead to attacks where data is read from memory without authorization."</data>
  <data key="d5">"unauthorized access, data leakage"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL&quot;" target="&quot;EXECUTE UNAUTHORIZED CODE OR COMMANDS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Attackers exploit improper access control to execute unauthorized code on the system."</data>
  <data key="d5">"code execution, security breach"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL&quot;" target="&quot;MODIFY MEMORY / MODIFY APPLICATION DATA&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Without proper controls in place, attackers can modify data stored in memory and applications."</data>
  <data key="d5">"data integrity compromise, vulnerability exploitation"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;IMPROPER ACCESS CONTROL&quot;" target="&quot;SCAN CHAIN&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"A scan chain can be exploited for unauthorized access if proper controls are not in place."</data>
  <data key="d5">"vulnerability exposure, data leakage"</data>
  <data key="d6">chunk-b2db9bd0b7df158579fa4f955ca5f332</data>
</edge>
<edge source="&quot;BYPASS PROTECTION MECHANISM&quot;" target="&quot;SOFTWARE WITH DEBUG FEATURES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The presence of debug features allows attackers to bypass protective mechanisms, leading to unauthorized access."</data>
  <data key="d5">"debugging features, security lock bypass"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;BYPASS PROTECTION MECHANISM&quot;" target="&quot;RISKY CRYPTOGRAPHIC PRIMITIVE IMPLEMENTATION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"A risky cryptographic primitive implementation can be exploited by attackers to bypass security mechanisms, undermining the overall system's security."</data>
  <data key="d5">"vulnerability exploitation, cryptographic weakening"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;BYPASS PROTECTION MECHANISM&quot;" target="&quot;SYSTEM CONFIGURATION LOCK PROTECTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The system configuration lock protection can be bypassed by attackers exploiting weaknesses, leading to unauthorized modifications."</data>
  <data key="d5">"security lock, data integrity"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;ADVERSARY&quot;" target="&quot;RESERVED BITS MANIPULATION SOFTWARE&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"An adversary uses Reserved Bits Manipulation Software to exploit reserved bits within the SoC architecture."&lt;SEP&gt;"An adversary uses reserved bits manipulation software to exploit reserved bits within the SoC architecture."</data>
  <data key="d5">"exploitation tool usage"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;ENABLE UNTRUSTED IPS BEFORE SECURITY INITIALIZATION ATTACK MODE&quot;" target="&quot;SYSTEM-ON-CHIP (SOC)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"This attack mode targets the SoC during boot-up, enabling untrusted components before security measures are in place."</data>
  <data key="d5">"boot sequence vulnerability"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;RESERVED BITS DEBUGGING TECHNIQUE&quot;" target="&quot;SYSTEM-ON-CHIP (SOC)&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"This technique targets flaws in the SoC design where reserved bits can be manipulated, leading to security breaches."</data>
  <data key="d5">"vulnerability exploitation"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;RESERVED BITS DEBUGGING TECHNIQUE&quot;" target="&quot;DISABLE RESERVED BITS MECHANISM&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The mitigation measure aims to neutralize the threat posed by exploiting reserved bits during debugging and development phases."</data>
  <data key="d5">"security enhancement"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;GRANULAR ACCESS CONTROL IMPLEMENTATION&quot;" target="&quot;INSUFFICIENT GRANULARITY OF ACCESS CONTROL&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"This tactic seeks to address broad access control weaknesses, thereby reducing risks associated with unauthorized access to critical assets."</data>
  <data key="d5">"security improvement"</data>
  <data key="d6">chunk-0e7e0a03ef0aaa003fbaeb20b6671acf</data>
</edge>
<edge source="&quot;ACCESS CONTROL POLICY WEAKNESSES&quot;" target="&quot;SOFTWARE MODULE (COMMONLY SET BY BIOS/BOOTLOADER)&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Weak access control policies allow unauthorized software modules to expose assets, making them vulnerable to attacks."</data>
  <data key="d5">"vulnerability exposure, policy weakness impact"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;ACCESS CONTROL POLICY WEAKNESSES&quot;" target="&quot;UNAUTHORIZED AGENTS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Unauthorized agents exploit weak access control policies to gain unauthorized access."</data>
  <data key="d5">"exploit opportunity, security breach"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;ACCESS CONTROL POLICY WEAKNESSES&quot;" target="&quot;SENSITIVE KEY MATERIAL&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Sensitive key material can be compromised through improper access controls allowing unauthorized agent access."</data>
  <data key="d5">"data compromise risk, access control failure impact"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;HARDWARE IP PARAMETERS AND REGISTER DEFAULTS ISSUE&quot;" target="&quot;TRUSTED FIRMWARE (BOOT FIRMWARE)&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Incorrectly defined hardware parameters and defaults can lead trusted firmware into configuring the system in an insecure state at startup."</data>
  <data key="d5">"hardware insecurity, firmware configuration impact"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;TRUSTED FIRMWARE (BOOT FIRMWARE)&quot;" target="&quot;DEVICE CONFIGURATION&quot;">
  <data key="d3">10.0</data>
  <data key="d4">"The trusted firmware sets up initial device configuration which is critical for the system’s secure operation."</data>
  <data key="d5">"initial setup, security criticality"</data>
  <data key="d6">chunk-0f1339a1fe7a6f1e0feebb426140abf0</data>
</edge>
<edge source="&quot;UNTRUSTED SOFTWARE COMPONENT (MODULE B)&quot;" target="&quot;WRITE-ONCE REGISTERS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"An untrusted software component exploits write-once registers to modify system settings before a trusted module has the chance, leading to security flaws."</data>
  <data key="d5">"race condition, exploitation"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;TRUSTED FIRMWARE OR BOOTLOADER&quot;" target="&quot;PROTECTED LOCKED REGISTERS&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The trusted firmware or bootloader sets and locks protected regions during the boot process to prevent unauthorized modifications."</data>
  <data key="d5">"secure configuration, protection"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;REGISTER LOCK CONTROL BITS&quot;" target="&quot;WRITE-ONCE REGISTERS&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Improperly implemented register lock control bits can lead to vulnerabilities in write-once registers where untrusted software exploits race conditions."</data>
  <data key="d5">"misconfiguration, security flaw"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;FUNCTIONAL REQUIREMENT&quot;" target="&quot;SECURITY REQUIREMENT&quot;">
  <data key="d3">6.0</data>
  <data key="d4">"Conflicts between the need for some addresses to be writable and the requirement that system configuration lock bits must remain set after boot process."</data>
  <data key="d5">"conflict, operational needs"</data>
  <data key="d6">chunk-2383be72a89b6aa12cccddc9b5c9b0d8</data>
</edge>
<edge source="&quot;SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)&quot;" target="&quot;ATTACKERS&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Attackers exploit design flaws to modify settings managed by trusted software modules."&lt;SEP&gt;"Attackers may exploit vulnerabilities in the trusted software module to gain unauthorized access."</data>
  <data key="d5">"exploitation, vulnerability"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT PROTECTION FEATURE&quot;" target="&quot;REGISTER SETTINGS &quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The lock bit protection feature is designed to secure register settings from modification."</data>
  <data key="d5">"security measure, configuration control"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT PROTECTION FEATURE&quot;" target="&quot;DESIGN OR CODING ERRORS &quot;">
  <data key="d3">12.0</data>
  <data key="d4">"Coding errors can undermine the effectiveness of lock bit protection mechanisms."&lt;SEP&gt;"Flaws in the implementation of lock bit protection can undermine its effectiveness."</data>
  <data key="d5">"security flaw, vulnerability"&lt;SEP&gt;"vulnerability, security flaw"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;LOCK BIT PROTECTION FEATURE&quot;" target="&quot;PROTECTED REGISTERS/ADDRESS REGIONS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Lock bit protection secures specific hardware components from unauthorized modifications."</data>
  <data key="d5">"security measure, configuration control"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;WRITE-ONCE RESTRICTIONS&quot;" target="&quot;REGISTER SETTINGS &quot;">
  <data key="d3">20.0</data>
  <data key="d4">"Write-once restrictions are applied to certain registers to prevent reprogramming after initial boot."&lt;SEP&gt;"Write-once restrictions protect register settings from unauthorized modification after initial boot."</data>
  <data key="d5">"data integrity, security measure"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;WRITE-ONCE RESTRICTIONS&quot;" target="&quot;DESIGN OR CODING ERRORS &quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Flaws in design can prevent write-once restrictions from functioning properly."</data>
  <data key="d5">"security flaw, implementation error"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;TRUSTED FIRMWARE/SOFTWARE MODULE (E.G., BIOS/BOOTLOADER)&quot;" target="&quot;INTEGRATED CIRCUITS AND HARDWARE IP SOFTWARE PROGRAMMABLE CONTROLS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Trusted firmware/software modules configure and initialize programmable hardware components."</data>
  <data key="d5">"initialization, configuration control"</data>
  <data key="d6">chunk-edc0b7b8ef9d117a05387c6abf439ce2</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;SOFTWARE (EXPLOITING LOCK BIT WEAKNESSES)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker uses malicious software to exploit weaknesses in the lock bit protection mechanism."</data>
  <data key="d5">"exploitation, vulnerability misuse"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;MALICIOUS SOFTWARE EXPLOITING LOCK BIT WEAKNESSES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker uses malicious software to exploit weaknesses in the lock bit protection mechanism."</data>
  <data key="d5">"exploitation, vulnerability misuse"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;POWER STATE TRANSITIONS WEAKNESSES (HIDDEN DANGERS)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An attacker may exploit weaknesses during power state transitions to gain unauthorized access."</data>
  <data key="d5">"time-based attack, vulnerability exploitation"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;DES (DATA ENCRYPTION STANDARD)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"The adversary can use brute force attack techniques to defeat DES encryption, exploiting the short key length to render systems insecure."</data>
  <data key="d5">"vulnerability exploitation, practical attacks"</data>
  <data key="d6">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;REVIEW RECOMMENDATIONS (MITIGATION)&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"By adhering to strong cryptographic recommendations, organizations can mitigate the risk of their systems being targeted by attackers exploiting weak crypto primitives."</data>
  <data key="d5">"risk reduction, secure practices"</data>
  <data key="d6">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</edge>
<edge source="&quot;ADVERSARY (ATTACKER)&quot;" target="&quot;SECURITY COMPLIANCE (MITIGATION)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Ensuring compliance with established security standards mitigates the risk of systems being targeted by attackers exploiting weak crypto primitives."</data>
  <data key="d5">"secure practices, risk reduction"</data>
  <data key="d6">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</edge>
<edge source="&quot;DESIGN INCONSISTENCY IN LOCK BIT PROTECTION MECHANISM&quot;" target="&quot;SYSTEM CONFIGURATION PROTECTED BY LOCK BITS (TARGET OBJECT)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Inadequate design of lock bits allows attackers to target and modify system configurations despite lockdown."</data>
  <data key="d5">"vulnerability exposure, security compromise"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;SYSTEM CONFIGURATION PROTECTED BY LOCK BITS (TARGET OBJECT)&quot;" target="&quot;LOCK BIT PROTECTION MECHANISM DESIGN FLAW (HIDDEN DANGERS)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Inadequate design of lock bits allows attackers to target and modify system configurations despite lockdown."</data>
  <data key="d5">"vulnerability exposure, security compromise"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;SYSTEM CONFIGURATION PROTECTED BY LOCK BITS (TARGET OBJECT)&quot;" target="&quot;SECURITY AUDIT PROCESS FOR LOCK BIT PROTECTION MECHANISMS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The audit process aims to ensure that system configurations remain secure by testing and identifying weaknesses in lock bits."</data>
  <data key="d5">"security validation, risk reduction"</data>
  <data key="d6">chunk-2ccff7f000ca8ceb65b49c7c3183348d</data>
</edge>
<edge source="&quot;HARDWARE PRODUCT WITH DEBUG FEATURES&quot;" target="&quot;CLEARING MECHANISMS FAILURE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The presence of debug features in a hardware product may lead to clearing mechanisms failing when transitioning between different operating modes or users."</data>
  <data key="d5">"debugging features, security lock bypass"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION OF HARDWARE REGISTER ATTACK&quot;" target="&quot;CLEARING MECHANISMS FAILURE&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"An attack based on improper zeroization often exploits the failure in proper implementation and use of clearing mechanisms for hardware registers."</data>
  <data key="d5">"vulnerability exploitation, data leakage"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;SOFTWARE WITH DEBUG FEATURES&quot;" target="&quot;SECURE DEBUGGING MODE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Secure debugging modes help mitigate the risks associated with debug features by ensuring that any bypass modes are properly authenticated."</data>
  <data key="d5">"security enhancement, risk mitigation"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;" target="&quot;REGISTER CLEARING MECHANISMS&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Proper implementation of clearing mechanisms mitigates the improper zeroization vulnerability by ensuring sensitive data is cleared when transitioning users."</data>
  <data key="d5">"mitigation, security improvement"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;IMPROPER ZEROIZATION VULNERABILITY&quot;" target="&quot;HARDWARE IP USER SWITCHING&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"During user switching in hardware IPs, the improper zeroization vulnerability can be exploited to gain unauthorized access and extract sensitive data."</data>
  <data key="d5">"transition vulnerability, data leakage"</data>
  <data key="d6">chunk-732e47f37276f678a57ed5b2cc4caaa0</data>
</edge>
<edge source="&quot;DES (DATA ENCRYPTION STANDARD)&quot;" target="&quot;BRUTE FORCE ATTACK TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"DES is a target for brute force attacks due to its 56-bit key length, making it vulnerable to such attack techniques."</data>
  <data key="d5">"weakness exposure, practical vulnerability"</data>
  <data key="d6">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</edge>
<edge source="&quot;DES (DATA ENCRYPTION STANDARD)&quot;" target="&quot;WEAKNESS IN CRYPTOGRAPHY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The weakness of a cryptographic primitive like DES makes it vulnerable to brute-force attacks due to its short key length."</data>
  <data key="d5">"practical vulnerability"</data>
  <data key="d6">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</edge>
<edge source="&quot;WEAKNESS IN CRYPTOGRAPHY&quot;" target="&quot;HARDWARE IMPLEMENTATION (TARGET OBJECT)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The weaknesses in cryptographic primitives deployed on hardware can lead to vulnerabilities that are hard to patch post-production."</data>
  <data key="d5">"security risk, non-easily patchable"</data>
  <data key="d6">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</edge>
<edge source="&quot;WEAKNESS IN CRYPTOGRAPHY&quot;" target="&quot;CUSTOM OR PRIVATE ALGORITHMS (MITIGATION)&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Avoidance of custom or private cryptographic algorithms helps prevent the deployment of systems with inherent weaknesses that can be exploited."</data>
  <data key="d5">"prevention, secure practices"</data>
  <data key="d6">chunk-0ba9bcc27d44c280c13ec45a0c7dae7c</data>
</edge>
<edge source="&quot;MD5, SHA1, DES&quot;" target="&quot;CRYPTOGRAPHIC AGILITY&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Systems vulnerable due to MD5 and SHA1 should leverage cryptographic agility for upgrading to stronger algorithms."</data>
  <data key="d5">"vulnerability mitigation, security upgrade"</data>
  <data key="d6">chunk-a8ce63219639ac3ccda8f5f97256d087</data>
</edge>
<edge source="&quot;CHIP IMPLEMENTING BLUETOOTH WITH LOW-ENTROPY PRNG&quot;" target="&quot;CVE-2020-6616&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The chip implementing Bluetooth uses a low-entropy PRNG, which is the root cause of the vulnerability documented by CVE-2020-6616."</data>
  <data key="d5">"vulnerability exploitation"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;CHIP IMPLEMENTING BLUETOOTH WITH LOW-ENTROPY PRNG&quot;" target="&quot;ATTACKER EXPLOITING PRNG VULNERABILITY&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"An attacker exploiting the low-entropy PRNG in a Bluetooth chip can perform spoofing attacks, compromising system security."</data>
  <data key="d5">"exploitation method, vulnerability context"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;SPOOFING ATTACK&quot;" target="&quot;CVE-2020-6616&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"The spoofing attack technique can be directly applied to exploit the vulnerability in CVE-2020-6616, allowing attackers to masquerade as legitimate entities."</data>
  <data key="d5">"vulnerability exploitation, attacker method"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;CVE-2020-6616&quot;" target="&quot;HARDWARE RNG REQUIREMENT&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Implementing a hardware random number generator (TRNG) as a mitigation measure can prevent the vulnerability in CVE-2020-6616 from being exploited."</data>
  <data key="d5">"mitigation against vulnerability"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;INSUFFICIENT ENTROPY IN DRBG&quot;" target="&quot;DUAL_EC_DRBG IMPLEMENTATION VULNERABILITY&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Both techniques exploit the lack of sufficient entropy and proper implementation details leading to potential plaintext recovery attacks."</data>
  <data key="d5">"entropy deficiency impact"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;DUAL_EC_DRBG IMPLEMENTATION VULNERABILITY&quot;" target="&quot;POINT Q CONSTANTS SIMPLIFY DECRYPTION&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Simplified decryption due to point Q constants is a part of the broader context of the Dual_EC_DRBG implementation issue, impacting cryptographic security."</data>
  <data key="d5">"related attack vectors"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;DUAL_EC_DRBG IMPLEMENTATION VULNERABILITY&quot;" target="&quot;CVE-2014-4192&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The vulnerability in the Dual_EC_DRBG implementation (CVE-2014-4192) highlights issues with incorrect handling of byte requests, affecting cryptographic security."</data>
  <data key="d5">"related vulnerabilities, technical flaws"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;POINT Q CONSTANTS SIMPLIFY DECRYPTION&quot;" target="&quot;CVE-2007-6755&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"The vulnerability related to point Q constants (CVE-2007-6755) exemplifies how specific algorithm weaknesses can be exploited for decryption simplification."</data>
  <data key="d5">"related vulnerabilities, attack vectors"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;MT_RAND FUNCTION USAGE&quot;" target="&quot;CVE-2019-1715&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The mt_rand() function usage and its vulnerabilities contribute to the broader issue of insufficient entropy in random number generation systems as seen with CVE-2019-1715."</data>
  <data key="d5">"vulnerability context, software flaw"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;CRYPTOGRAPHY TERMINOLOGY VARIANCE&quot;" target="&quot;TRUE RANDOM NUMBER GENERATOR (TRNG)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The variability in terminology around TRNGs reflects the need for precise definitions to ensure security and usability across different stakeholder communities."</data>
  <data key="d5">"terminological clarity, cryptographic implementation"</data>
  <data key="d6">chunk-e70013d85904f7d1efc7a9e808395e0a</data>
</edge>
<edge source="&quot;DISABLE DEBUG ACCESS MITIGATION MEASURES&quot;" target="&quot;SENSITIVE NON-VOLATILE INFORMATION NOT PROTECTED DURING DEBUG VULNERABILITY&quot;">
  <data key="d3">10.0</data>
  <data key="d4">"Mitigation measures aim to prevent unauthorized access by disabling debug features that expose sensitive information stored in fuses."</data>
  <data key="d5">"security enhancement, vulnerability mitigation"</data>
  <data key="d6">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</edge>
<edge source="&quot;SENSITIVE NON-VOLATILE INFORMATION NOT PROTECTED DURING DEBUG VULNERABILITY&quot;" target="&quot;SECURITY-SENSITIVE INFORMATION STORED IN FUSES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"This vulnerability allows attackers to access sensitive information during debug operations because the data is not adequately protected."</data>
  <data key="d5">"data exposure, security breach"</data>
  <data key="d6">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</edge>
<edge source="&quot;DEBUG ACCESS LEVEL MISCONFIGURATION HIDDEN DANGER&quot;" target="&quot;INTERNAL ASSET EXPOSED TO UNSAFE DEBUG ACCESS LEVEL OR STATE ATTACK TECHNIQUE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A hidden danger arises from misconfigurations of debug access levels that can be exploited by attackers using specific attack techniques."</data>
  <data key="d5">"misconfiguration risk, security loophole exploitation"</data>
  <data key="d6">chunk-e691098d0c2c88a9a4a0420c61274c1e</data>
</edge>
<edge source="&quot;FAULTY FSM DESIGN&quot;" target="&quot;JTAG ACCESS WEAKNESS&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"A faulty FSM design is related to JTAG access weaknesses that allow unauthorized system control before secure-boot execution."&lt;SEP&gt;"A faulty finite state machine design is related to JTAG access weaknesses that allow unauthorized system control before secure-boot execution."</data>
  <data key="d5">"vulnerability correlation, hardware flaw"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;FAULTY FSM DESIGN&quot;" target="&quot;DENIAL OF SERVICE (TACTIC)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"A faulty finite state machine design enables denial of service conditions through system instability or unexpected states."</data>
  <data key="d5">"hardware vulnerability, DoS"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;FAULTY FSM DESIGN&quot;" target="&quot;GAIN PRIVILEGES (TACTIC)&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Exploiting faulty finite state machines enables system instability leading to privilege escalation opportunities for attackers."</data>
  <data key="d5">"privilege escalation, hardware exploit"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;IMPROPER WRITE HANDLING&quot;" target="&quot;WEAR LEVELING TECHNIQUE&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"Improper handling of wear leveling techniques can lead to non-uniform wear and potential attacker exploitation."</data>
  <data key="d5">"wear leveling failure, security risk"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;IMPROPER WRITE HANDLING&quot;" target="&quot;DENIAL OF SERVICE (TACTIC)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Improper handling of wear leveling operations facilitates storage unreliability and denial of service attacks."</data>
  <data key="d5">"wear failure, DoS attack"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;IMPROPER WRITE HANDLING&quot;" target="&quot;GAIN PRIVILEGES (TACTIC)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Improper handling of wear leveling techniques facilitates storage unreliability and allows attackers to gain additional privileges."</data>
  <data key="d5">"privilege escalation, storage exploit"</data>
  <data key="d6">chunk-a486a4935548559d90f50ff1c1104c21</data>
</edge>
<edge source="&quot;VOLTAGE GLITCH ATTACK TECHNIQUE&quot;" target="&quot;CHAIN OF TRUST&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"The voltage glitch attack can undermine the chain of trust by exploiting vulnerabilities in hardware or firmware, leading to potential breaches."</data>
  <data key="d5">"security breach risk"</data>
  <data key="d6">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</edge>
<edge source="&quot;CLOCK GLITCH ATTACK TECHNIQUE&quot;" target="&quot;DEBUG INTERFACE SECURITY LOGIC&quot;">
  <data key="d3">12.0</data>
  <data key="d4">"An attacker could use clock glitches to bypass security measures on debug interfaces if not properly mitigated."</data>
  <data key="d5">"exploitation risk"</data>
  <data key="d6">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</edge>
<edge source="&quot;WEAR LEVELING ALGORITHM&quot;" target="&quot;STORAGE HARDWARE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The wear leveling algorithm is implemented in storage hardware to ensure even distribution of write operations and enhance data integrity and longevity."</data>
  <data key="d5">"data protection, wear management"</data>
  <data key="d6">chunk-f33f72f8ec6e026ca0374d2967ab51e1</data>
</edge>
<edge source="&quot;PLUNDERVOLT AND CLKSCREW ATTACKS&quot;" target="&quot;DYNAMIC VOLTAGE AND FREQUENCY SCALING (DVFS)&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"These attack techniques exploit the DVFS feature in SoCs for malicious purposes."</data>
  <data key="d5">"Exploit"</data>
  <data key="d6">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</edge>
<edge source="&quot;ANTI-GLITCH PROTECTIONS&quot;" target="&quot;SECURE BOOT AND EFUSES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Anti-glitch protections are necessary to safeguard secure boot processes and protected eFuses from being compromised by physical attacks."</data>
  <data key="d5">"Protect, Mitigate"</data>
  <data key="d6">chunk-7eb84a76feac79b0109e4248d03155ec</data>
</edge>
<edge source="&quot;PRODUCT'S ARCHITECTURE&quot;" target="&quot;SHADOW COPIES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The product's architecture creates shadow copies but fails in ensuring that they remain consistent with the original resources, leading to potential security issues."</data>
  <data key="d5">"design flaw, synchronization issue"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;MIRRORED REGIONS WITH DIFFERENT VALUES&quot;" target="&quot;CONCURRENCY ISSUES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Concurrency issues can lead to inconsistent mirrored regions where shadow copies may diverge from the original values, causing vulnerabilities."</data>
  <data key="d5">"synchronization problem, data inconsistency"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;MIRRORED REGIONS WITH DIFFERENT VALUES&quot;" target="&quot;CONSISTENCY MECHANISMS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Effective consistency mechanisms can prevent mirrored regions from having different values, reducing the risk of vulnerabilities."</data>
  <data key="d5">"security enhancement, data integrity"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;RACING CONDITION BETWEEN ATTACKER AND UPDATE PROCESS&quot;" target="&quot;SPOOFED UPDATE REQUEST&quot;">
  <data key="d3">14.0</data>
  <data key="d4">"Both techniques exploit inconsistencies between mirrored copies and their originals in different ways to achieve unauthorized access."</data>
  <data key="d5">"technique overlap, timing-based exploitation"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;DISTRIBUTED SYSTEMS&quot;" target="&quot;INDEPENDENT COMPONENTS&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"In distributed systems, independent components each store and update their own local copies to maintain a consistent view of the overall system."</data>
  <data key="d5">"distributed architecture, component independence"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;CONSISTENCY MECHANISMS&quot;" target="&quot;SYSTEM-OF-SYSTEMS ARCHITECTURE&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"In system-of-systems architecture, consistency mechanisms are crucial to ensure that all interconnected systems maintain consistent states."</data>
  <data key="d5">"system integration, coordinated operation"</data>
  <data key="d6">chunk-a55d80a6593fc4c93fd4bb2778558e73</data>
</edge>
<edge source="&quot;INCORRECT SELECTION OF FUSE VALUES&quot;" target="&quot;MANIPULATING SECURITY CONFIGURATION VIA FUSES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Incorrect fuse selection allows attackers to manipulate the security configuration."</data>
  <data key="d5">"security misconfiguration, attack techniques"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;ATTACKER (INTERCEPTING SHADOW COPY COMPLETION MESSAGE)&quot;" target="&quot;INCONSISTENT SHADOW COPY UPDATES&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The attacker exploits the vulnerability in inconsistent shadow copy updates to create an out-of-sync situation."</data>
  <data key="d5">"exploitation, vulnerability"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;INTERCEPTING SHADOW COPY COMPLETION MESSAGES&quot;" target="&quot;ORIGINAL AND SHADOW COPIES&quot;">
  <data key="d3">9.0</data>
  <data key="d4">"Attack techniques target the communication between original and shadow copies by intercepting completion messages."</data>
  <data key="d5">"communication interception, targeted attacks"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;EXPLOITING ASYNCHRONOUS UPDATE VULNERABILITIES&quot;" target="&quot;INCONSISTENT SHADOW COPY UPDATES&quot;">
  <data key="d3">7.0</data>
  <data key="d4">"Tactics involve exploiting vulnerabilities in asynchronous update processes to cause inconsistencies."</data>
  <data key="d5">"exploitation, tactical approach"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;CPU HARDWARE CONFIGURATION&quot;" target="&quot;EXPLOITING NON-EXCLUSIVITY OF WRITE AND EXECUTE&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"Misconfigured hardware configuration is exploited to execute unauthorized code."</data>
  <data key="d5">"hardware vulnerability, execution privilege"</data>
  <data key="d6">chunk-654843afa7d21ff70e90b3e1ef92c37f</data>
</edge>
<edge source="&quot;INCORRECT COMPARISON LOGIC GRANULARITY&quot;" target="&quot;TIMIMG ATTACK &quot;">
  <data key="d3">32.0</data>
  <data key="d4">"A timing attack can be facilitated by incorrect comparison granularity as it allows an attacker to observe timing differences and infer correct values."&lt;SEP&gt;"An incorrect comparison logic granularity can be exploited through timing attacks to infer correct values from the system."</data>
  <data key="d5">"vulnerability, exploit"</data>
  <data key="d6">chunk-3765fb59247c8757d841cb1e549550cf</data>
</edge>
<edge source="&quot;BLOWN FUSES EXPLOITATION&quot;" target="&quot;SECURE SYSTEM DESIGN AGAINST BLOWN FUSES EXPLOITATION &quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Designing a system to resist blown fuses exploits involves ensuring that security is maintained even when fuses are altered."</data>
  <data key="d5">"security measure, vulnerability mitigation"</data>
  <data key="d6">chunk-3765fb59247c8757d841cb1e549550cf</data>
</edge>
<edge source="&quot;TIMIMG ATTACK &quot;" target="&quot;CONSTANT TIME COMPARISON LOGIC IMPLEMENTATION&quot;">
  <data key="d3">18.0</data>
  <data key="d4">"Implementing constant time comparison logic mitigates the risk of timing attacks by ensuring operations take the same amount of time regardless of input."</data>
  <data key="d5">"security measure, vulnerability mitigation"</data>
  <data key="d6">chunk-3765fb59247c8757d841cb1e549550cf</data>
</edge>
<edge source="&quot;NEGATIVE LOGIC VULNERABILITY&quot;" target="&quot;SYSTEM WITH NEGATIVE LOGIC FUSES&quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The system is vulnerable due to its use of negative logic in fuse-based security mechanisms."</data>
  <data key="d5">"vulnerability, design flaw"</data>
  <data key="d6">chunk-3765fb59247c8757d841cb1e549550cf</data>
</edge>
<edge source="&quot;RESOURCE REUSE VULNERABILITY&quot;" target="&quot;SENSITIVE INFORMATION IN RESOURCE NOT REMOVED BEFORE REUSE &quot;">
  <data key="d3">16.0</data>
  <data key="d4">"The Resource Reuse Vulnerability is an underlying issue that can lead to Sensitive Information being left behind when resources are reused."</data>
  <data key="d5">"data leakage, resource management failure"</data>
  <data key="d6">chunk-307fbbaf9cc5087b5dba49fab909abc3</data>
</edge>
<edge source="&quot;CVE-2010-1637&quot;" target="&quot;WEB-BASED MAIL PROGRAM&quot;">
  <data key="d3">8.0</data>
  <data key="d4">"The vulnerability (CVE-2010-1637) affects the web-based mail program by allowing internal network scanning."</data>
  <data key="d5">"vulnerability exploitation, network security"</data>
  <data key="d6">chunk-511f3baaabb0ab2809dad9343c0d0238</data>
</edge>
</graph></graphml>